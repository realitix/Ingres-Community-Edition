
/*
**	Copyright (c) 2004 Actian Corporation
*/

# include	<compat.h>
# include	<gl.h>
# include	<sl.h>
# include	<iicommon.h>
# include	<fe.h>
## include	<ooclass.qsh>
# include	<cu.h>
# include	<er.h>
# include	"ercu.h"
# include	<si.h>


/**
** Name:	cufrmout.c -    Copy a form out.
**
** Description:
**	Copies a form to a copyutil file.
**
**
** History:
**	30-Jul-1987 (Joe)
**		First Written
**	10/09/87 (dkh) - Fixed jup bug 1197.
**	2-feb-1988 (Joe)
**		Took out ranges, and made queries repeats.
**	05-sep-88 (kenl)
**		Changed QUEL to SQL.
**	09-nov-88 (marian)
**		Modified column names for extended catalogs to allow them
**		to work with gateways.
**	21-jan-1999 (hanch04)
**	    replace nat and longnat with i4
**	31-aug-2000 (hanch04)
**	    cross change to main
**	    replace nat and longnat with i4
**	15-Jan-2004 (kodse01)
**	    replace %ld with %d for old long nat variables.
**/

/* # define's */
/* GLOBALDEF's */
/* extern's */
/* static's */

/*{
** Name:	IICUcfoCopyFormOut	-  Copy a form to a file.
**
** Description:
**	Given a form name this copies the form's
**	definition to a copyutil file.  The layout for the fields
**	of the different form tables is given in the CURECORD
**	for the form objects.
**
** Inputs:
**	name		The name of the form to copy out.
**
**	class		The class of the form to copy out.
**			This is not used in this routine.  We copy
**			out any form we find.
**
**	notthereok	If this is TRUE, then the form not being
**			there is not an error.  Otherwise it is an
**			error.
**
**	fp		The file the output to.
**
** Outputs:
**	Returns:
**		OK if succeeded.
**		If notthereok is false and the form is not present
**		returns a failure status.
**
** History:
**	30-jul-1987 (Joe)
**		First Written
**	10/09/87 (dkh) - Fixed jup bug 1197.
**	2-feb-1988 (Joe)
**		Took out ranges, and made queries repeats.
*/
STATUS
IICUcfoCopyFormOut(name, class, notthereok, fp)
char	*name;
i4	class;
bool	notthereok;
FILE	*fp;
{
	EXEC SQL BEGIN DECLARE SECTION;
		/* II_FORMS fields, as ascii strings */

		i4	frmaxcol;
		i4	frmaxlin;
		i4	frposx;
		i4	frposy;
		i4	frfldno;
		i4	frnsno;
		i4	frtrimno;
		i4	frversion;
		i4	frscrtype;
		i4	frscrmaxx;
		i4	frscrmaxy;
		i4	frscrdpix;
		i4	frscrdpiy;
		i4	frflags;
		i4	fr2flags;
		i4	frtotflds;
		
		/* II_FIELDS, as ascii fields */

		i4	flseq;
		char	fldname[FE_MAXNAME+1];
		i4	fldatatype;
		i4	fllength;
		i4	flprec;
		i4	flwidth;
		i4	flmaxlin;
		i4	flmaxcol;
		i4	flposy;
		i4	flposx;
		i4	fldatawidth;
		i4	fldatalin;
		i4	fldatacol;
		char	fltitle[51];
		i4	fltitcol;
		i4	fltitlin;
		i4	flintrp;
		i4	fldflags;
		i4	fld2flags;
		i4	fldfont;
		i4	fldptsz;
		char	fldefault[51];
		char	flformat[51];
		char	flvalmsg[101];
		char	flvalchk[256];
		i4	fltype;
		i4	flsubseq;

		/* II_TRIM, as ascii fields */

		i4	trimcol;
		i4	trimlin;
		char	trimstring[151];
		i4	trimflags;
		i4	trim2flags;
		i4	trimfont;
		i4	trimptsz;
		i4	formid;
	EXEC SQL END DECLARE SECTION;

	STATUS	rval;

	/*
	** Write header records for object.
	*/

	if ((rval = cu_writeobj(OC_FORM, 0, name, fp, &formid)) != OK)
	{
	    return (notthereok ? OK : rval);
	}

	/*
	** Write out the detail lines for II_FORMS
	*/

	EXEC SQL REPEATED SELECT
		    frmaxcol, frmaxlin, frposx, frposy, frfldno, frnsno,
		    frtrimno, frversion, frscrtype, frscrmaxx, frscrmaxy,
		    frscrdpix, frscrdpiy, frflags, fr2flags, frtotflds
		 INTO
		    :frmaxcol, :frmaxlin, :frposx, :frposy, :frfldno, :frnsno,
		    :frtrimno, :frversion, :frscrtype, :frscrmaxx, :frscrmaxy,
		    :frscrdpix, :frscrdpiy, :frflags, :fr2flags, :frtotflds
		 FROM ii_forms
		 WHERE object_id = :formid;

	EXEC SQL BEGIN;

	    /* II_FORMS detail line. */
	    SIfprintf(fp, ERx("\t%d\t%d\t%d\t%d\t%d\t%d\t%d"),
		frmaxcol,
		frmaxlin,
		frposx,
		frposy,
		frfldno,
		frnsno,
		frtrimno);
	    SIfprintf(fp, ERx("\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\t%d\n"),
		frversion,
		frscrtype,
		frscrmaxx,
		frscrmaxy,
		frscrdpix,
		frscrdpiy,
		frflags,
		fr2flags,
		frtotflds);
	EXEC SQL END;
	if (FEinqerr() != 0)
	    return FEinqerr();

	/*
	** Write out the detail lines for II_FIELDS
	*/
	cu_wrcomp(CUC_FIELD, fp);
	EXEC SQL REPEATED SELECT
		    flseq, fldname, fldatatype, fllength, flprec,
		    flwidth, flmaxlin, flmaxcol, flposy, flposx,
		    fldatawidth, fldatalin, fldatacol, fltitle, fltitcol,
		    fltitlin, flintrp, fldflags, fld2flags, fldfont,
		    fldptsz, fldefault, flformat, flvalmsg, flvalchk,
		    fltype, flsubseq
		 INTO
		    :flseq, :fldname, :fldatatype, :fllength, :flprec,
		    :flwidth, :flmaxlin, :flmaxcol, :flposy, :flposx,
		    :fldatawidth, :fldatalin, :fldatacol, :fltitle, :fltitcol,
		    :fltitlin, :flintrp, :fldflags, :fld2flags, :fldfont,
		    :fldptsz, :fldefault, :flformat, :flvalmsg, :flvalchk,
		    :fltype, :flsubseq
		 FROM ii_fields
		 WHERE object_id = :formid;
	EXEC SQL BEGIN;
	    SIfprintf(fp, ERx("\t%d\t%s\t%d\t%d\t%d"),
		flseq,
		fldname,
		fldatatype,
		fllength,
		flprec);
	    SIfprintf(fp, ERx("\t%d\t%d\t%d\t%d\t%d"),
		flwidth,
		flmaxlin,
		flmaxcol,
		flposy,
		flposx);
	    SIfprintf(fp, ERx("\t%d\t%d\t%d\t%s\t%d\t%d"),
		fldatawidth,
		fldatalin,
		fldatacol,
		fltitle,
		fltitcol,
		fltitlin);
	    SIfprintf(fp, ERx("\t%d\t%d\t%d\t%d\t%d"),
		flintrp,
		fldflags,
		fld2flags,
		fldfont,
		fldptsz);
	    SIfprintf(fp, ERx("\t%s\t%s\t%s\t%s\t%d\t%d\n"),
		fldefault,
		flformat,
		flvalmsg,
		flvalchk,
		fltype,
		flsubseq);
	EXEC SQL END;
	if (FEinqerr() != 0)
	    return FEinqerr();

	/*
	** Write out the detail lines for II_TRIM
	*/
	cu_wrcomp(CUC_TRIM, fp);

	EXEC SQL REPEATED SELECT
		    trim_col, trim_lin, trim_trim, trim_flags, trim2_flags,
		    trim_font, trim_ptsz
		 INTO
		     :trimcol, :trimlin, :trimstring, :trimflags, :trim2flags,
		     :trimfont, :trimptsz
		 FROM ii_trim
		 WHERE object_id = :formid;
	EXEC SQL BEGIN;
	    SIfprintf(fp, ERx("\t%d\t%d\t%s\t%d\t%d\t%d\t%d\n"),
		trimcol,
		trimlin,
		trimstring,
		trimflags,
		trim2flags,
		trimfont,
		trimptsz);
	EXEC SQL END;
	return FEinqerr();
}
