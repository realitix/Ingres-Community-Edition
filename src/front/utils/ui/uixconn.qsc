
/*
**	Copyright (c) 2004 Actian Corporation
*/

# include	<compat.h> 
# include	<gl.h>
# include	<sl.h>
# include	<iicommon.h>
# include	<fe.h> 
## include	<ui.qsh> 
## include 	<uigdata.qsh>

/**
** Name:	uixcon.qsc - turn on or off exclusive DB connection
**
** Description:
** 		- turn on or off exclusive DB connection
**
**	This file defines:
**
**	IIUIxc1_xConnOn() Turn on exclusive db connection.
**
**	IIUIxc0_xConnOff() Turn off exclusive db connection.
**			
**/
/* globals */

/* defines */
/* statics */
static	i4	UIXC_connect_stat = OK;

/*{
** Name:	IIUIxc1_xConnOn()
**
** Description:
** Inputs:
**	none
** Outputs:
**	none
** Returns:
**		OK			successful
**		other			dbms error
**	Exceptions:
**		none
**
** Side Effects:
**	Tries to establish exclusive DB connection to current
**	database as defined by IIUIdbdata->database global.  If it fails,
**	there will be NO DB CONNECTION!!  Use IIUIxc0_xConnOff
**	to try to reestablish the connection.
** History:
**	18-mar-1988 (danielt) 
**		written
**	21-jan-1999 (hanch04)
**	    replace nat and longnat with i4
**	31-aug-2000 (hanch04)
**	    cross change to main
**	    replace nat and longnat with i4
*/

DB_STATUS
IIUIxc1_xConnOn()
{
	EXEC SQL BEGIN DECLARE SECTION;
	i4	 err_num;
	UIDBDATA *uidbdata;
	EXEC SQL END DECLARE SECTION;
	i4	ret_stat;

	if (UIXC_connect_stat == OK)
	{
		EXEC SQL DISCONNECT;
	}

	uidbdata = IIUIdbdata();
	EXEC SQL CONNECT :uidbdata->database 
		IDENTIFIED BY :uidbdata->suser
		WITH share = 'readers', mode = 'updating';
	EXEC SQL INQUIRE_INGRES (:err_num = errorno);
	
	if (err_num != 0)
	{
		ret_stat = FAIL;
	}
	else
	{
		ret_stat = OK;
	}
	UIXC_connect_stat= ret_stat;
	return (ret_stat);
}




/*{
** Name:	IIUIxc0_xConnOff()
**
** Description:
** Inputs:
**	none
** Outputs:
**	none
** Returns:
**		OK			successful
**		other			dbms error
**	Exceptions:
**		none
**
** Side Effects:
**	Tries to establish non-exclusive DB connection to current
**	database as defined by IIUIdbdata->database global.  If it fails,
**	there will be NO DB CONNECTION!!  
**	It is expected that a failure of this routine is
**	a nasty fatal error.
** History:
**	18-mar-1988 (danielt) 
**		written
*/

DB_STATUS
IIUIxc0_xConnOff()
{
	EXEC SQL BEGIN DECLARE SECTION;
	i4	 err_num;
	UIDBDATA *uidbdata;
	EXEC SQL END DECLARE SECTION;
	i4	ret_stat;

	if (UIXC_connect_stat == OK)
	{
		EXEC SQL DISCONNECT;
	}

	uidbdata = IIUIdbdata();
	EXEC SQL CONNECT :uidbdata->database 
		IDENTIFIED BY :uidbdata->suser
		WITH share = 'all users', mode = 'updating';
	EXEC SQL INQUIRE_INGRES (:err_num = errorno);
	
	if (err_num != 0)
	{
		ret_stat = FAIL;
	}
	else
	{
		ret_stat = OK;
	}
	UIXC_connect_stat= ret_stat;
	return (ret_stat);
}

