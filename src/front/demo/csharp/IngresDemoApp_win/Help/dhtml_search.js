/* Generated with AuthorIT version 4.3.495  10/11/2006 1:48:29 PM */
Page=new Array();
Page[0]=new Array("Welcome to the &quot;Frequent Flyer&quot; demonstration application, which is designed to introduce you to developing applications with Ingres, C#, Visual Studio 2005, and the .NET Data Provider 2.0. ","The application consists of the following:","A database supporting NFC Unicode data called &quot;demodb&quot; created when Ingres or the demonstration is installed. ","Sample data related to air travel—for example, airlines, airports, and routes. ","Sample code illustrating common functionality that an application developer may want to write. ","We hope that you find this application useful. If you have questions or comments, please raise an issue with Ingres Technical Support at www.actian.com/support/Support_Raise_an_Issue.html. ","Note: Knowledge of C# and Visual Studio is necessary to understand the examples. ","Welcome",
"1612.html");
Page[1]=new Array("The application consists of three functional areas:","Routes","Lets you find a route between airports, demonstrating the following: ","SELECT queries that require parameters","Execution of a row producing procedure","INSERT, UPDATE, and DELETE queries","Profile","Lets you select or create details for a &quot;Frequent Flyer,&quot; demonstrating the following:","Use of Unicode character types","Handling of binary large objects (BLOBs)","Connect","Lets you set up connection details to an Ingres instance.","Ingres Features Demonstrated",
"1582.html");
Page[2]=new Array("The application consists of the following source files: ","Forms.sc","Contains Windows frame definition, user interface forms, Ingres and help controls.","Routes.cs","Provides event handling and code to interface with user interface controls for the Routes function.","Profiles.cs","Provides event handling and code to interface with user interface controls for the Profile function.","Instance.cs","Provides event handling and code to interface with user interface controls for the Connect function.","Ingres.cs","Provides the interface with Ingres Data Adapter to interact with the demonstration database.","Source Code Files",
"1581.html");
Page[3]=new Array("The demodb schema consists of three tables. ","The tables Airport and Airline form master tables, and the Route table is a detail table.","Database Schema",
"dbschema.html");
Page[4]=new Array("The Routes form provides four items of information that are used to retrieve the flights result set:","Country","Region","Airport","Day","The following three parameters are used to filter data from the database:","Departing airport code","Arriving airport code","Operating days","The Return Journey parameter affects the query passed to Ingres for processing. ","The list of airports is reduced by restricting the available airports based on the country and region.","Airport code selection is composed of three form controls:","Form Control","Departing","Arriving","CountryComboBox","departingCountryComboBox","arrivingCountryComboBox","RegionComboBox","departingRegionComboBox","arrivingRegionComboBox","AirportComboBox","departingAirportComboBox","arrivingAirportComboBox","The Routes function uses a DataGridView control for displaying tabular results. ","In the following screen shot, the Country and Region selections have been used to return a list of airport codes and their equivalent airport names in a DataGridView. ","Routes Form",
"1613.html");
Page[5]=new Array("The values in the Departing and Arriving Country combo boxes are returned by a query from the database using an IngresDataAdapter control. ","Note: The following procedure assumes that a combo box has been placed on the Visual Studio design form.","To load the Country combo box control:","Add an IngresDataAdapter control. ","Construct the query.","Generate a DataSet.","Bind the combo box control to the DataSet.","Populate the DataSet.","How You Load the Country Combo Box Control",
"1579.html");
Page[6]=new Array("To add an IngresDataAdapter Control Using the Forms Designer","In Design view of Visual Studio, select and drag the IngresDataAdapter from the Tool Box onto the Windows Form design surface.","An &quot;ingresDataAdaptern&quot; component and its icon are added to the Visual Studio .NET designer component tray.","The welcome page of the Data Adapter Configuration Wizard is displayed.","You must configure a connection string before connecting to a database using a .NET application. ","To define a connection string","Enter the connection information using the Connection String Editor of the Ingres Data Adapter Configuration Wizard, and click OK:","The wizard generates the following connection string:","Host=(local);Port=II7;Database=demodb","Note: User ID and password are optional when connecting to a local Data Access Server and the current operating system logged-in user is also a valid Ingres user.","Note: Each IngresDataAdapter added to the project creates an IngresConnection object. For the purposes of this demonstration, the ingresConnection1 object (first connection object created) is used for each IngresDataAdapter added.","Add an IngresDataAdapter Control",
"1624.html");
Page[7]=new Array("To construct the SELECT statement, use the Query Designer, which is part of the IngresDataAdapter wizard:","The wizard generates the following query string:","SELECT ct_code, ct_name FROM country ORDER BY ct_name","Construct the Query for Country Results",
"1602.html");
Page[8]=new Array("To generate a DataSet, use the Visual Studio wizard for the IngresDataAdapter control:","The DataSet is filled with the results when the query is executed and is used for storing values for updating Ingres tables.","Generate a Country DataSet",
"1603.html");
Page[9]=new Array("Bind the combo box control to the DataSet using the ComboBox Tasks:","Set the Display Member to ct_name and the Value Member to ct_code. ","Doing so will display the ct_name values in the combo box control and set the selected value to the equivalent ct_code value.","Bind the Combo Box Control to the Country DataSet",
"1611.html");
Page[10]=new Array("To populate the DataSet, use the ingresDataAdapter1.Fill (DataSet dataSet) method. ","private void LoadCountry(System.Data.DataSet countryDataSet)","{","&nbsp;&nbsp;&nbsp;&nbsp;try","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataRow dr;","&nbsp;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;countryDataSet.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dr = countryDataSet.Tables[&quot;country&quot;].NewRow();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dr[&quot;ct_code&quot;] = &quot;&quot;;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dr[&quot;ct_name&quot;] = &quot;&quot;;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;countryDataSet.Tables[&quot;country&quot;].Rows.InsertAt(dr, 0);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter1.Fill(countryDataSet);","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;catch (Ingres.Client.IngresException ex)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DialogResult result = DisplayError(ex);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (result == DialogResult.OK)","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;}","}","Populate the Country DataSet",
"1604.html");
Page[11]=new Array("When the user selects a different country, the event handler countryComboBox_SelectedIndexChanged is invoked. The selected value from the Country combo box is used to retrieve the list of regions in the country. The results of this query are bound to the Region combo box, and then displayed.","To load the Region combo box control:","Add an IngresDataAdapter control to the form. See Add an IngresDataAdapter Control.","Construct the query.","Generate a DataSet.","Bind the combo box control to the DataSet.","Populate the DataSet. ","How You Load the Region Combo Box Control",
"1568.html");
Page[12]=new Array("To construct the SELECT statement, use the Query Designer, which is part of the IngresDataAdapter wizard:","The wizard generates the following query string:","SELECT DISTINCT ap_place FROM airport WHERE ap_ccode = ? ORDER BY ap_place","Construct the Query for Region Results",
"1642.html");
Page[13]=new Array("Using the Visual Studio wizard for the IngresDataAdapter control, create a DataSet.","The DataSet is filled with the results when the query is executed and is used for storing values for updating Ingres tables.","Generate a Region DataSet",
"1643.html");
Page[14]=new Array("Bind the combo box control to the DataSet using the ComboBox Tasks.","Set the Display Member and the Value Member fields to ap_place. Doing so will display the region name and pass the region name as the selected value.","The automatic generation creates a bound source based on the table name in the DataSet. @","Bind the Combo Box Control to the Region DataSet",
"1644.html");
Page[15]=new Array("Populate the DataSet with the ingresDataAdapter2.Fill(DataSet dataSet) method: ","private void LoadRegion(int direction, String nation,","&nbsp;&nbsp;&nbsp;&nbsp;System.Data.DataSet placeDataSet)","{","&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter country = new","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresParameter(&quot;ap_ccode&quot;, IngresType.NChar);","&nbsp;&nbsp;&nbsp;&nbsp;country.Value = nation;","&nbsp;&nbsp;&nbsp;&nbsp;placeDataSet.Clear();","&nbsp;","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter2.SelectCommand.Parameters.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter2.SelectCommand.Connection.Open();","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter2.SelectCommand.Prepare();","&nbsp;&nbsp;&nbsp;&nbsp;switch (direction)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case DEPART:","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;departing.country = country.Value.ToString();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ARRIVE:","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arriving.country = country.Value.ToString();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter2.SelectCommand.Parameters.Add(country);","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter2.Fill(placeDataSet);","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter2.SelectCommand.Connection.Close();","}","Populate the Region DataSet",
"1645.html");
Page[16]=new Array("When the user selects a different region, the event handler regionComboBox_SelectedIndexChanged is invoked. The selected value from the Region combo box is used to retrieve the list of airports in the region. The results of this query are bound to the Airport combo box, and then displayed.","To load the Airport Code combo box control:","Add an IngresDataAdapter control to the form. See Add an IngresDataAdapter Control.","Construct the query.","Generate a DataSet.","Bind the combo box control to the DataSet.","Populate the DataSet.","How You Load the Airport Code Combo Box Control",
"1569.html");
Page[17]=new Array("To construct the SELECT statement, use the Query Designer, which is part of the IngresDataAdapter wizard:","The wizard generates the following query string: ","SELECT ap_iatacode FROM airport WHERE ap_place = ? AND ap_ccode = ? ORDER BY ap_iatacode","Construct the Query for Airport Results",
"1650.html");
Page[18]=new Array("Using the Visual Studio wizard for the IngresDataAdapter control, create a DataSet: ","The DataSet is filled with the results when the query is executed and is used for storing values for updating Ingres tables.","Generate an Airport DataSet",
"1651.html");
Page[19]=new Array("Bind the combo box control to the DataSet using the ComboBox Tasks.","Set the Display Member and the Value Member fields to ap_iatacode. Doing so will display the airport code and pass the airport code as the selected value.","Bind the Combo Box Control to the Airport DataSet",
"1652.html");
Page[20]=new Array("Populate the DataSet with the ingresDataAdapter3.Fill(DataSet dataSet) method.","public void LoadAirport(int direction, String area, System.Data.DataTable airportTable)","{","&nbsp;&nbsp;&nbsp;&nbsp;DataRow dataRow;","&nbsp;","&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter country = new Ingres.Client.IngresParameter(","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;ap_ccode&quot;, IngresType.NChar);","&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter region = new Ingres.Client.IngresParameter(","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;ap_place&quot;, IngresType.NVarChar);","&nbsp;&nbsp;&nbsp;&nbsp;region.Value = area;","&nbsp;&nbsp;&nbsp;&nbsp;airportTable.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;dataRow = airportTable.NewRow();","&nbsp;&nbsp;&nbsp;&nbsp;dataRow[&quot;ap_iatacode&quot;] = &quot;&quot;;","&nbsp;&nbsp;&nbsp;&nbsp;airportTable.Rows.InsertAt(dataRow, 0);","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter3.SelectCommand.Connection.Open();","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter3.SelectCommand.Prepare();","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter3.SelectCommand.Parameters.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;switch (direction)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case DEPART:","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;country.Value = departing.country;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;departing.region = region.Value.ToString();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ARRIVE:","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;country.Value = arriving.country;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arriving.region = region.Value.ToString();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter3.SelectCommand.Parameters.Add(country);","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter3.SelectCommand.Parameters.Add(region);","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter3.Fill(airportTable);","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter3.SelectCommand.Connection.Close();","}","Note: Use an instance of the table defined in the AirportDataSet as a parameter to this method. For example:","AirportDataSet airportDataSet = new AirportDataSet();","LoadAirport(direction, comboBox1.SelectedValue.ToString(),","&nbsp;&nbsp;&nbsp;&nbsp;airportDataSet.Tables[&quot;airport&quot;]);","Populate the Airport DataSet",
"1653.html");
Page[21]=new Array("When the user selects a different region: ","The event handler regionComboBox_SelectedIndexChanged is invoked. ","The value selected in the Region combo box is used to retrieve the list of airport codes and their names.","The results of this query are bound to the DataGridView, and then displayed. ","The IngresDataAdapter used for this query is defined directly in the source code and not created using the Forms Designer.","The IngresCommand and IngresDataAdapter are declared in the Ingres.cs source code file.","IngresCommand ingresSelectCommand4;","IngresDataAdapter ingresDataAdapter4;","The Ingres Data Adapater ingresDataAdapter4 is initialized in the InitializeIngres method.","private void InitializeIngres()","{",".",".",".","&nbsp;&nbsp;&nbsp;&nbsp;ingresSelectCommand4 = new IngresCommand(","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;{ call get_my_airports( ccode = ?, area = ? ) }&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresConnection1);","&nbsp;&nbsp;&nbsp;&nbsp;ingresSelectCommand4.Connection = ingresConnection1;","&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter4 = new IngresDataAdapter(ingresSelectCommand4);",".","&nbsp;&nbsp;&nbsp;&nbsp;.","&nbsp;&nbsp;&nbsp;&nbsp;.","&nbsp;&nbsp;&nbsp;&nbsp;}","// The following query text shows the syntax for executing a database procedure.","ingresSelectCommand4 = new IngresCommand(","    &quot;{ call get_my_airports( ccode = ?, area = ? ) }&quot;,","    ingresConnection1);","The database procedure, get_my_airports, is declared in the database, taking two parameters and returning rows that contain three columns: ","ap_iatacode","ap_place","ap_name","These result columns are not returned with a relation header and cannot be referenced by name. ","CREATE PROCEDURE get_my_airports(","&nbsp;&nbsp;&nbsp;&nbsp;ccode&nbsp;&nbsp;&nbsp;NCHAR(2) NOT NULL NOT DEFAULT,","&nbsp;&nbsp;&nbsp;&nbsp;area    NVARCHAR(30) NOT NULL NOT DEFAULT )","&nbsp;&nbsp;&nbsp;&nbsp;RESULT ROW( CHAR(3) NOT NULL, NVARCHAR(30) NOT NULL,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NVARCHAR(50) NOT NULL) AS","DECLARE","&nbsp;&nbsp;&nbsp;&nbsp;iatacode NCHAR(3);","&nbsp;&nbsp;&nbsp;&nbsp;place    NVARCHAR(30);","&nbsp;&nbsp;&nbsp;&nbsp;name     NVARCHAR(50);","BEGIN","&nbsp;&nbsp;&nbsp;&nbsp;FOR","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SELECT ap_iatacode, ap_place, ap_name","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INTO :iatacode, :place, :name ","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FROM airport","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHERE ap_ccode like :ccode AND ap_place like :area","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ORDER BY ap_iatacode","&nbsp;&nbsp;&nbsp;&nbsp;DO","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RETURN ROW (:iatacode, :place, :name);","&nbsp;&nbsp;&nbsp;&nbsp;ENDFOR;","END;","The IngresDataAdapter overcomes this by assigning column names composed of a fixed portion &quot;result element&quot; and a variable numerical portion, with an incrementing number beginning with zero, for example: result element0, result element1, and result element2.","Note: There is currently no mechanism for obtaining metadata for a database procedure from the database server, which prevents the IngresDataAdapter from generating an automatic typed DataSet. The result table for the row producing procedure must be defined using the DataSet designer.","Select the AirportDataSet.xsd in the Solution Explorer and open the DataSet Designer. Right-click the design panel and Add a DataTable.","Rename the newly created data table in the Properties panel. In this example, the table is called airportName.","Add two columns, called &quot;result element0&quot; and &quot;result element2&quot; and make &quot;result element0&quot; a key column. Set the DataType property of each column to System.String. (This should be the default.)","Note: The database procedure returns three columns, but the table defines only two: IATA code and airport name.","The AirportDataSet now contains two definitions for tables: airport and airportName. These tables are identified by name in the AirportDataSet.Tables collection. ","Note: Use an instance of the table defined in the AirportDataSet as a parameter to the ingresDataAdapter4.Fill method. For example:","AirportDataSet airportDataSet = new AirportDataSet();","LoadAirportNames(direction, comboBox.SelectedValue.ToString(),","    airportDataSet.Tables[&quot;airportName&quot;]);","Create a new binding source, airportNameBindingSource, and assign it to the dataGridView1.DataSource property.","Assign the data table to the airportNameBindingSource.DataSource property to bind the results to the dataGridView1 control.","BindingSource airportNameBindingSource = new BindingSource();","dataGridView1.DataSource = airportNameBindingSource;","airportNameBindingSource.DataSource =","    airportDataSet.Tables[&quot;airportName&quot;];","Call the method ingresDataAdapter4.Fill in the source code to populate the data table:","&nbsp;&nbsp;&nbsp;&nbsp;public void LoadAirportName(int direction, String area,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.Data.DataTable airportNameTable)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter country =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new Ingres.Client.IngresParameter(&quot;ap_ccode&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.NChar);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter region =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new Ingres.Client.IngresParameter(&quot;ap_place&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.NVarChar);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;region.Value = area;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;airportNameTable.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter4.SelectCommand.Connection.Open();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter4.SelectCommand.Prepare();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter4.SelectCommand.Parameters.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (direction)","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case DEPART:","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;country.Value = departing.country;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ARRIVE:","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;country.Value = arriving.country;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter4.SelectCommand.Parameters.Add(country);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter4.SelectCommand.Parameters.Add(region);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter4.Fill(airportNameTable);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter4.SelectCommand.Connection.Close();","&nbsp;&nbsp;&nbsp;&nbsp;}","How You Load the Airport Code and Name into the DataGridView Control",
"1620.html");
Page[22]=new Array("Clicking the Go button on the Routes form triggers the execution of the routeGoButton_Click event handler. This event handler performs the following actions:","Extracts the required parameter values from the Windows Form controls.","Initializes the DataGridView control that will receive the query results.","Binds the DataSet to the DataGridView.","Executes the SELECT query that populates the DataSet.","The results of the query are bound to the DataGridView, and then displayed. ","More Information:","SELECT Statement","Query Execution",
"1572.html");
Page[23]=new Array("The SELECT statement uses the values provided in the Route form as query parameter values. The query returns the routes that fit the selection criteria and optionally includes an OR clause for return journeys.","The queries that return the route result set are: ","One way routes","SELECT route.rt_airline, airline.al_iatacode,","&nbsp;&nbsp;&nbsp;&nbsp;airline.al_name, route.rt_flight_num,","&nbsp;&nbsp;&nbsp;&nbsp;route.rt_depart_from, route.rt_arrive_to,","&nbsp;&nbsp;&nbsp;&nbsp;route.rt_depart_at, route.rt_arrive_at,","&nbsp;&nbsp;&nbsp;&nbsp;route.rt_arrive_offset, route.rt_flight_day","&nbsp;FROM route, airline","&nbsp;WHERE ((rt_depart_from = ? AND route.rt_arrive_to = ?))","&nbsp;&nbsp;&nbsp;&nbsp;AND route.rt_flight_day LIKE ? AND","&nbsp;&nbsp;&nbsp;&nbsp;route.rt_airline = airline.al_icaocode","&nbsp;ORDER BY route.rt_airline, route.rt_depart_from,","&nbsp;&nbsp;&nbsp;&nbsp;route.rt_flight_num","Return routes","SELECT route.rt_airline, airline.al_iatacode,","&nbsp;&nbsp;&nbsp;&nbsp;airline.al_name, route.rt_flight_num,","&nbsp;&nbsp;&nbsp;&nbsp;route.rt_depart_from, route.rt_arrive_to,","&nbsp;&nbsp;&nbsp;&nbsp;route.rt_depart_at, route.rt_arrive_at,","&nbsp;&nbsp;&nbsp;&nbsp;route.rt_arrive_offset, route.rt_flight_day","&nbsp;FROM route, airline","&nbsp;WHERE ((rt_depart_from = ? AND route.rt_arrive_to = ?)","&nbsp;&nbsp;&nbsp;&nbsp;OR (route.rt_depart_from = ?","&nbsp;&nbsp;&nbsp;&nbsp;AND route.rt_arrive_to = ?))","&nbsp;&nbsp;&nbsp;&nbsp;AND route.rt_flight_day LIKE ?","&nbsp;&nbsp;&nbsp;&nbsp;AND route.rt_airline = airline.al_icaocode","&nbsp;ORDER BY route.rt_airline, route.rt_depart_from,","&nbsp;&nbsp;&nbsp;&nbsp;route.rt_flight_num","SELECT Statement—Return Route Result Set",
"1667.html");
Page[24]=new Array("To execute the query to retrieve routes and populate the Route DataSet:","Note: In this example, route queries use the ingresDataAdapter5.","Construct the query.","Generate a DataSet.","Bind the DataGridView control to the DataSet.","Populate the DataSet.","How You Execute the Query and Populate the Route DataSet",
"1583.html");
Page[25]=new Array("In this example, route queries use the ingresDataAdapter5.","The ingresDataAdapter5 contains:","ingresConnection1","Connection object containing the target data source string.","ingresSelectCommand5","SELECT command used for retrieving data from the Route table.","ingresInsertCommand5","INSERT command used for adding data to the Route table.","ingresUpdateCommand5","UPDATE command for changing data in the Route table.","ingresDeleteCommand5","DELETE command for removing data from the Route table.","IngresDataAdapter5",
"1591.html");
Page[26]=new Array("To construct the SELECT statement, use the Query Designer, which is part of the IngresDataAdapter wizard:","After the wizard finishes, the ingresDataAdapter5 control is displayed in the Controls pane of the Forms Designer, with an entry in the Properties viewer, as follows: ","Construct the Query for Route Results",
"1594.html");
Page[27]=new Array("Use the Visual Studio wizard for the IngresDataAdapter control to create a DataSet:","A Typed DataSet and an instance of the Typed DataSet, routeDataSet1 is created.","Generate a Route DataSet",
"1595.html");
Page[28]=new Array("Create a new binding source, routeBindingSource, and assign it to the dataGridView1.DataSource property.","Assign the DataSet to the routeBindingSource.DataSource property to bind the results to the dataGridView1 control.","BindingSource routeBindingSource = new BindingSource();","dataGridView1.DataSource = routeBindingSource;","routeBindingSource.DataSource = routeDataSet1;","routeBindingSource.DataMember = &quot;route&quot;;","Bind the DataGridView Control to the Route DataSet",
"1634.html");
Page[29]=new Array("To populate the routeDataSet1, call the method ingresDataAdapter5. Fill in the source code to populate the DataSet.","&nbsp;&nbsp;&nbsp;&nbsp;public void RouteSearch(","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataSet routeDataSet,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String departingAirport,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String arrivingAirport, ","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String flightDays, ","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CheckState roundtrip)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter depart =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new Ingres.Client.IngresParameter(&quot;rt_depart_from&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.NChar);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter arrive =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new Ingres.Client.IngresParameter(&quot;rt_arrive_to&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.NChar);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter returnTripDepartingAirport =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new Ingres.Client.IngresParameter(&quot;rt_depart_from&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.NChar);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter returnTripArrivingAirport =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new Ingres.Client.IngresParameter(&quot;rt_arrive_to&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.NChar);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter onDays =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new Ingres.Client.IngresParameter(&quot;rt_flight_day&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.NChar);","&nbsp;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;depart.Value = departingAirport;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrive.Value = arrivingAirport;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returnTripDepartingAirport.Value = arrivingAirport;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returnTripArrivingAirport.Value = departingAirport;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onDays.Value = flightDays;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;routeDataSet.Clear();","&nbsp;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Clear the query parameter list, parameters need to added in","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the order they appear in the query.","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.SelectCommand.Parameters.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add route query parameters","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.SelectCommand.Parameters.Add(depart);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.SelectCommand.Parameters.Add(arrive);","&nbsp;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (roundtrip == CheckState.Checked)","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the query command text with additional WHERE clause","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.SelectCommand.CommandText =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String.Format(rm.GetString(&quot;RouteQuery&quot;),","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rm.GetString(&quot;RouteQueryRoundTripWhereClause&quot;));","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add return trip query paramters","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.SelectCommand.Parameters.Add(","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returnTripDepartingAirport);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.SelectCommand.Parameters.Add(","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returnTripArrivingAirport);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Set the query command text","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.SelectCommand.CommandText =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String.Format(rm.GetString(&quot;RouteQuery&quot;), &quot;&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.SelectCommand.Parameters.Add(onDays);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.SelectCommand.Connection.Open();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.SelectCommand.Prepare();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.Fill(routeDataSet);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.SelectCommand.Connection.Close();","&nbsp;&nbsp;&nbsp;&nbsp;}","Populate the Route DataSet",
"1596.html");
Page[30]=new Array("The result table returned by executing a search can be used for adding and changing values in the Route table using the editing capabilities of the DataGridView control. ","Note: This example uses the ingresInsertCommand5, which was created when the ingresDataAdapter5 was added.","The event handler for detecting changes in the DataGridView control is routeBindingSource_PositionChanged. In the event handler, the row DataGridView row property is used to determine whether a value in an existing row was changed or added and to invoke the appropriate UPDATE or INSERT command.","The queries used are as follows. ","INSERT","INSERT into route","&nbsp;&nbsp;&nbsp;&nbsp;( rt_id, rt_airline, rt_flight_num, rt_depart_from, rt_arrive_to,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt_depart_at, rt_arrive_at, rt_arrive_offset, rt_flight_day ) ","VALUES ( NEXT VALUE FOR rt_id, ?, ?, ?, ?, ?, ?, ?, ? )","UPDATE","UPDATE route ","&nbsp;&nbsp;&nbsp;&nbsp;SET rt_airline = ?, rt_flight_num = ?, rt_depart_from = ?,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt_arrive_to = ?, rt_depart_at = ?, rt_arrive_at = ?,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rt_arrive_offset = ?, rt_flight_day = ?","&nbsp;WHERE rt_airline = ? AND rt_flight_num = ? AND rt_flight_day = ?","You can write these queries using the Query Designer for the IngresCommand by changing the CommandText property, or assign them directly to the IngresCommand CommandText property as a string.","The table updateRoute is added to the RouteDataSet. ","More information:","How You Add a Table for Updating the Route Table","How You Add or Change Table Values Using the DataGridView",
"1585.html");
Page[31]=new Array("The values to be added are extracted from the DataGridView row and assigned into a data table cloned from the updateRoute.","// Clone the table structure.","DataTable dataTable = routeDataSet1.Tables[&quot;updateRoute&quot;].Clone();","&nbsp;","// Create a new row.","DataRow dataRow = dataTable.NewRow();","for (int i = 0, j = 0;","&nbsp;&nbsp;&nbsp;&nbsp;(i &lt; LastDataRow.ItemArray.Length); i += 1)","{","&nbsp;&nbsp;&nbsp;&nbsp;// Populate the update row with values from","&nbsp;&nbsp;&nbsp;&nbsp;// matching columns.","&nbsp;&nbsp;&nbsp;&nbsp;if ((j &lt; dataRow.ItemArray.Length) &amp;&amp;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(dataRow.Table.Columns[j].ColumnName ==","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastDataRow.Table.Columns[i].ColumnName))","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Save the query parameters to re-issue","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the query.","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (dataRow.Table.Columns[j].ColumnName.Equals(&quot;rt_depart_from&quot;))","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastQuery.departingAirport =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastDataRow.ItemArray[i].ToString();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (dataRow.Table.Columns[j].ColumnName.Equals(&quot;rt_arrive_to&quot;))","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastQuery.arrivingAirport =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastDataRow.ItemArray[i].ToString();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (dataRow.Table.Columns[j].ColumnName.Equals(&quot;rt_flight_day&quot;))","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastQuery.onDays =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastDataRow.ItemArray[i].ToString();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Copy the value in the equivalent column.","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataRow[j] = LastDataRow.ItemArray[i].ToString();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j += 1;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;// Add the row to the table.  Could add more than","&nbsp;&nbsp;&nbsp;&nbsp;// one here and add them all at once or used the","&nbsp;&nbsp;&nbsp;&nbsp;// rows rather than the table.","&nbsp;&nbsp;&nbsp;&nbsp;dataTable.Rows.Add(dataRow);","&nbsp;&nbsp;&nbsp;&nbsp;RouteAdd(dataTable);","To add the row","Call the ingresDataAdapter5.Update method with the data table.","public void RouteAdd(DataTable dataTable)","{","&nbsp;&nbsp;&nbsp;&nbsp;try","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.InsertCommand.Parameters.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.InsertCommand.Parameters.Add(&quot;@rt_airline&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NChar, &quot;rt_airline&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.InsertCommand.Parameters.Add(&quot;@rt_flight_num&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.Int, &quot;rt_flight_num&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.InsertCommand.Parameters.Add(&quot;@rt_depart_from&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NChar, &quot;rt_depart_from&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.InsertCommand.Parameters.Add(&quot;@rt_arrive_to&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NChar, &quot;rt_arrive_to&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.InsertCommand.Parameters.Add(&quot;@rt_depart_at&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.DateTime, &quot;rt_depart_at&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.InsertCommand.Parameters.Add(&quot;@rt_arrive_at&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.DateTime, &quot;rt_arrive_at&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.InsertCommand.Parameters.Add(&quot;@rt_arrive_offset&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.TinyInt, &quot;rt_arrive_offset&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.InsertCommand.Parameters.Add(&quot;@rt_flight_day&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NChar, &quot;rt_flight_day&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.Update(dataTable);","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;catch (IngresException ex)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DialogResult result = DisplayError(ex);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw;","&nbsp;&nbsp;&nbsp;&nbsp;}","}","How Values Are Added",
"1621.html");
Page[32]=new Array("Changed values are held in the DataGridView row that is bound to the DataSet returned from the query.","Each data row maintains a version of its changes after it is edited, but before the AcceptChanges method is called.","The DataSet values are used as parameters in the update query and each parameter is associated with the respective column.","The values from the previous version of the row are used as the parameters to the WHERE clause. Using the DataSet, the update can be run.","public void RouteChange(DataSet dataSet)","{","&nbsp;&nbsp;&nbsp;&nbsp;try","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.UpdateCommand.Parameters.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.UpdateCommand.Parameters.Add(&quot;@rt_airline&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NChar, &quot;rt_airline&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.UpdateCommand.Parameters.Add(&quot;@rt_flight_num&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.Int, &quot;rt_flight_num&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.UpdateCommand.Parameters.Add(&quot;@rt_depart_from&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NChar, &quot;rt_depart_from&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.UpdateCommand.Parameters.Add(&quot;@rt_arrive_to&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NChar, &quot;rt_arrive_to&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.UpdateCommand.Parameters.Add(&quot;@rt_depart_at&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.DateTime, &quot;rt_depart_at&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.UpdateCommand.Parameters.Add(&quot;@rt_arrive_at&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.DateTime, &quot;rt_arrive_at&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.UpdateCommand.Parameters.Add(","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;@rt_arrive_offset&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.TinyInt, &quot;rt_arrive_offset&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.UpdateCommand.Parameters.Add(&quot;@rt_flight_day&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NChar, &quot;rt_flight_day&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.UpdateCommand.Parameters.Add(","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;@airline&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.NChar, &quot;rt_airline&quot;).SourceVersion = ","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataRowVersion.Original;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.UpdateCommand.Parameters.Add(","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;@flight&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.Int, &quot;rt_flight_num&quot;).SourceVersion =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataRowVersion.Original;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.UpdateCommand.Parameters.Add(","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;@days&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.NChar, &quot;rt_flight_day&quot;).SourceVersion =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataRowVersion.Original;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter5.Update(dataSet);","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;catch (IngresException ex)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DialogResult result = DisplayError(ex);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw;","&nbsp;&nbsp;&nbsp;&nbsp;}","}","How Values Are Changed",
"1622.html");
Page[33]=new Array("The result table returned by executing a search can be used for removing values in the Ingres base table. The values that qualify the row for deletion are taken from the DataGridView.","Note: This example uses the ingresDeleteCommand5, which was created when the ingresDataAdapter5 was added.","The query is as follows: ","DELETE  FROM route  WHERE rt_airline = ? and rt_flight_num = ? and rt_flight_day = ?","You can write these queries using the Query Designer for the IngresCommand by changing the CommandText property, or assign them directly to the IngresCommand CommandText property as a string.","Transaction control is shown in this example to allow user confirmation of the deletion.","A transaction is defined for the session and assigned to the command, indicating that the transaction should be controlled using a programmatic commit or rollback.","public int RouteDelete(DataGridViewRow row)","{","&nbsp;&nbsp;&nbsp;&nbsp;int deleted = 0;","&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter airline = new IngresParameter(&quot;rt_airline&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.NChar);","&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter flight = new IngresParameter(&quot;rt_flight_num&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.Int);","&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter flight_day = new IngresParameter(&quot;rt_flight_day&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.NChar);","&nbsp;&nbsp;&nbsp;&nbsp;try","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresTransaction delTxn;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresCommand delCommand = ingresDataAdapter5.DeleteCommand;","&nbsp;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;airline.Value = row.Cells[0].Value;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flight.Value = row.Cells[2].Value;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flight_day.Value = row.Cells[8].Value;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delCommand.Connection.Open();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delTxn = delCommand.Connection.BeginTransaction();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delCommand.Transaction = delTxn;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delCommand.Prepare();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delCommand.Parameters.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delCommand.Parameters.Add(airline);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delCommand.Parameters.Add(flight);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delCommand.Parameters.Add(flight_day);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deleted = delCommand.ExecuteNonQuery();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DialogResult result = MessageBox.Show(","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String.Format(","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rm.GetString(&quot;RouteDeleteConfirm&quot;),","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;airline.Value.ToString(),","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flight.Value.ToString(),","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.Cells[3].Value,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.Cells[4].Value,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row.Cells[8].Value),","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rm.GetString(&quot;RouteDeleteCaption&quot;), ","            MessageBoxButtons.YesNo, MessageBoxIcon.Warning);","        if (result == DialogResult.No)","        {","            deleted = 0;","            delTxn.Rollback();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (result == DialogResult.Yes)","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delTxn.Commit();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delCommand.Connection.Close();","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;catch (IngresException ex)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DialogResult result = DisplayError(ex);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw;","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (deleted);","&nbsp;&nbsp;&nbsp;&nbsp;}","How Rows Are Removed",
"1586.html");
Page[34]=new Array("The query for returning routes that match the search criteria involves an SQL join between the route table and the airline table. The resulting DataGridView contains columns taken from both tables.","A number of methods can be used to extract the data from the DataGridView row before calling an adapter command (see IngresDataAdapter5). The addition of the updateRoute table in the RouteDataSet is illustrated here.","Rename the newly created data table in the Properties panel from DataTable to updateRoute. ","Add the following columns:","Column Name","Type","Key field","rt_airline","System.String","Y","rt_flight_num","System.Int32","Y","rt_depart_from","System.String","N","rt_arrive_to","System.String","N","rt_depart_at","System.DateTime","N","rt_arrive_at","System.DateTime","N","rt_arrive_offset","System.Sbyte","N","rt_flight_day","System.String","Y","The RouteDataSet now contains two definitions for tables, route and updateRoute.","How You Add a Table for Updating the Route Table",
"1623.html");
Page[35]=new Array("The Profile form lets users display or modify personal profile information. The Profile function shows how information stored in the database can be represented in user interface controls.","The table user_profile stores profile information and contains a column of type LongVarBinary to hold binary large objects (BLOBs). This application uses a photograph as a BLOB. ","User names are stored as a Unicode data type. If you install a locale on your Windows machine, foreign characters can be displayed.  ","Profile information is displayed in the result panel profilePanel.","The Profile form contains two groups of buttons that perform the following actions:","Group 1","New","Clears all entries in the form and enables the Add button.","Modify","Changes the Email Address control from a text field into a combo box list field. The list in the combo box reflects all entries stored in the user_profile table.","Group 2","Add","Executes an INSERT using values from the form as parameters to the query.","Remove","Executes a DELETE using the value from the Email Address combo box to identify the row in the database to be deleted.","Change","Executes an UPDATE using the values from the form as parameters to the query.","Profile Form",
"1669.html");
Page[36]=new Array("The Email Address combo box can assume two styles depending on the mode of the form. ","When adding a new profile, the email address is entered as text in the Email Address control. ","When modifying an existing profile, the Email Address becomes a combo box list control where the list of addresses is retrieved from the user_profile table.","To load the Email Address combo box control:","Add an IngresDataAdapter control to the form. See Add an IngresDataAdapter Control.","Note: In this example, ingresDataAdapter6 is used for accessing the Ingres database.","Construct the query. ","Generate a DataSet.","Bind the combo box control to the DataSet.","Populate the DataSet.","How You Load the Email Address Combo Box Control",
"1670.html");
Page[37]=new Array("To construct the SELECT statement, you can use the Query Designer, which is part of the IngresDataAdapter wizard:","The wizard generates the following query string: ","SELECT up_last, up_first, up_email, up_airport , up_image","FROM user_profile","WHERE up_email = ?","Construct the Query for Email Address Results",
"1672.html");
Page[38]=new Array("Using the Visual Studio wizard for the IngresDataAdapter control, create a DataSet.","The DataSet is filled with the results when the query is executed and is used for storing values for updating Ingres tables.","Generate a Profile DataSet",
"1673.html");
Page[39]=new Array("Bind the combo box control to the DataSet using the ComboBox Tasks.","Set the Display Member and the Value Member fields to up_email. Doing so will display the email address and pass the email address as the selected value.","The automatic generation creates a bound source based on the table name in the data set. ","Bind the Combo Box Control to the Profile DataSet",
"1678.html");
Page[40]=new Array("Populate the data set with the ingresDataAdapter6.Fill(DataSet dataSet) method.","public void LoadProfile(DataTable profileDataTable, String email)","{","&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter up_email =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new Ingres.Client.IngresParameter(&quot;up_email&quot;, IngresType.NChar);","&nbsp;","&nbsp;&nbsp;&nbsp;&nbsp;try","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;up_email.Value = email;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;profileDataTable.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.SelectCommand.Connection.Open();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.SelectCommand.Prepare();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.SelectCommand.Parameters.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.SelectCommand.Parameters.Add(up_email);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.Fill(profileDataTable);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.SelectCommand.Connection.Close();","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;catch (IngresException ex)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DialogResult result = DisplayError(ex);","&nbsp;&nbsp;&nbsp;&nbsp;}","}","Populate the Profile DataSet",
"1679.html");
Page[41]=new Array("The column up_image in the table user_profile is defined as the data type long byte. The long byte data type maps the LongVarBinary type in the Ingres Data Adapter, which in turn maps to the System Byte array.","A System Byte array can be converted to other types using the MemoryStream class.","DataRow resultRow;","DataColumnCollection columnCollection;","MemoryStream memoryStream;","Image photo;","&nbsp;","resultRow = profileDataSet.Tables[&quot;user_profile&quot;].Rows[0];","columnCollection = resultRow.Table.Columns;","&nbsp;","memoryStream = new MemoryStream(","&nbsp;&nbsp;&nbsp;&nbsp;(byte[])resultRow.ItemArray[columnsCollection[&quot;up_image&quot;].Ordinal]","&nbsp;&nbsp;&nbsp;&nbsp;);","// Read the BLOB stream into an image object.","photo = Image.FromStream(memoryStream);","&nbsp;","// Set the image into an image box.","profilePictureBox.Image = photo;","How the Picture Box Control Is Loaded",
"1680.html");
Page[42]=new Array("Clicking the Add button in the application triggers the execution of the profileAddButton_Click event handler.","Note: This example uses the ingresInsertCommand6, which was created when the ingresDataAdapter6 was added.","The query used is as follows: ","INSERT into user_profile VALUES ( next value FOR up_id, ?, ?, ?, ?, ? )","You can write this query using the Query Designer for the IngresCommand by changing the CommandText property, or assign it directly to the IngresCommand CommandText property as a string.","The values are assigned into a data table cloned from the user_profile table in the ProfileDataSet.","DataTable dataTable = profileDataSet.Tables[&quot;user_profile&quot;].Clone();","DataRow dataRow = dataTable.NewRow();","The values to be added are taken from the profile form controls and used as parameters to the query.","dataRow[&quot;up_last&quot;] = lastName;","dataRow[&quot;up_first&quot;] = firstName;","dataRow[&quot;up_email&quot;] = email;","dataRow[&quot;up_airport&quot;] = airport;","if (photoFile.Length &gt; 0)","{","&nbsp;&nbsp;&nbsp;&nbsp;MemoryStream stream = new MemoryStream();","&nbsp;&nbsp;&nbsp;&nbsp;Image photo = System.Drawing.Image.FromFile(photoFile);","&nbsp;&nbsp;&nbsp;&nbsp;photo.Save(stream, photo.RawFormat);","&nbsp;&nbsp;&nbsp;&nbsp;dataRow[&quot;up_image&quot;] = stream.ToArray();","&nbsp;&nbsp;&nbsp;&nbsp;stream.Close();","}","The path and file name of the image are used to convert it into a Byte array and read into the up_image column.","The new row is added to the data table which is used in the INSERT command.","dataTable.Rows.Add(dataRow);","ingresDataAdapter6.InsertCommand.Parameters.Clear();","ingresDataAdapter6.InsertCommand.Parameters.Add(&quot;@up_last&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NVarChar, &quot;up_last&quot;);","ingresDataAdapter6.InsertCommand.Parameters.Add(&quot;@up_first&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NVarChar, &quot;up_first&quot;);","ingresDataAdapter6.InsertCommand.Parameters.Add(&quot;@up_email&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NVarChar, &quot;up_email&quot;);","ingresDataAdapter6.InsertCommand.Parameters.Add(&quot;@up_airport&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NChar, &quot;up_airport&quot;);","ingresDataAdapter6.InsertCommand.Parameters.Add(&quot;@up_image&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.LongVarBinary, &quot;up_image&quot;);","resAffected = ingresDataAdapter6.Update(dataTable);","The added parameters link the parameter values to the columns in the data table. The data table is used in the update method to add the new row.","How a New Profile Is Added",
"1681.html");
Page[43]=new Array("Clicking the Change button in the application triggers the execution of the profileChangeButton_Click event handler.","Note: This example uses the ingresUpdateCommand6, which was created when the ingresDataAdapter6 was created.","The queries used are as follows:","UPDATE With Image","UPDATE user_profile","SET up_last = ?, up_first = ?, up_email = ?, up_airport = ?, up_image = ? WHERE up_email = ?","UPDATE Without Image","UPDATE user_profile","SET up_last = ?, up_first = ?, up_email = ?, up_airport = ? WHERE up_email = ?","You can write this query using the Query Designer for the IngresCommand by changing the CommandText property, or assign them directly to the IngresCommand CommandText property as a string.","The UPDATE performs the following tasks:","Retrieves the profile for the selected email address.","Extracts values from the Profile form for use as parameters.","Updates the DataSet with the new values.","Use the updated DataSet for updating the user_profile table.","Each data row maintains a version of its changes after it is updated, but before the AcceptChanges method is called.","The DataSet values are used as parameters in the UPDATE query and each parameter is associated with the respective column.","The values from the previous version of the row are used as the parameters to the WHERE clause.","Using the DataSet, the UPDATE can be run.","private int ProfileChange(ProfileDataSet dataSet, String lastName,","&nbsp;&nbsp;&nbsp;&nbsp;String firstName, String email, String airport, String photoFile)","{","&nbsp;&nbsp;&nbsp;&nbsp;int resAffected = 0;","    try","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Clear the command parameter list","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.UpdateCommand.Parameters.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Associate the data row columns with the data set columns.","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.UpdateCommand.Parameters.Add(&quot;@up_last&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NVarChar, &quot;up_last&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.UpdateCommand.Parameters.Add(&quot;@up_first&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NVarChar, &quot;up_first&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.UpdateCommand.Parameters.Add(&quot;@up_email&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NVarChar, &quot;up_email&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.UpdateCommand.Parameters.Add(&quot;@up_airport&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.NChar, &quot;up_airport&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If a path to an image is specified convert it into a Byte","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// array value and assign it to the up_image column.","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If there is no path do not specify up_image as a parameter.","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (photoFile.Length &gt; 0)","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MemoryStream stream = new MemoryStream();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Image photo = System.Drawing.Image.FromFile(photoFile);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataTable dataTable = dataSet.Tables[&quot;user_profile&quot;];","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;photo.Save(stream, photo.RawFormat);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.UpdateCommand.Parameters.Add(&quot;@up_image&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ingres.Client.IngresType.LongVarBinary, &quot;up_image&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataTable.Rows[0][&quot;up_image&quot;] = stream.ToArray();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stream.Close();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.UpdateCommand.CommandText =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String.Format(rm.GetString(&quot;ProfileUpdateQuery&quot;),","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rm.GetString(&quot;ImageAttribute&quot;));","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.UpdateCommand.CommandText =","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String.Format(rm.GetString(&quot;ProfileUpdateQuery&quot;), &quot;&quot;);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Specify the previous value of email for the row as the","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// identity of the row for update in the WHERE clause.","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.UpdateCommand.Parameters.Add(&quot;@up_email&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.NChar, &quot;up_email&quot;).SourceVersion = ","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataRowVersion.Original;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Assign the values into the data set table.","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataSet.Tables[&quot;user_profile&quot;].Rows[0][&quot;up_last&quot;] = lastName;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataSet.Tables[&quot;user_profile&quot;].Rows[0][&quot;up_first&quot;] = firstName;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataSet.Tables[&quot;user_profile&quot;].Rows[0][&quot;up_email&quot;] = email;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataSet.Tables[&quot;user_profile&quot;].Rows[0][&quot;up_airport&quot;] = airport;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Perform the update.","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resAffected = ingresDataAdapter6.Update(dataSet);","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;catch (IngresException ex)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DialogResult result = DisplayError(ex);","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;return (resAffected);","}","How a Profile Is Changed",
"1682.html");
Page[44]=new Array("Clicking the Remove button in the application triggers the execution of the profileRemoveButton_Click event handler.","Note: This example uses the ingresDeleteCommand6, which was created when the ingresDataAdapter6 was created.","The query is as follows: ","DELETE FROM user_profile WHERE up_email = ?","You can write this query using the Query Designer for the IngresCommand by changing the CommandText property, or assign them directly to the IngresCommand CommandText property as a string.","The value selected in the profileEmailComboBox is used to identify the profile record for deletion.","A transaction is defined to allow programmatic transaction control of the deletion. The row is deleted, but the change is not committed until a confirmation is received from the dialogue.","A transaction is defined for the session and assigned to the delete command. A commit or rollback is not performed until the respective method is invoked.","public int ProfileRemove(DataSet profileDataSet, string profileAddr)","{","&nbsp;&nbsp;&nbsp;&nbsp;int rowsDeleted = 0;","&nbsp;&nbsp;&nbsp;&nbsp;IngresParameter email = new IngresParameter(&quot;up_email&quot;,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresType.NChar);","&nbsp;&nbsp;&nbsp;&nbsp;try","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresConnection connection;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IngresTransaction delete;","&nbsp;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;email.Value = profileAddr;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connection = ingresDataAdapter6.DeleteCommand.Connection;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connection.Open();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete = connection.BeginTransaction();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.DeleteCommand.Prepare();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.DeleteCommand.Parameters.Clear();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ingresDataAdapter6.DeleteCommand.Parameters.Add(email);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rowsDeleted = ingresDataAdapter6.DeleteCommand.ExecuteNonQuery();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DialogResult result = MessageBox.Show(&quot;Profile: &quot; + profileAddr,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Remove profile&quot;, MessageBoxButtons.YesNo,","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBoxIcon.Warning);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (result == DialogResult.No)","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rowsDeleted = 0;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete.Rollback();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (result == DialogResult.Yes)","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete.Commit();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connection.Close();","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;catch (IngresException ex)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DialogResult result = DisplayError(ex);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (result != DialogResult.OK)","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;return (rowsDeleted);","}","How a Profile Is Removed",
"1683.html");
Page[45]=new Array("The Ingres Instance Data Source form is used to change the settings that compose a connection string used by the Ingres Data Adapters in the application.","The Connect function demonstrates changing the connection string to connect to a demodb database in a different Ingres instance. ","The status line at the bottom of the application window displays the settings made in the Connect function. ","The parameters in the connection string are as follows: ","Host Name","Specifies the name or address of the target host. Ingres uses the server name &quot;(local)&quot; for servers on the local host. ","Instance name","Specifies the unique identifier for the Ingres instance. ","The default instance name is Ingres II. To connect to a remote instance, ask your system administrator for the instance name.  ","Java and .NET based applications connect to Ingres through the Ingres Data Access Server (DAS). The DAS can be configured to listen on a specific Port ID. The default Port ID is the digit 7 appended to the instance ID. Thus, the default DAS Port ID for the default instance Ingres II is II7.","Database name","Target database name. The name of the demonstration database is demodb. ","User ID","The user ID of the user connecting to the Ingres instance. ","Login credentials are required only when connecting to a remote Ingres database or connecting with different credentials. ","Password","The password associated with the specified user ID for connecting to the Ingres instance.","Login credentials are required only when connecting to a remote Ingres database or connecting with different credentials. ","Ingres Instance Data Source Form",
"1664.html");
Page[46]=new Array("Clicking the Change button in the application triggers the execution of the changeButton_Click event handler.","The event handler performs the following:","Tests each control on Ingres Instance Data Source form for a value.","Extracts the values from the form controls.","Assigns the values to a new TargetDetails structure.","Replaces the current TargetDetails.","Sets the ingresConnection1 connection string using the TargetDetails.GetConnectionString method.","Connects to the new target and tests the version table.","private void changeButton_Click(object sender, EventArgs e)","{","&nbsp;&nbsp;&nbsp;&nbsp;TargetDetails newSource = new TargetDetails();","&nbsp;","&nbsp;&nbsp;&nbsp;&nbsp;if (InstanceCheckItems() == DialogResult.OK)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;if (hostComboBox.SelectedValue != null)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newSource.host = hostComboBox.SelectedValue.ToString();","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;else","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newSource.host = hostComboBox.Text.ToString();","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;if (instanceComboBox.SelectedValue != null)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newSource.port = String.Format(rm.GetString(&quot;PortAddress&quot;),","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instanceComboBox.SelectedValue.ToString());","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;else","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newSource.port = String.Format(rm.GetString(&quot;PortAddress&quot;),","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instanceComboBox.Text.ToString());","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;if (useridTextBox != null)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newSource.user = useridTextBox.Text;","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;if (passwordTextBox != null)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newSource.pwd = passwordTextBox.Text;","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;if (databaseComboBox.SelectedValue != null)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newSource.db = databaseComboBox.SelectedValue.ToString();","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;else","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newSource.db = databaseComboBox.Text.ToString();","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;savedSource = currentSource;","&nbsp;&nbsp;&nbsp;&nbsp;currentSource = newSource;","&nbsp;&nbsp;&nbsp;&nbsp;SetConnection(ingresConnection1,","&nbsp;&nbsp;&nbsp;&nbsp;currentSource.GetConnectionString());","&nbsp;&nbsp;&nbsp;&nbsp;if (connectDefaultCheckBox.Checked == true)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteConfiguration(appConfigFile);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultSourceRadioButton.Checked = true;","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;if (CheckVersion(1, 0, 0) == true)","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetInstanceControls();","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetStatus(currentSource);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetStaticControls();","&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;else","&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DialogResult result = MessageBox.Show(rm.GetString(&quot;ErrorVersion&quot;),","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rm.GetString(&quot;InstanceCaption&quot;),","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageBoxButtons.RetryCancel, MessageBoxIcon.Error);","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (result != DialogResult.Retry)","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentSource = savedSource;","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}","&nbsp;&nbsp;&nbsp;&nbsp;}","}","How the Instance Is Changed",
"1665.html");
var PageCount=47;
function search(SearchWord){
var Result="";
var NrRes=0;
Result='<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n';
Result+="<html>\n";
Result+="<head>\n";
Result+="<title>Search Results</title>\n";
Result+="<meta http-equiv='Content-Type' content='text/html; charset=ISO-8859-1'>\n";
Result+='<script language="javascript" type="text/javascript" charset="ISO-8859-1" src="dhtml_search.js"></script>\n';
Result+='<link rel="stylesheet" type="text/css" href="stylesheet.css">\n';
Result+="<style type='text/css'>\n";
Result+=".searchDetails {font-family:verdana; font-size:8pt; font-weight:bold}\n";
Result+=".searchResults {font-family:verdana; font-size:8pt}\n";
Result+="</style>\n";
Result+="</head>\n";
Result+="<body onload='javascript:document.SearchForm.SearchText.focus()'>\n";
Result+='<table class="searchDetails" border="0" cellspacing="0" cellpadding="2" width="100%">\n';
Result+='<tr><td>Enter a keyword or phrase</td></tr>';
Result+='<tr><td>';
Result+='<form name="SearchForm" action="javascript:search(document.SearchForm.SearchText.value)">';
if(SearchWord.length>=1){
   while(SearchWord.indexOf("<")>-1 || SearchWord.indexOf(">")>-1 || SearchWord.indexOf('"')>-1){
       SearchWord=SearchWord.replace("<","&lt;").replace(">","&gt;").replace('"',"&quot;");
   }
}
Result+='<input type="text" name="SearchText" size="25" value="' + SearchWord + '" />';
Result+='&nbsp;<input type="submit" value="&nbsp;Go&nbsp;"/></form>';
Result+='</td></tr></table>\n';

if(SearchWord.length>=1){
   SearchWord=SearchWord.toLowerCase();
   this.status="Searching, please wait...";
   Result+="<table border='0' cellpadding='5' class='searchResults' width='100%'>";
   for(j=0;j<PageCount;j++){
       k=Page[j].length-1;
       for(i=0;i<k;i++){
           WordPos=Page[j][i].toLowerCase().indexOf(SearchWord);
           if(WordPos>-1){
               FoundWord=Page[j][i].substr(WordPos,SearchWord.length);
               NrRes++;
               Result+="<tr><td>";
               Result+="<a target='BODY' href='"+Page[j][k]+"'>"+Page[j][k-1].replace(FoundWord,FoundWord.bold())+"</a><br/>\n";

               if(i<k-1){
                   if(Page[j][i].length>350){
                       Result+="..."+Page[j][i].substr(WordPos-100,200+FoundWord.length).replace(FoundWord,FoundWord.bold())+"...\n";
                   }
                   else{
                       Result+=Page[j][i].replace(FoundWord,FoundWord.bold())+"\n";
                   }
               }
               Result+="</td></tr>";
               break;
           }
       }
   }
   Result+="</table>";
   Result+="<p class='searchDetails'>&nbsp;" + NrRes + " result(s) found.</p>";
}

Result+="</body></html>";
this.status="";
this.document.open();
this.document.write(Result);
this.document.close();
}
