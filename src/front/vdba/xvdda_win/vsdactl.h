// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CuVsda wrapper class

class CuVsda : public CWnd
{
protected:
	DECLARE_DYNCREATE(CuVsda)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xcc2da2b6, 0xb8f1, 0x11d6, { 0x87, 0xd8, 0x0, 0xc0, 0x4f, 0x1f, 0x75, 0x4a } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	void SetSchema1Param(LPCTSTR lpszNode, LPCTSTR lpszDatabase, LPCTSTR lpszUser);
	void SetSchema2Param(LPCTSTR lpszNode, LPCTSTR lpszDatabase, LPCTSTR lpszUser);
	void StoreSchema(LPCTSTR lpszNode, LPCTSTR lpszDatabase, LPCTSTR lpszUser, LPCTSTR lpszFile);
	void LoadSchema1Param(LPCTSTR lpszFile);
	void LoadSchema2Param(LPCTSTR lpszFile);
	void DoCompare(short nMode);
	void UpdateDisplayFilter(LPCTSTR lpszFilter);
	BOOL IsEnableDiscard();
	void DiscardItem();
	BOOL IsEnableUndiscard();
	void UndiscardItem();
	void HideFrame(short nShow);
	BOOL IsEnableAccessVdba();
	void AccessVdba();
	void SetSessionStart(long nStart);
	void SetSessionDescription(LPCTSTR lpszDescription);
	BOOL IsResultFrameVisible();
	void DoWriteFile();
};
