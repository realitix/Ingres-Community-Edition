// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CIjaCtrl wrapper class

class CIjaCtrl : public CWnd
{
protected:
	DECLARE_DYNCREATE(CIjaCtrl)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xc92b8427, 0xb176, 0x11d3, { 0xa3, 0x22, 0x0, 0xc0, 0x4f, 0x1f, 0x75, 0x4a } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	unsigned long GetTransactionDelete();
	void SetTransactionDelete(unsigned long);
	unsigned long GetTransactionInsert();
	void SetTransactionInsert(unsigned long);
	unsigned long GetTransactionAfterUpdate();
	void SetTransactionAfterUpdate(unsigned long);
	unsigned long GetTransactionBeforeUpdate();
	void SetTransactionBeforeUpdate(unsigned long);
	unsigned long GetTransactionOther();
	void SetTransactionOther(unsigned long);
	BOOL GetPaintForegroundTransaction();
	void SetPaintForegroundTransaction(BOOL);

// Operations
public:
	void SetMode(short nMode);
	long AddUser(LPCTSTR strUser);
	void CleanUser();
	void RefreshPaneDatabase(LPCTSTR lpszNode, LPCTSTR lpszDatabase, LPCTSTR lpszDatabaseOwner);
	void RefreshPaneTable(LPCTSTR lpszNode, LPCTSTR lpszDatabase, LPCTSTR lpszDatabaseOwner, LPCTSTR lpszTable, LPCTSTR lpszTableOwner);
	void SetUserPos(long nPos);
	void SetUserString(LPCTSTR lpszUser);
	void SetAllUserString(LPCTSTR lpszAllUser);
	void AddNode(LPCTSTR lpszNode);
	void RemoveNode(LPCTSTR lpszNode);
	void CleanNode();
	short GetMode();
	void EnableRecoverRedo(BOOL bEnable);
	BOOL GetEnableRecoverRedo();
	long ShowHelp();
	void SetHelpFilePath(LPCTSTR lpszPath);
	void SetSessionStart(long nStart);
	void SetSessionDescription(LPCTSTR lpszDescription);
	void AboutBox();
};
