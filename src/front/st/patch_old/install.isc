;                               INSTALL.ISC
;
;  SAMPLE INSTALLATION FILE WITH FORMAT NOTES
;
;  General Rules:
;       1) Items in brackets '[' or ']' denote keywords used to define
;	   sections of the install script or used to set internal flags.
;       2) Comment lines begin with ';'
;	3) Several pre-defined variables exist:
;	    %0% : Target directory for the installed product.
;	    %1% : In WINDOWS, the Windows directory; in OS2, the
;		  current directory on the active hard disk.
;	    %2% : In WINDOWS, the Windows System directory; in OS2, the
;		  OS2 DLL directory
;	    %3% : This is a bit flag representation of up to 32
;		  components (groups) that show up on the selection
;		  dialog.  Each bit, when 1 (starting from the lowest
;		  bit) represents the respective option selected.
;		  This can be used to pass the selection information
;                 to another program when EXEC'd by the installer.
;	    %4% : This is the drive of the target directory, to pass
;                 to exec's or calls primarily.
;	    %5% : The directory of the CA-APPS common tools.  Use this
;		  as the target drive when installing common tools such
;		  as CABL.DLL, etc.
;	    %6% : The source subdirectory.
;	    %7% : The boot drive.
;	    %8% : The response file name.
;           %9% : The machine (host) name for NT and Win95
;	    %{any letter}% : The directory specified in the [directory]
;		  section that matches that letter.
;	4) MAX Disks	   = 100
;	5) MAX Files	   = 10000
;	6) MAX Directories = 625
;
;   NOTE:   If you are using help in a multi-product installation and using
;           sub-scripts then you must have instos2.hlp file on the disk.
;	    CA-Install will look on the disk and will Initialize the help
;	    manager if it finds instos2.hlp. Otherwise, it will hide the help
;	    button.
;
;   NOTE:   The new version of CA-INSTALL (3.2) is mostly backward compatible
;	    with 3.0 and old scripts should be able to run without a problem.
;	    Largest number of changes are made in the products section for
;	    multi-product installation.
;	    If you are moving from 3.0 to 3.2 the following sections are
;	    changed. Please read the full discriptions of each section,
;	    compare the changes and then update your 3.0 script files.
;
;		[progman]
;		    OLD:
;			FOR WINDOWS:
;                       "n", "Parameter String", "icon caption", "Title","filename"
;			FOR OS/2:
;                       "n", "Parameter String", "Class", "icon caption", "Title","filename"
;		    NEW:
;			FOR BOTH OS:
;                       "n", "Parameter String", "icon caption", "Class", "Title","filename"
;		[products]
;		    OLD:
;                       "prod","appname","baseapp","comment"
;		    NEW:
;                       "prod","appname","baseapp","comment","flags","iscname","iscdisk"
;		[environment]
;		    OLD:
;			env string
;		    NEW:
;                       "prog", "env"
;		[call]
;		    OLD:
;                       "prog", "product", "comp-ID", "call", "prompt"
;		    NEW:
;                       "prog", "product", "comp-ID", "call", "prompt", "state"
;		[exec]
;		    OLD:
;                       "product","exec","prompt"
;		    NEW:
;                       "prog","exec","prompt", "state"
;
;
;   NOTE:   In 3.3 the file section has been changed.
;
;               [files]
;		    OLD:
;                       ;"n","prod","flags","d","idir","destfilename","PName","Description","Comment","size","finalsize"
;                   NEW:
;                       ;"n","prod","flags","d","idir","destfilename","srcfilename","PName","Description","Comment","size";,"finalsize"
;
;   NOTE:   Licensing requires a DAT file to be created by the CA-Install.
;           CA-Install creates a DAT file if BASEAPP name was given, LICENSE
;           keyword was used and the file is encrypted.



[setup]
; OpenIngres/NT 3.5" Diskette Installation
  "PACKAGENAME","OpenIngres Patch"
  "CAPTIONNAME","OpenIngres for Microsoft Windows NT Patch Installation"
  "APPNAME", "OpenIngres Patch"
  "RELEASESTRING", "Version x.x/00"
;
; The string, SPJWIN, in BASEAPP is used to generate the name of registration
; key file.  The installation program concatnates this string, only the first
; 7 characters are used, with "_.dat" and use the derived string as the name
; of registration key file.  Therefore, this string should match the name of
; your registration key file.
; 
  "BASEAPP", "OPINGNT"
  "COPYRIGHTSTR", "Copyright 1995, Computer Associates International"
  "PRODIDMATCH", "000000"
; The following are new version identifiers for license checking.
  "MAJORVERSION",  "1"
  "MINORVERSION",  "2"
  "REVLETTER",     "A"

;
; demo version and turn off registration
;

;[register_as_demo]

;
; education version
;
;[register_as_education]

;Supported for backward compatibility. It has no effect.
;[noregister]

;
; Don't display the splash screen when bringing up the product.
;
[nosplash]

; The BYPASSUI flag, when present, prevents the user info dialog box
; to come up.
;
[bypassui]


; The BYPASSPID flag, when present, prevents the product ID field from
; being requested and displayed when asking for user info.
;
[bypasspid]

; The NOTCOMPLETE keyword specifies that after the install product is
; finished we don't want to display an "Install Complete" message, since
; the user will be doing more installation work via execs.
;
[not_complete]

; The SKIPWRITEKEY  keyword skips writing the keyfile information back
; to the ORIGINAL keyfile on the source disks.	This is important for
; products that will be installed from CD-ROM or other non-writable media.
; This flag is set automatically if cd-rom key word is used.
;
[skipwritekey]

; The CD-ROM  keyword makes all the destination files writeable and
; does not allow the writeback of key file and the log files.
; In other words it automatically sets the skipwritekey flag and
; overrides the creation of the log files.
;
[cd-rom]


; Use the BASIC_DLG key to bring up a dialog with the basic/advanced
; selection.
;
;[basic_dlg]

; The LOGFILE specifies a filename to use in the SOURCE directory to log
; various installation information, such as the date and time, which
; files were copied and/or compressed, errors, etc.
; This keyword is disabled if cd-rom key word is used.
;

;[logfile]
;"SPJINST.LOG"

; The PRODUCT_LOG specifies a filename to use in the SOURCE directory to
; log which products were installed, where, and when.
; This keyword is disabled if cd-rom key word is used.
;

;[product_log]
;"SPJPROD.LOG"

; The RESPONSE command specifies a filename which contains canned responses
; for the installer.  Look in the file RESPONSE.RSP for the syntax of
; response files.
;
[response]
"C:\RESPONSE.RSP"

[nosizecheck]

; The SKIPCAPPS command bypasses the prompt for CA-APPS common directory.
; This should only be used if there are no common CA tools in your product,
; and you do not wish the product to be "registered" in CAI.INI.
;
;[skipcaapps]

; The SKIPPLUGMSG skips the first message telling user to have a plug
; ready if the installation method requires plugs.
;
[skipplugmsg]

; The NOBACKLEVEL flag does not allow older versions of files to be
; installed - the user gets no indication that files have been skippped.
;
[nobacklevel]

; The USEMULTITITLE is used in multi-product installation. If it is used
; then "CA-Multiple product installation" is displayed as title on the
; product selection screen rather than the baseapp installation.
;[usemultititle]

; The DLL_CALLOUT keyword is used to call a function in the specified
; dll after the product path has been entered (per product).  One
; use for this feature is to verify the path that has just been entered
; (macros are allowed as parameters, for instance %0% can be passed).
; If the return is FALSE (0), the installation will be aborted. The
; DLL is assumed to be on disk 1 and NOT compressed. Only 1 parameter
; is supported.
;

;[dll_callout]
;"A","iinstnt.dll","CheckDbms","%0%"
;"B","iinstnt.dll","CheckNetwork","%0%"
;"C","iinstnt.dll","CheckStar","%0%"
;"D","iinstnt.dll","CheckESQLC","%0%"
;"E","iinstnt.dll","CheckTools","%0%"
;"F","iinstnt.dll","CheckVision","%0%"

; ONE_PATH Only asks for the parent directory once, and uses that for
; all subsequent products.
[one_path]

;  The PRODUCTS keyword specifies which products are to be installed
;  for multiple product installations.	If there is only one product
;  to be installed, this keyword/section can be skipped, or it may
;  be defined.	Products may be broken out further into components.
;
;  FORMAT:
;
;   "prod","appname","baseapp","comment","flags","iscname","iscdisk"
;
;   prod    : This is a one character string, A to Z, that uniquely identifies
;	      each product.  This is checked against in in various other
;	      sections.
;   appname : This is an override for the setup string "APPNAME"
;   baseapp : This is an override for the setup string "BASEAPP"
;   comment : A longer description of the product.
;   flags   : (Optional)Can be none, one, or many of the following:
;		R   : Required product- Setup **will** copy this product.
;		D   : Display this product in the User Selection Listbox.
;		      This is the default option.
;		T   : Turn off selection of this item as a default.
;		U   : Do not ask for parent sub-directory. Use default.
;               E   : Exclusive components
;   iscname : (Optional) Seperate script file for this product.
;   iscdisk : (Optional) Disk number iscname resides on.
;   DATDir  : (Optional) Destination dir for the key file for this product.
;
;
;       TO USE THE OPTIONAL INCLUDED SCRIPT FILE:
;           External script files for multi-product installs is supported
;           in this release.  These script files should only contain
;           the [disks], [directories], [files], and [calls].  The
;           primary script file must contain the products defined in
;           the products section, and the [disks] section should have
;           disk defined that contains the sub-script file.
;
;

[products]
"A","OpenIngres Patch#4762","PATCH","CA-OpenIngres for Microsoft Windows NT Patch#4762","D"
;END PATCH

;  The license keyword specifies which license types are to be checked
;
;  FORMAT:
;
;   "prod","license_type","param1","param2"
;
;   prod    : This is a one character string, A to Z, that uniquely identifies
;	      each product.  This is checked against in in various other
;	      sections.
;   license_type : "NO LICENSE"      - no checking
;                  "USER COUNT"      - specifies concurrent users running
;				       this product on a network
;                  "PLUG"            - checks hardware plugs, or "dongles"
;                  "SERIAL"          - not used yet
;                  "STANDALONE"      - does not work on a network
;                  "NETWORK"         - MUST run on a network
;                  "TIME RESTRICTED" - product works for a specified time;
;				       then must get a key from sales
;                  "COUNTRY"         - country code is checked before running
;   param1 :
;	    USER COUNT:      The number of users that can be activated.
;	    PLUG:	     This parameter specifies the byte offset in the
;			     plug reserved for this product.  This should be
;			     registered with config control and must match
;			     the production of the plug.
;	    COUNTRY:	     The country code that MUST be defined in the
;			     system settings for the product to run.
;	    TIME RESTRICTED: The number of days to let the product
;			     run before requiring a key.
;   param2 :
;		PLUG: This is the release number of the product.  It has
;		      no bearing on the displayed version number; all
;		      products start out at 1 (even if it is release 6.2),
;		      and new releases will increment that number by one.
;		      The max value is 63.
;
;NOTE:  Licensing requires a DAT file to be created by the CA-Install.
;       CA-Install creates a DAT file if BASEAPP name was given, LICENSE
;       keyword was used and the file is encrypted.

[license]
"A","NO LICENSE"
"B","NO LICENSE"
"C","NO LICENSE"
"D","NO LICENSE"
"E","NO LICENSE"
"F","NO LICENSE"

;  The EXCLUSIVE keyword works in conjunction with the PRODUCTS keyword
;  and determines whether or not the top-level products are mutually
;  exclusive or not.  For instance, if there was a bundle of un-related
;  products, you would NOT use the exclusive keyword; if only one
;  product could be installed at a time you WOULD set the exclusive
;  keyword.
;
;[exclusive]

; Net License - don't use.  Changes the registration dialog.
;[net_license]


;  The SLIDESHOW keyword specifies a list of bitmaps to display, along
;  with how long each one should last.	The bitmaps will display only
;  while files are being copied.
;
;  FORMAT:
;   bitmap DLL : The first line following the [slideshow] command
;		 defines what DLL the bitmaps are to be loaded from.
;
;   bitmap_id, time, x, y
;
;       bitmap_id : The id of defined bitmaps that are built into
;                   into the DLL via the .rc file.
;	time	  : The time, in tenths of seconds, to display the bitmap.
;	x	  : upper left x coordinate to display bitmap in dialog coords.
;	y	  : upper left y coordinate to display bitmap in dialog coords.
;
;
[slideshow]
DLLBMP.DLL
504, 450, 275, 160
506, 450, 275, 160
500, 450, 275, 160
508, 450, 275, 160
501, 450, 275, 160
503, 450, 275, 160
505, 450, 275, 160
507, 450, 275, 160
509, 450, 275, 160
510, 450, 275, 160
511, 450, 275, 160

;
;  The SIGNATURE keyword checks for the existance of a file before
;  the product is installed. This check can be used for upgrade products
;  that require a previous version or competetive product or perhaps
;  other required modules in a multi-module app.
;
;  If there is more than one file specified a list box will display the
;  descriptions then ask the user to specify which product or file they have.
;  Once specified at least one pattern at offset 1-n must match.
;
;  If your product is compressed use the compressed offset and match
;  pattern as one pattern and the uncompressed as the other. This allows
;  the user to just insert the original disk without the need to install
;  the product. Also use multiple patterns for revisions of the product that
;  have the same file name (i.e Rev SC4 Rev A,B,C).
;
;  If your product requires mutliple files use multiple [SIGNATURE] blocks.
;  You should, of course, encrypt this file when using SIGNATURE blocks.
;
; "prod", "filename", "description", offset_1, "match_string_1",offset_2, "match_string_1"
;       prod     - This is a one character string, A to Z, that uniquely identifies
;	        each product.  This is checked against in in various other
;	        sections.
;	filename - full filename and optional drive and file extent
;		program will check for existence of file on optional
;		drive and path, if not found a dialog will ask for
;		location.
;
;	Description
;               Description of file to look for. I.e. "Harvard Project 1.0"
;
;	File Offset 1
;		Offset in bytes expressed as decimal or hexidecimal
;		if preceeded with 0x notation (123 or 0x40000)
;	Match String 1
;		String or byte pattern to look for at location file offset.
;		Quoted string may contain ascii character or hexidecimal
;               notation when preceeded with a "\" (i.e  \x07). A backslash
;       is specified as "\\".
;	Optional File Offset 2-n
;	Optional Match String 2-n (up to 256 line length)
;	EXAMPLE
;	   [signature]
;	   ; The following allows installation of SuperCalc if the user has
;	   ; any previous version or Lotus 123 version 2.1
;          "SC3.COM","SuperCalc3",0x128,"S/N0"
;          "SC4.COM","SuperCalc4 Rev B, Installed",0x40000,"\xAE\x52\x01",0x128,"S/N"
;          "SC5.COM","SuperCalc5 Revision A" ,0x122,"\xAE\x52\x01"
;          "SC5.COM","SuperCalc5 Revision C" ,0x122,"\xdd\x52\x01"
;          "123.EXE","Lotus 123",0x40000,"\xAE\x52\x01",0x128,"S/N"
;
 
;[signature]
;"C", "%0%\ingres\utility\ingstart.exe", "OpenIngres DBMS Version 2.0/00", 0x4CB08, "31-may-1991\x00\x00\x00\x00\x00OpING 2.0/00"
;"D", "%0%\ingres\utility\ingstart.exe", "OpenIngres DBMS Version 2.0/00", 0x4CB08, "31-may-1991\x00\x00\x00\x00\x00OpING 2.0/00"
;"E", "%0%\ingres\utility\ingstart.exe", "OpenIngres DBMS Version 2.0/00", 0x4CB08, "31-may-1991\x00\x00\x00\x00\x00OpING 2.0/00"
;"F", "%0%\ingres\utility\ingstart.exe", "OpenIngres DBMS Version 2.0/00", 0x4CB08, "31-may-1991\x00\x00\x00\x00\x00OpING 2.0/00"

; Specifies what disks are part of the installation.
;
;
; Format:
;
; "n","path","name"
;
; n	: The disk number, 0-100
; path  : The path of the disk, i.e. "A:\".  This will generally be
;	  ignored since the path will be replaced if the user executes
;	  the install from another drive.
; name  : The name on the printed disk label you stick on,
;         i.e. "KillerApp Disk #1"
;

[disks]
"0","A:\","OpenIngres Patch#4762 Disk #1"
"1","A:\","OpenIngres Patch#4762 Disk #2"
;END PATCH


; This is where you indicate where to place the files.  There are
; two types of directories: The parent, and children.  Children
; must be from the parent, or from other children. There can
; only be one parent, as many children as you like
;
;
; Note: MAX number of dirs = 625 !!
;
; Note: To create empty directories use an null destination file name in file
;       section.
;
; Format:
;
; "product","n","path","description"
;
; product     : The product identifier (for multiple product installs).
;               If there is only one product, this value should be "A".
; n	      : The directory Number. PARENT must be 0, and must exist.
;               Children can have names A-ZZ.  Children start with backslash.
; path        : The name of the subdirectory
; description : The description of the purpose of this directory
;
; Note: "0", the parent, may be modified by the user.  This is reflected
; in "0"'s value.
;

[directories]
"A","0","C:\oping","CA-OpenIngres C:\oping"
"A","AA","\ingres\bin","CA-OpenIngres \ingres\bin"
;END PATCH

;
; This is where you place the information about each file to be
; copied.
;
;
; ----------------------------------------------------------------------------
;
; NOTE:  There are two types of setup: Simple and Complex.
;
;        Simple:  Installs ALL files, like a batch file.  For this       
;                 setup, do not worry about "D" flags, "R" flags,
;                 or the <nn> flag.
;
;        Complex: Presents the user with a dialog box allowing
;                 them to install certain files.  All flags apply
;                 in this case.                
;
;        For Group (or Component) definitions, ALL fields are required.
;           For files following each group definition, only the first 6
;           fields are required.  There should always be at least one
;           group defined, using either the D, T, or R flag (these are
;           mutually exclusive).
;
; NOTE:  To install files spanning multiple disks the first file should have
;        normal paramter; e.g. "C" or "CD10IA" or "CR" etc. The remaining files
;        must have "S" in their parameter list; e.g. "CS". The "S" flag tells
;        CA-Install that this file is a part of a spanned file.
;
; Example of a spanned file:
;
;    "3","A","C","0","","BIGFILE.TXT","BIGFILE.001",""
;    "4","A","CS","0","","BIGFILE.TXT","BIGFILE.002",""
;    "5","A","CS","0","","BIGFILE.TXT","BIGFILE.003",""
;    "6","A","CS","0","","BIGFILE.TXT","BIGFILE.004",""
;
; ----------------------------------------------------------------------------
;
; Format:
;
; "n","prod","flags","d","idir","destfilename","srcfilename","PName",
;     "Description","Comment","size","finalsize", "iconfile","paramstr"
;
; n          : The disk number this file resides on
;
; prod	     : Product code which matches the product codes defined in the
;	       [products] section.  If there is no products section, this
;              value should be "A".
;
; flags      : Can be none, one, or many of the following:
;
;              R     : Required GROUP - Setup **will** copy all files
;                      in this group.
;              D     : Display this GROUP in the User Selection Listbox.
;              T     : Turn off selection of this item as a default, but
;                      show this in the list box as a group.
;              C     : Compressed file. Use the "real" filename in this .ISC
;		       file, setup will look for a filename with the last
;                      character of the extension == '_'.
;              Ic[t] : Add this program to ProgMan, group c. Group is A-Z
;		       t is an optional parameter that can be either W, P,
;		       or M (Windows, PM, or MS-DOS).
;              N     : Minimize the executeable on start. Only valid if 'I'
;                      paramter is specified to create icons. (Only for Windows)
;	       nn    : The next nn entries are part of the group to copy,
;		       for example, if there are four files for KillerApp,
;		       all of which you copy or you dont, then you
;		       would place 03 in this spot, and make the next
;		       three entries be the other three files. The user
;		       will see this entry as only one Object though.
;	       On    : (Optional) If the product already exists on the
;                      users computer this flag can be used to determine
;		       CA-Install actions:
;				    n = 0   Check time and dates of the
;					    source and destination files
;					    and then ask display a dialog
;					    box for overwrite instructions if
;					    the source file is older otherwise
;					    copy file. (default).
;				    n = 1   Always display a dialog box for
;					    instructions.
;				    n = 2   Replace destination file
;					    with source file.
;				    n = 3   Do not replace destination file
;					    with source file.
;	       V=n.nn: Install only if the operating system (i.e. Windows)
;                      is this version or later. If n='S', then this will
;                      check for the existence of Win32s, if n='N' this
;                      will check for NT, if n='C' this will check for
;                      Windows95 (Chicago).
;
;		       Examples:
;
;                      This example says "if running under Windows 3.0 then copy SPJWIN.EXE".
;                      "0","A","C07DIAV=3.0","0","","SPJWIN.EXE","CA-SuperProject","Program Files","CA-SuperProject program, help and report files","2550", "2550"
;
;		       Copy this file if the version number greater than 2.0
;                      "0","A","CV>2.0","0","","SPJLOGO.DLL",""
;
;		       The following is WRONG beacuse the version number and
;                      file count can't go together.
;                      "0","A","CV=3.007DIA","0","","SPJWIN.EXE","CA-SuperProject","Program Files","CA-SuperProject program, help and report files","2550", "2550"
;              S     : Necessary if the file is spanning multiple disks and this
;                      is not the first portion of the spanning file.
;
; d          : The destination directory. 0 = Parent, A-ZZ = Children, %5%
;              for common tools
;
; idir       : The directory on the install disk
;
; destfilename: The actual name of the file. 12 chars MAX. This can be blank
;               for the creation of empty sub-directories.
;
; srcfilename: The name of the file on disk. 12 chars MAX. (optional)
;
; PName      : The name of the Icon in Progman (required if D flag)
;              32 chars MAX.
;
; Description: (Group Definitions Only)
;              A short description, for the listbox entry (only if D flag)
;              20 chars MAX.
;
; Comment    : (Group Definitions Only)
;              The lengthy text displayed in the Comment box (only if D flag)
;	       80 chars MAX.
;
; size       : (Group Definitions Only)
;              Size of file/group actually copied in K
;
; finalsize  : (Group Definitions Only)
;              The ulitmate file size of file/group in K. Usually different if
;	       there are other processes which will expand or implode files
;	       after the install program is finished.  Another use is to
;	       account for the sector size of hard disks; for instance,
;	       20 files with a length of 10 bytes would show up in the
;              "size" parameter as 200 bytes (1K), but if installed on a hard
;	       disk with an 8K sector size the actual used space would be
;	       20 * 8K = 160K.
;
; iconfile   : Fully qualified path to an icon file name. It is only valid if
;              'I' parameter is used in the flags section. ( optional )
;
; paramstr   : The command-line parameters to attach to the program when
;              associating with an icon. (optional)
;

[files]
"0","A","RCO0","%5%","","CAINLOGS.DLL","CAINLOGS.DL_","","","","1","1","",""
"0","A","RCO0","%5%","","CAIN4SHL.DLL","CAIN4SHL.DL_","","","","1","1","",""
"0","A","RCO0","%5%","","CALM_W32.DLL","CALM_W32.DL_","","","","1","1","",""
"0","A","RCO0","%5%","","CATOCFGE.EXE","CATOCFGE.EX_","","","","1","1","",""
"0","A","RCO0","%5%","","CATOPATH.EXE","CATOPATH.EX_","","","","1","1","",""
"1","A","RCO2","AA","bin","oidmfnt.dll","oidmfnt.dl_","","","","2002","2002","",""
"1","A","RCO2","AA","bin","windo_pt.exe","windo_pt.ex_","","","","15","15","",""
;END PATCH

; This defines the progman groups that the apps above will be added to
;
; Format:
;
; "n", "Parameter String", "icon caption", "Class", "Title","filename","flags","iconfile"
;
; n		  : The number of the group, A-Z, or the name of the .exe
;		    file with path.
; parameter string: The default parameters (in a string)
; icon caption    : The string displayed below the icon.  Only needed if
;		    an external program is set up (such as winhelp).
;                   Should be empty if not an external program.
; class (OS2 ONLY): A user specified object class for objects owned by this
;                   group.  The default should be "WPProgram".
; title           : The caption on the group window
; filename	  : The name of the .GRP file.
; flags           : Can be none, one, or many of the following:
;
;                   N   :   Minimize the executeable on start. Only valid if
;                           if a name of an .exe was provided in 'n' parameter.
;                           (Only for Windows)
; iconfile        : Fully qualified path to an icon file name. It is only valid
;                   if a name of an .exe was provided in 'n' parameter. (optional)
;
; NOTE:     There are two ways for creating icons. Either by putting using 'I'
;           flag in the flags parameter of the files section or providing an exe
;           name in the 'n' paramter of the progman section. If files section was
;           used to specify the progman id then icon file name will be taken from
;           there. Otherwise, if exe name was provided in the 'n' paramter the
;           'iconfile' paramter in progman section will be used.
;
;

[progman]
"A","","","","OpenIngres 2.0 Database","OPINGDB.GRP","",""
"B","","","","OpenIngres 2.0 Networking","OPINGNET.GRP","",""
"C","","","","OpenIngres 2.0 Database","OPINGDB.GRP","",""
"Z","","","","OpenIngres 2.0 Tools","OPINGTLS.GRP","",""
"E","","","","OpenIngres 2.0 Tools","OPINGTLS.GRP","",""
"F","","","","OpenIngres 2.0 Tools","OPINGTLS.GRP","",""
"G","","","","OpenIngres 2.0 Tools","OPINGTLS.GRP","",""

; The ENVIRONMENT section describes changes to run-time environment variables
; to be issued.
;
;   NOT SUPPORTED FOR WINDOWS!
;
; Format:
;
;   "prog", "env"
;
;   prog    : The program identifier - ( used in call, precall or exec )
;   env     : Environment string.
;
;[environment]

;
; The [precall] section specifies a program to be run before copying any files.
; It must appear on the line following the [precall] header.
; The entire line is passed to the system.  Args can be included, as well as
; any level of path spec desired.
;
; Format:
;
;   "prog", "precall", "prompt", "state"
;
;   prog    : The program identifier - OS/2 only (from environment )
;   precall : The call string, including all command line parameters
;   prompt  : A yes/no prompt - if no, the exec will not be issued, otherwise
;	      it will be executed.
;   state   : 0 = Visible; 1 = Invisible;
;	      Note: In Windows all dos programs are controlled by PIF files.
;	      Note: Once the program has been started it can activate itself
;		    and become visible.
;
;[precall]
;"A", "%6%\ipprecal.bat","",1


;
; The [call] section specifies a program to be run before the end of the
; successful install.  It must appear on the line following the [call] header.
; The entire line is passed to the system.  Args can be included, as well as
; any level of path spec desired.
;
; Format:
;
;   "prog", "product", "comp-ID", "call", "prompt", "state"
;
;   prog    : The program identifier - OS/2 only (from environment )
;   product : The product identifier - only if installing this product will
;             this exec be issued.  "0" signifies to execute this command
;	      regardless of which products were installed.
;   comp-ID : The component identifier - only if installing this component of
;             this product will this exec be issued.  "0" signifies to execute
;             this command regardless of which components were installed.
;   call    : The call string, including all command line parameters
;   prompt  : A yes/no prompt - if no, the exec will not be issued, otherwise
;	      it will be executed.
;   state   : 0 = Visible; 1 = Invisible;
;	      Note: In Windows all dos programs are controlled by PIF files.
;	      Note: Once the program has been started it can activate itself
;		    and become visible.
;
;[call]
;"A","A","0","%5%\catopath.exe %0%\ingres\bin;%0%\ingres\utility"
;"A","A","0","%0%\ingres\bin\vardlg.exe DbmsDlg,%0%"
;"A","A","0","%0%\ingres\vdba\rmcmdenv.exe %0%\ingres\vdba" 


; The CHANGEDIR command resets the current directory to the specified
; directory.  This could be useful, for instance, if you wanted to set
; you current directory to a DLL subdirectory, and then EXEC a program
; that resides in another directory (but is in the path).
;
;[changedir]
;%0%\DLL


;
; The [exec] section specifies a program to be run at the end of the successful
; install.  It must appear on the line following the [exec] header.
; The entire line is passed to the system.  Args can be included, as well as
; any level of path spec desired.
;
; Format:
;
;  "prog","exec","prompt", "state"
;
;   prog    : The program identifier - OS/2 only (from environment )
;   exec    : The exec string, including all command line parameters
;   prompt  : A yes/no prompt - if no, the exec will not be issued, otherwise
;	      it will be executed.
;   state   : 0 = Visible; 1 = Invisible;
;	      Note: In Windows all dos programs are controlled by PIF files.
;	      Note: Once the program has been started it can activate itself
;		    and become visible.
;
[exec]
"A","%0%\ingres\bin\windo_pt.exe

;  The BACKGROUND keyword specifies the colors or a bitmap to be displayed
;  as the background of the install.
;  If bit map is given it will override color schemes except for the title
;  color.
;
;
;  FORMAT:
;   "dll","id256","id16","titleColor","bkColor","barColor"
;
;       dll         : Name of the DLL containing the background bitmaps.
;                     The name of the DLL should be what it is on the disk.
;                     e.g. compressed DLL may have an extension of .DL$
;       id256       : Id of a 256 color bitmap.
;       id16        : Id of a 16 color bitmap.
;       titleColor  : Color of the title string.
;       bkColor     : Color of the back ground. Include 'S' in the parameter
;                     list if shaded background is required.
;                     "R0G255B0S" will result in a shaded green screen.
;       barColor    : Color of the bar running across the screen.
;
;  NOTE:
;   The color must be a RGB value; e.g. R255G0B0 is red.
;   Use Windows control panel/Color utility to see the RGB value of a
;   color. In OS2 use color editing utility
;

;
[background]
"dllbmp.dll","0","0","R255G255B255","R0G0B255S","R255G0B0"



;
; The [ini] section defines all of the settings that will go into the app's
; .INI file.
;
; The line following the [ini] header contains the name of your .INI file.
; It should be name.extension followed by the PRODUCT IDENTIFIER.
; By default it is placed in the app's main directory.
;
; Following the Product Identifier is an optional flag 'F', which forces
; the sections to be overwritten even if they already exist (normal
; behaviour is described below).
;
; Remaining lines, to end of SETUP.ISC file, are settings for your INI file.
; All settings MUST be preceded with a group name in square brackets.
;
; If INI file does not exist, it is built with these lines verbatim.
;
; If INI file DOES exist, only new settings (right hand side) are added.
; Existing keys with different values are NOT modified in the INI file.
;
; You may substitute params into the text with %token%.  Valid tokens:
;   - single char "0", and A-Z.  Refers to token in [directories] section.
;     Note that this always substitutes a fully qualified pathname, NOT
;     terminated with a backslash.  That is, specifying a child directory
;     id token will result in: drive, colon, slash, parent, slash, child.
;
;   - "PACKAGENAME", "CAPTIONNAME", "APPNAME", "RELEASESTRING", "BASEAPP"
;       These are defined in the [setup] section.
;       Do not specify the token name within quotes.  See example.
;
; Text is substituted exactly as declared within quotes.  No blanks added.
; See example "setting6" below; see it expand when you generate INI file.
;
;
;[ini]
;IniFileName: %1%\spjwin.ini,A,F
;[SPJ General]
;Macro Program Types=Realizer,V-Basic,Other

;[SPJ Run Command Definitions]

;
; The REGISTRY keword is available only under NT and Windows95.  This
; section replaces the INI section for these operating systems.
;
; Format:
;   Line 1:                [registry]
;   Line 2 (Group Key):    Software: A
;   Line 3..n (Keywords):  {subkey},keyword {, type, value}
;   Line n+1 (Group Key):  Environment: A
;   Line n+2..m            {subkey},keyword {, type, value}
;   Line m+1 (Group Key):  Software: B
;
; Line 2 has several options:
;       Software:    The stuff that used to go in your .ini file
;       Environment: The stuff that used to go in autoexec.bat
;   This line always contains the Product Identifier as well.
;   There can only be one software group and environment group for
;   each product.
;
; Keyword lines contain keywords with optional values to be put
; into the registry for this product.  For CASoftware, CA-Install puts this
; info in the HKEY_LOCAL_MACHINE\Software\ComputerAssociates\{ProductName}\ and
; HKEY_CURRENT_USER\Software\ComputerAssociates\{ProductName}\ sections
; of the Registry, where ProductName is defined in the [products] section.
;
; For Environment, these values are put in the HKEY_USERS\Environment and
; HKEY_CURRENT_USER\Environment sections.
;
; Subkeys can be defined, with multiple levels.  For example, to create the
; subkey Preferences\CalculationOptions you would specify
; "Preferences\\CalculationOptions","Option",REG_SZ,Value
;
; FOR THE DE-INSTALL TO WORK, YOU MUST CREATE A KEY THAT DEFINES "Root" as
;   the root directory of your application (i.e. %0%).  CA-Install will
;   also write to a file called CAREGENV.LOG which will provide de-install
;   information.
;
; All other specialized Registry installation needs will have to be handled by
; post-install processes.
;
; Types can be any one of the following values, but only 3 types are
;   fully supported (REG_SZ, REG_EXPAND_SZ, REG_NONE, and REG_DWORD - all
;   others are treated as REG_SZ for now):
;       REG_BINARY
;       REG_DWORD
;       REG_DWORD_LITTLE_ENDIAN
;       REG_DWORD_BIG_ENDIAN
;       REG_EXPAND_SZ           - A string that needs to be expanded by system
;       REG_LINK
;       REG_MULTI_SZ
;       REG_NONE
;       REG_RESOURCE_LIST
;       REG_SZ                  - Normal strings
;
; For more information on the types, see the RegQueryValueEx function
; in the Win32 SDK documentation.
;

;[registry]
;CASoftware: A
;"","Root",REG_SZ,"%0%"
;CASoftware: B
;"","Root",REG_SZ,"%0%"
;CASoftware: C
;"","Root",REG_SZ,"%0%"
;CASoftware: D
;"","Root",REG_SZ,"%0%"
;CASoftware: E
;"","Root",REG_SZ,"%0%"
;CASoftware: F
;"","Root",REG_SZ,"%0%"

;Environment: A
;"","PATH", REG_EXPAND_SZ, "%0%\\INGRES\\BIN,%0%\\INGRES\\UTILITY"
;"","II_SYSTEM",REG_SZ,"%0%"
;Environment: B
;"","PATH", REG_EXPAND_SZ, "%0%\\INGRES\\BIN,%0%\\INGRES\\UTILITY"
;"","II_SYSTEM",REG_SZ,"%0%"
;Environment: C
;"","PATH", REG_EXPAND_SZ, "%0%\\INGRES\\BIN,%0%\\INGRES\\UTILITY"
;"","II_SYSTEM",REG_SZ,"%0%"
;Environment: D
;"","PATH", REG_EXPAND_SZ, "%0%\\INGRES\\BIN,%0%\\INGRES\\UTILITY"
;"","II_SYSTEM",REG_SZ,"%0%"
;Environment: E
;"","PATH", REG_EXPAND_SZ, "%0%\\INGRES\\BIN,%0%\\INGRES\\UTILITY"
;"","II_SYSTEM",REG_SZ,"%0%"
;Environment: F
;"","PATH", REG_EXPAND_SZ, "%0%\\INGRES\\BIN,%0%\\INGRES\\UTILITY"
;"","II_SYSTEM",REG_SZ,"%0%"

; end of file INSTALL.ISC



                                 
