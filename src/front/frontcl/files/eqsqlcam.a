--
-- File Name : 	eqsqlcam.a
--
-- Purpose :	ADA package specification file for Embedded SQL record
--		definition and run-time INGRES/SQL function interfaces.
--		This version is for multi-threaded programs.
--
-- Packages :	ESQLM	    - Interface to INGRES/SQL.
--
-- Usage :
--		EXEC SQL INCLUDE SQLCA;
--    generates :
--		with EQUEL; use EQUEL;
--		with ESQLM; use ESQLM;
--		with EQUEL_FORMS; use EQUEL_FORMS;
--
-- History :	01-Apr-1986 (neil)
--			Written for VAX/VMS.
--
--              06-Mar-1988 (russ)
-- 			Altered to support VERDIX Ada on UNIX.
--
--		19-Apr-1988 (seng)
-- 			Modified to support the new syntax from Verdix ADA.
--			The change was necessary for Verdix because they 
--			needed to satisfy ACVC 1.10. The change was to the
--			"pragma interface" statement.
--
--		01-May-1989 (terryr)
-- 			Modified to use ii_modifiers.a and II_CC_PREFIX.
--
--		19-Sep-1989 (terryr)
-- 			Modified for Release 6 also removed II_CC_PREFIX as
--			some ADA compilers could not handle its useage.  The
--			symptom of this was a failed link attempt which
--			generated an empty "Undefined:" externals list.
--
--		04-Oct-1989 (neil)
--			Modified for upgrade to Release 6.3.  New interfaces, 
--			modified non-C string interface, and modifications for
--			port to VMS Verdix Ada.
--
--		12-Apr-1990 (teresal)
--			Added representation clause for records.  This helps
--			guarantee expected C record alignment across different
--			compilers - same as terryr fix 10/24/89.
--		
--		17-Sep-1991 (seng)
--			Modified to use C_SUBP_PREFIX as specified in Section
--			4.2.2 of the Verdix VADS IBM RS/6000 Programmers'
--			Manual.  This is a change for portability across all
--			platforms which support ADA.  C_SUBP_PREFIX is
--			defined as a "." on the RS/6000, "" on the DECstation,
--			"_" everywhere else.
--		17-dec-1992 (larrym)
--			Added IIsqlcdInit and IIsqGdInit
--		21-dec-1992 (kathryn)
--			Fixed typo in IIsqlcdInit pragma.
--		6-Jun-2006 (kschendel)
--			Added IIsqDescInput
--		24-Mar-2007 (toumi01)
--		    Added II_sqlca for multi-threaded Ada.
--		04-May-2007 (toumi01)
--		    Move global copy of sqlca to package ESQLGBL so that
--		    the non-TLS sqlca can be excluded from -multi programs.
--		10-Oct-2007 (toumi01)
--		    eqsqlca.a copied to eqsqlcam.a and ESQL package
--		    renamed ESQLM for multi-threaded programs.
--
-- Example Interface Format :
--              procedure IIname(arg1: Integer; arg2: Address);
--		pragma interface (C, IIname);
--		pragma interface_name (IIname, C_SUBP_PREFIX & "IIname");
--
-- See eqdef.a for more notes on interfaces.
--
-- Copyright (c) 2004, 2007 Actian Corporation
--

with SYSTEM;
with LANGUAGE;
with EQUEL;

package	ESQLM is

    use SYSTEM;
    use LANGUAGE;
    use EQUEL;

    -- Define the program SQL error structure.

    type IISQL_ERRM is		-- Varying length string.
	record
	    sqlerrml: Short_Integer;
	    sqlerrmc: String(1..70);
	end record;
    
    -- Adjust layout for some platforms to avoid any padding.
    for IISQL_ERRM use
	record
	    sqlerrml at 0 range 0..15;
	    sqlerrmc at 2 range 0..559;
	end record;

    type IISQL_ERRD is array(1..6) of Integer;

    type IISQL_WARN is 		-- Warning structure.
	record
	    sqlwarn0: Character;
	    sqlwarn1: Character;
	    sqlwarn2: Character;
	    sqlwarn3: Character;
	    sqlwarn4: Character;
	    sqlwarn5: Character;
	    sqlwarn6: Character;
	    sqlwarn7: Character;
	end record;

    type IISQLCA is
	record
	    sqlcaid: String(1..8);
	    sqlcabc: Integer;
	    sqlcode: Integer;
	    sqlerrm: IISQL_ERRM;
	    sqlerrp: String(1..8);
	    sqlerrd: IISQL_ERRD;
	    sqlwarn: IISQL_WARN;
	    sqlext:  String(1..8);
	end record;

for IISQLCA use
  record
	sqlcaid		at 0	range 0..63;
	sqlcabc		at 8	range 0..31;
	sqlcode		at 12	range 0..31;
	sqlerrm		at 16	range 0..575;
	sqlerrp		at 88	range 0..63;
	sqlerrd		at 96	range 0..191;
	sqlwarn		at 120	range 0..63;
	sqlext		at 128	range 0..63;
  end record;

    function II_sqlca return System.ADDRESS;
    pragma interface(C, II_sqlca);
    pragma interface_name(II_sqlca, C_SUBP_PREFIX & "II_sqlca");


	-- Interface definitions for INGRES functions which do not require a
	-- special Ada subprogram to modify the original arguments before
	-- passing them to the INGRES C function.  Extra subprograms are
	-- required only for input (of I/O) calls with string arguments
	-- (the IIxxxioS calls).

	-- SQLCA Utilities
	procedure IIsqStop(sq : Address);
	pragma interface (C, IIsqStop);
	pragma interface_name (IIsqStop, C_SUBP_PREFIX & "IIsqStop");

	procedure IIsqInit(sq : Address);
	pragma interface (C, IIsqInit);
	pragma interface_name (IIsqInit, C_SUBP_PREFIX & "IIsqInit");

	procedure IIsqlcdInit(sq : Address; sqlcd : Address);
	pragma interface (C, IIsqlcdInit);
	pragma interface_name (IIsqlcdInit, C_SUBP_PREFIX & "IIsqlcdInit");

	procedure IIsqGdInit(typ : Integer; sqlstate : Address);
	pragma interface (C, IIsqGdInit);
	pragma interface_name (IIsqGdInit, C_SUBP_PREFIX & "IIsqGdInit");

	procedure IIsqPrint(sq: Address);
	pragma interface(C, IIsqPrint);
	pragma interface_name(IIsqPrint, C_SUBP_PREFIX & "IIsqPrint");

	-- SQL Connection Control
	procedure IIsqDisconnect;
	pragma interface(C, IIsqDisconnect);
	pragma interface_name(IIsqDisconnect, C_SUBP_PREFIX & "IIsqDisconnect");

	procedure IIsqUser(usrname : Address);
	pragma interface (C, IIsqUser);
	pragma interface_name (IIsqUser, C_SUBP_PREFIX & "IIsqUser");

	procedure IIsqConnect(lang : Integer;
			      a1, a2, a3, a4, a5, a6, a7, a8, a9, a10,
			      a11, a12 : Address := IInull);
	pragma interface (C, IIsqConnect);
	pragma interface_name (IIsqConnect, C_SUBP_PREFIX & "IIsqConnect");

	procedure IILQsidSessID(session_id: Integer);
	pragma interface (C, IILQsidSessID);
	pragma interface_name (IILQsidSessID, C_SUBP_PREFIX & "IILQsidSessID");

	procedure IILQcnConName(conname: Address);
	pragma interface (C, IILQcnConName);
	pragma interface_name (IILQcnConName, C_SUBP_PREFIX & "IILQcnConName");

	procedure IIsqParms(poper: Integer; pname: Address; ptype: Integer;
			    pstr: Address; pint: Integer);
	pragma interface(C, IIsqParms);
	pragma interface_name(IIsqParms, C_SUBP_PREFIX & "IIsqParms");

	-- Query Processing Support
	procedure IIsqMods(oper: Integer);
	pragma interface(C, IIsqMods);
	pragma interface_name(IIsqMods, C_SUBP_PREFIX & "IIsqMods");

	procedure IIsqFlush(name: Address := IInull; line: Integer := 0);
	pragma interface(C, IIsqFlush);
	pragma interface_name(IIsqFlush, C_SUBP_PREFIX & "IIsqFlush");

	procedure IIsqTPC(highdxid: Integer; lowdxid: Integer);
	pragma interface(C, IIsqTPC);
	pragma interface_name(IIsqTPC, C_SUBP_PREFIX & "IIsqTPC");

	-- Dynamic SQL Support
	procedure IIsqDaIn(lang: Integer; sq: Address);
	pragma interface(C, IIsqDaIn);
	pragma interface_name(IIsqDaIn, C_SUBP_PREFIX & "IIsqDaIn");

	procedure IIcsDaGet(lang: Integer; sq: Address);
	pragma interface(C, IIcsDaGet);
	pragma interface_name(IIcsDaGet, C_SUBP_PREFIX & "IIcsDaGet");

	procedure IIsqExImmed(qry: Address);
	pragma interface(C, IIsqExImmed);
	pragma interface_name(IIsqExImmed, C_SUBP_PREFIX & "IIsqExImmed");

	procedure IIsqExStmt(name: Address; using: Integer);
	pragma interface(C, IIsqExStmt);
	pragma interface_name(IIsqExStmt, C_SUBP_PREFIX & "IIsqExStmt");

	procedure IIsqPrepare(lang: Integer; stmt_name: Address;
			      sq: Address; using: Integer; qry: Address);
	pragma interface(C, IIsqPrepare);
	pragma interface_name(IIsqPrepare, C_SUBP_PREFIX & "IIsqPrepare");

	procedure IIsqDescInput(lang: Integer; stmt_name: Address;
			       sq: Address);
	pragma interface(C, IIsqDescInput);
	pragma interface_name(IIsqDescInput, C_SUBP_PREFIX & "IIsqDescInput");

	procedure IIsqDescribe(lang: Integer; stmt_name: Address;
			       sq: Address; using: Integer);
	pragma interface(C, IIsqDescribe);
	pragma interface_name(IIsqDescribe, C_SUBP_PREFIX & "IIsqDescribe");

end ESQLM;
