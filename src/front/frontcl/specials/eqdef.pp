/%
** Copyright (c) 2007 Actian Corporation
%/

/*
**  eqdef.pp
**
**	This file contains declarations for all function calls which might
**	be generated by the ESQL/C preprocessor.  All ESQL/C generated .c
**	files will #include the eqdef.h header.  (The objective is to permit 
**	warning-free compiles, even with something like "acc -vc".)
**	Because this needs to work transparently with both ANSI and non-ANSI
**	C compilers, the declarations are NOT in prototyped format.
**
**	Because some systems may have different compat.h type mappings, this
**	file is preprocessed on the target system to generate the actual
**	customer deliverable file.
**
**  History:
**	16-aug-93 (sandyd)
**		Created.
**	15-sep-93 (sandyd)
**		Added IIFRgotofld(), IIsqGdInit(), IILQdbl(), and IILQint().
**		IIFRgotofld() is new function.  The others were overlooked 
**		previously because they aren't in the gen tables.  (IIsqGdInit 
**		is a rogue, and probably should be moved into the gen table.)
**	20-sep-93 (sandyd)
**		In response to feedback from other engineers, I added comments 
**		to clarify that "SOME_UNUSUAL_SYSTEM" is intended just as a 
**		dummy example of the intended mechanism for porting, and that
**		it should be replaced by a real config string when porting to
**		a platform that requires different type mappings.
**	18-apr-1994 (teresal)
**		Added call IIsqlcdInit.
**	17-may-96 (thoda04)
**		Rearranged the #ifdef's to make Windows 3.1 and other ports easier.
**		Added the changes needed for Windows 3.1.
**	2-may-97 (inkdo01)
**		Added entry for IILQprvProcGTTParm (global temptab proc parms).
**	24-mar-1999 (somsa01)
**	    Changed default for II_LQTYPE_PTR to be a char pointer.
**
**	21-jan-1999 (hanch04)
**	    replace nat and longnat with i4
**	31-aug-2000 (hanch04)
**	    cross change to main
**	    replace nat and longnat with i4
**	04-mar-2003 (somsa01)
**	    Reversed change from void * to char * of type of II_LQTYPE_PTR
**	    due to many client problems with various functions.
**      27-oct-2004 (huazh01)
**          Added IIhelp(). 
**          b64679, INGCBT545.
**       1-Nov-2005 (hanal04) Bug 115476 INGEMB148
**          Corrected prototype for IIhelp().
**	6-Jun-2006 (kschendel)
**	    Added IIsqDescInput.
**	09-apr-2007 (drivi01)
**	    BUG 117501
**	    Adding references to function IIcsRetScroll in order to fix
**	    build on windows.
**	24-Apr-2007 (kiria01) b118184
**	    Renamed IIhelp to IIhelptoggle to avoid naming conflict
**	    runsys routines.
**	11-Oct-2007 (kiria01) b118421
**	    Include guard against repeated inclusion
**	23-Aug-2009 (kschendel) b121804
**	    IILQled_LoEndData is defined as i4, not long.
*/

%#ifndef EQDEF_H_INCLUDED
%#define EQDEF_H_INCLUDED

#ifdef SOME_UNUSUAL_SYSTEM
/*
** This SOME_UNUSUAL_SYSTEM section is just a dummy example of the intended
** porting mechanism.  It is expected that it will be replaced by a real
** config string when ported to a platform that requires special type mappings.
**
** To preserve sanity during future maintenance, it is hoped that ifdefs will
** be used only on the type mappings, and that each function declaration will
** appear once and only once in this file.
*/

# define II_LQTYPE_BOOL         unusual_bool
# define II_LQTYPE_I2           unusual_i2
# define II_LQTYPE_I4           unusual_i4
# define II_LQTYPE_LONGNAT      unusual_i4
# define II_LQTYPE_NAT          unusual_nat
# define II_LQTYPE_PTR          unusual_ptr
# define II_LQTYPE_VOID         unusual_void
# define II_LQTYPE_GPTR		unusual_generic_pointer
#endif /* SOME_UNUSUAL_SYSTEM */


# ifdef WIN16
# define II_LQTYPE_BOOL         int
# define II_LQTYPE_I4           long
# define II_LQTYPE_NAT          long
# endif /* WIN16 */


/*   	 Ingres type		Mapped to */

# ifndef II_LQTYPE_BOOL
# define II_LQTYPE_BOOL         char
# endif

# ifndef II_LQTYPE_I2
# define II_LQTYPE_I2           short
# endif

# ifndef II_LQTYPE_I4
# define II_LQTYPE_I4           int
# endif

# ifndef II_LQTYPE_LONGNAT
# define II_LQTYPE_LONGNAT      long
# endif

# ifndef II_LQTYPE_NAT
# define II_LQTYPE_NAT          int
# endif

# ifndef II_LQTYPE_F4
# define II_LQTYPE_F4		float
# endif

# ifndef II_LQTYPE_F8
# define II_LQTYPE_F8		double
# endif

# ifndef II_LQTYPE_PTR
# define II_LQTYPE_PTR          void *
# endif

# ifndef II_LQTYPE_VOID
# define II_LQTYPE_VOID         void
# endif

/*
** Special symbol indicates places where we have replaced 'char *' with a
** generic pointer like in the io calls or replaced a pointer to a 
** structure like the in IIsqInit().
*/

# ifndef II_LQTYPE_GPTR
# define II_LQTYPE_GPTR		void *
# endif

II_LQTYPE_VOID	IIFRInternal();
II_LQTYPE_NAT	IIFRaeAlerterEvent();
II_LQTYPE_NAT	IIFRafActFld();
II_LQTYPE_VOID	IIFRgotofld();
II_LQTYPE_VOID	IIFRgpcontrol();
II_LQTYPE_VOID	IIFRgpsetio();
II_LQTYPE_NAT	IIFRitIsTimeout();
II_LQTYPE_NAT	IIFRreResEntry();
II_LQTYPE_VOID	IIFRsaSetAttrio();
II_LQTYPE_VOID	IIFRsqDescribe();
II_LQTYPE_VOID	IIFRsqExecute();
II_LQTYPE_NAT	IIFRtoact();
II_LQTYPE_NAT	IIG4acArrayClear();
II_LQTYPE_NAT	IIG4bpByrefParam();
II_LQTYPE_NAT	IIG4ccCallComp();
II_LQTYPE_NAT	IIG4chkobj();
II_LQTYPE_NAT	IIG4drDelRow();
II_LQTYPE_NAT	IIG4fdFillDscr();
II_LQTYPE_NAT	IIG4gaGetAttr();
II_LQTYPE_NAT	IIG4ggGetGlobal();
II_LQTYPE_NAT	IIG4grGetRow();
II_LQTYPE_NAT	IIG4i4Inq4GL();
II_LQTYPE_NAT	IIG4icInitCall();
II_LQTYPE_NAT	IIG4irInsRow();
II_LQTYPE_NAT	IIG4rrRemRow();
II_LQTYPE_NAT	IIG4rvRetVal();
II_LQTYPE_NAT	IIG4s4Set4GL();
II_LQTYPE_NAT	IIG4saSetAttr();
II_LQTYPE_NAT	IIG4seSendEvent();
II_LQTYPE_NAT	IIG4sgSetGlobal();
II_LQTYPE_NAT	IIG4srSetRow();
II_LQTYPE_NAT	IIG4udUseDscr();
II_LQTYPE_NAT	IIG4vpValParam();
II_LQTYPE_VOID	IILQcnConName();
II_LQTYPE_VOID	IILQesEvStat();
II_LQTYPE_PTR	IILQdbl();
II_LQTYPE_PTR	IILQint();
II_LQTYPE_VOID	IILQisInqSqlio();
II_LQTYPE_VOID	IILQldh_LoDataHandler();
II_LQTYPE_NAT	IILQled_LoEndData();
II_LQTYPE_VOID	IILQlgd_LoGetData();
II_LQTYPE_VOID	IILQlpd_LoPutData();
II_LQTYPE_VOID	IILQpriProcInit();
II_LQTYPE_NAT	IILQprsProcStatus();
II_LQTYPE_VOID	IILQprvProcValio();
II_LQTYPE_VOID	IILQprvProcGTTParm();
II_LQTYPE_VOID	IILQshSetHandler();
II_LQTYPE_VOID	IILQsidSessID();
II_LQTYPE_VOID	IILQssSetSqlio();
II_LQTYPE_NAT	IITBcaClmAct();
II_LQTYPE_VOID	IITBceColEnd();
II_LQTYPE_NAT	IIactcomm();
II_LQTYPE_NAT	IIactscrl();
II_LQTYPE_NAT	IIaddform();
II_LQTYPE_VOID	IIbreak();
II_LQTYPE_NAT	IIchkfrm();
II_LQTYPE_NAT	IIclrflds();
II_LQTYPE_NAT	IIclrscr();
II_LQTYPE_VOID	IIcsClose();
II_LQTYPE_VOID	IIcsDaGet();
II_LQTYPE_VOID	IIcsDelete();
II_LQTYPE_VOID	IIcsERetrieve();
II_LQTYPE_VOID	IIcsERplace();
II_LQTYPE_VOID	IIcsGetio();
II_LQTYPE_VOID	IIcsOpen();
II_LQTYPE_VOID	IIcsParGet();
II_LQTYPE_VOID	IIcsQuery();
II_LQTYPE_VOID	IIcsRdO();
II_LQTYPE_VOID	IIcsReplace();
II_LQTYPE_NAT	IIcsRetrieve();
II_LQTYPE_NAT	IIcsRetScroll();
II_LQTYPE_NAT	IIdispfrm();
II_LQTYPE_VOID	IIendforms();
II_LQTYPE_NAT	IIendfrm();
II_LQTYPE_NAT	IIendmu();
II_LQTYPE_VOID	IIendnest();
II_LQTYPE_VOID	IIeqiqio();
II_LQTYPE_VOID	IIeqstio();
II_LQTYPE_I4	IIerrtest();
II_LQTYPE_VOID	IIexDefine();
II_LQTYPE_NAT	IIexExec();
II_LQTYPE_VOID	IIexit();
II_LQTYPE_NAT	IIfldclear();
II_LQTYPE_VOID	IIflush();
II_LQTYPE_NAT	IIfnames();
II_LQTYPE_NAT	IIforminit();
II_LQTYPE_NAT	IIforms();
II_LQTYPE_BOOL	IIfrshelp();
II_LQTYPE_NAT	IIfsetio();
II_LQTYPE_NAT	IIfsinqio();
II_LQTYPE_NAT	IIfssetio();
II_LQTYPE_NAT	IIgetdomio();
II_LQTYPE_NAT	IIgetfldio();
II_LQTYPE_NAT	IIgetoper();
II_LQTYPE_NAT	IIgtqryio();
II_LQTYPE_BOOL	IIhelpfile();
II_LQTYPE_VOID  IIhelptoggle();
II_LQTYPE_VOID	IIingopen();
II_LQTYPE_NAT	IIinitmu();
II_LQTYPE_NAT	IIinqset();
II_LQTYPE_NAT	IIiqfsio();
II_LQTYPE_NAT	IIiqset();
II_LQTYPE_NAT	IImessage();
II_LQTYPE_NAT	IImuonly();
II_LQTYPE_NAT	IInestmu();
II_LQTYPE_NAT	IInexec();
II_LQTYPE_NAT	IInextget();
II_LQTYPE_NAT	IInfrskact();
II_LQTYPE_NAT	IInmuact();
II_LQTYPE_NAT	IIparret();
II_LQTYPE_NAT	IIparset();
II_LQTYPE_VOID	IIprmptio();
II_LQTYPE_VOID	IIprnscr();
II_LQTYPE_VOID	IIputctrl();
II_LQTYPE_VOID	IIputdomio();
II_LQTYPE_NAT	IIputfldio();
II_LQTYPE_NAT	IIputoper();
II_LQTYPE_NAT	IIredisp();
II_LQTYPE_NAT	IIrescol();
II_LQTYPE_NAT	IIresfld();
II_LQTYPE_NAT	IIresmu();
II_LQTYPE_NAT	IIresnext();
II_LQTYPE_VOID	IIretinit();
II_LQTYPE_NAT	IIretval();
II_LQTYPE_NAT	IIrf_param();
II_LQTYPE_NAT	IIrunform();
II_LQTYPE_NAT	IIrunmu();
II_LQTYPE_NAT	IIrunnest();
II_LQTYPE_VOID	IIsexec();
II_LQTYPE_NAT	IIsf_param();
II_LQTYPE_NAT	IIsleep();
II_LQTYPE_VOID	IIsqConnect();
II_LQTYPE_VOID	IIsqDaIn();
II_LQTYPE_VOID	IIsqDescInput();
II_LQTYPE_VOID	IIsqDescribe();
II_LQTYPE_VOID	IIsqDisconnect();
II_LQTYPE_VOID	IIsqExImmed();
II_LQTYPE_VOID	IIsqExStmt();
II_LQTYPE_VOID	IIsqFlush();
II_LQTYPE_VOID	IIsqGdInit();
II_LQTYPE_VOID	IIsqInit();
II_LQTYPE_VOID	IIsqlcdInit();
II_LQTYPE_VOID	IIsqMods();
II_LQTYPE_VOID	IIsqParms();
II_LQTYPE_VOID	IIsqPrepare();
II_LQTYPE_VOID	IIsqPrint();
II_LQTYPE_VOID	IIsqStop();
II_LQTYPE_VOID	IIsqTPC();
II_LQTYPE_VOID	IIsqUser();
II_LQTYPE_VOID	IIsqlcdInit();
II_LQTYPE_NAT	IIstfsio();
II_LQTYPE_VOID	IIsyncup();
II_LQTYPE_NAT	IItbact();
II_LQTYPE_NAT	IItbinit();
II_LQTYPE_NAT	IItbsetio();
II_LQTYPE_NAT	IItbsmode();
II_LQTYPE_NAT	IItclrcol();
II_LQTYPE_NAT	IItclrrow();
II_LQTYPE_NAT	IItcogetio();
II_LQTYPE_NAT	IItcolval();
II_LQTYPE_NAT	IItcoputio();
II_LQTYPE_NAT	IItdata();
II_LQTYPE_NAT	IItdatend();
II_LQTYPE_NAT	IItdelrow();
II_LQTYPE_NAT	IItfill();
II_LQTYPE_NAT	IIthidecol();
II_LQTYPE_NAT	IItinsert();
II_LQTYPE_NAT	IItrc_param();
II_LQTYPE_NAT	IItsc_param();
II_LQTYPE_NAT	IItscroll();
II_LQTYPE_NAT	IItunend();
II_LQTYPE_BOOL	IItunload();
II_LQTYPE_NAT	IItupget();
II_LQTYPE_NAT	IItvalrow();
II_LQTYPE_NAT	IItvalval();
II_LQTYPE_VOID	IIutsys();
II_LQTYPE_NAT	IIvalfld();
II_LQTYPE_VOID	IIvarstrio();
II_LQTYPE_VOID	IIwritio();
II_LQTYPE_VOID	IIxact();

/* Ensure next line is the last in the file */
%#endif /% EQDEF_H_INCLUDED %/
