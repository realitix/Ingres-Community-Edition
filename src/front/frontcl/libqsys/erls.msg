SQLSTATE_MAPPING_REQUIRED

/*
** Copyright (c) 2004 Actian Corporation
*/

/**
** Name:	erls.msg -	Message file for class LS
**
** Description:
**	This file defines the messages for class LS.
**
** History:
**	 8-sep-1987 (barbara)
**		Created.
**	30-nov-1989 (neil)
**		Added new errors for MF COBOL run-time interface.
**	31-oct-1992 (larrym)
**		Added SQLSTATES
**/

# define	_LS_CLASS	63



E_LS0101_SDALLOC:SS50003_EXHAUSTED_RESOURCE	
"Memory allocation failed.  Unable to allocate string descriptor."

/*
** Explanation:
**
** System Status:
**	Fatal error
**
** User Action:
*/

E_LS0102_BADSTRING:SS22000_DATA_EXCEPTION	
"Routine %0c encountered illegal string descriptor type %1c."

/*
** Explanation:
**
** System Status:
**
** User Action:
*/

E_LS0103_COBTYPE:SS22000_DATA_EXCEPTION	
"Illegal COBOL type %0d found when converting COBOL data to internal format."

E_LS0110_PACKTOF8:SS22003_NUM_VAL_OUT_OF_RANGE	
"Error converting numeric string %0c from COBOL
COMP-3 data-item with PICTURE %1c to internal FLOAT8."
/*%
** Arguments:
**	%0 - Digit stream extracted from the COMP-3 data-item.
**	%1 - PICTURE string for data-item.
**
** Explanation:
**	When assigning COMP or COMP-3 scaled data-items into INGRES the
**	preprocessor generates a conversion call to convert these
**	values to floating-point format.  When executing this conversion
**	the system failed.  
**
**	Note that scaled COMP data items are moved into an internal COMP-3
**	data item before this conversion.
**
** System Status:
**	The invalid value is not assigned into INGRES and 0.0 is used.
**
** User Action:
**	Check that you use a standard COBOL assignment to assign a value
**	to your COMP or COMP-3 data item.  An uninitialized or badly linked
**	(or pointed at) data-item may have invalid bytes in the numeric field.
*/

E_LS0111_F8TOPACK:SS22003_NUM_VAL_OUT_OF_RANGE	
"Overflow error converting numeric string %0c from an 
internal FLOAT8 to a COBOL COMP-3 data-item with PICTURE %1c."
/*%
** Arguments:
**	%0 - Digit stream extracted from the internal FLOAT8.
**	%1 - PICTURE string for data-item.
**
** Explanation:
**	When retrieving from INGRES into a COMP or COMP-3 scaled data-item
**	the preprocessor uses a temporary internal floating-point data-item
**	and then generates a conversion call to convert that temporary
**	value into your data-item.  When executing this conversion the
**	system failed as the digit stream was too large to fit into 
**	your data-item.
**
**	Note that scaled COMP data items are assigned from an internal COMP-3
**	data item after the above conversion.
**
** System Status:
**	The value in the digit stream is truncated from the left to allow
**	it to fit.  This is not the same as the COBOL Standard Alignment Rules.
**
** User Action:
**	Provide a larger data-item to include the significant digits
**	that are being truncated.
*/

E_LS0112_STRTOF8:SS22000_DATA_EXCEPTION	
"Error converting numeric string %0c into an
internal FLOAT8."
/*%
** Arguments:
**	%0 - Digit stream generated by the COBOL preprocessor
**
** Explanation:
**	On an assignment statement from COBOL into the INGRES run-time
**	system, a floating-point literal was used.  The preprocessor 
**	generates a conversion from the literal to an internal floating-point
**	using a run-time conversion.  The generated numeric string could
*	not be correctly converted.
**
** System Status:
**	The value is not converted and 0.0 is used instead.
**
** User Action:
**	Recheck the floating-point literal (and, if necessary, the
**	generated COBOL code).
*/


E_LS0113_CALLPACK:SS22000_DATA_EXCEPTION	
"Invalid COBOL CALL '%0c' USING FLOAT-8, COMP-3,\n
VALUE %1c.  Error in argument(s) %2c."
/*%
** Arguments:
**	%0 - The conversion procedure that was called.
**	%1 - The extra arguments that were used.
**	%2 - The argument number and the reason the argument is invalid.
**
** Explanation:
**	Some C routines have been provided to allow you to use COMP-3
**	data-items with INGRES.  Normally the preprocessor hides this
**	interface from you, but in some cases, such as Dynamic SQL, this
**	interface is hard-coded.  In that case all arguments are validated
**	before any conversion take place.  The rules associated with these
**	interfaces are described in the INGRES Embedded COBOL manuals.
**	The called routine has detected an inconsistency.
**
** System Status:
**	The conversion does not take place and the result data is not
**	modified.
**
** User Action:
**	Recheck the hard-coded call and validate your arguments.
*/

NO_SQLSTATE_MAPPING
