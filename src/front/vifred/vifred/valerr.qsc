/*
**	valerr.qsc
*/

/*
** Handle validation/derivation syntax errors at save time.
**
** Copyright (c) 2004 Actian Corporation
**
** History:
**	02/04/85 (drh)	Added calls to vfdmpon and vfdmpoff in integration
**			of bug fixes from vms.
**	03/23/87 (dkh) -Added support for ADTs.
**	08/04/87 (dkh) - Changed to use compiled forms in a file.
**	08/14/87 (dkh) - ER changes.
**	10/02/87 (dkh) - Help file changes.
**	11-jan-88 (sylviap)
**		Created the .qsc file.
**	11/01/88 (dkh) - Performance changes.
**	21-jun-89 (bruceb)
**		Changed to handle derivation formulas as well.
**		Also, added Forget menuitem.
**	01/24/90 (dkh) - Moved include of er.h ahead of uf.h due to changes
**			 in uf.h.
**	12/05/90 (dkh) - Fixed code to handle screen updates correctly
**			 if an error occurs during save sequence.
**	12/05/90 (dkh) - Fixed typo: changed GLOBALDEF to GLOBALREF for
**			 IIVFneedclr.
**	21-jan-1999 (hanch04)
**	    replace nat and longnat with i4
**	31-aug-2000 (hanch04)
**	    cross change to main
**	    replace nat and longnat with i4
*/

# include	<compat.h>
# include	<st.h>		/* 6-x_PC_80x86 */
# include	<gl.h>
# include	<sl.h>
# include	<iicommon.h>
# include	<fe.h>
# include	<si.h>
# include	<er.h>
# include	<uf.h>
# include	"decls.h"
# include	<ex.h>
# include	"ervf.h"
# include	"vfhlp.h"


GLOBALREF	bool	IIVFneedclr;

static	bool	valerr_alloc = FALSE;

VOID
allocvalerr()
{
	if (!valerr_alloc)
	{
		if (IIUFgtfGetForm(IIUFlcfLocateForm(), ERx("valerr")) != OK)
		{
			syserr(ERget(S_VF00F8_Can_not_access_form__));
		}
		valerr_alloc = TRUE;
	}
}

/*
** writeout is true if frame is being written out
** only allow changes to validation string
*/
i4
valerrCom(hdr, type, err)
FLDHDR	*hdr;
FLDTYPE *type;
char	*err;
{
##	char	*cp;
	char	buf[BUFSIZ];
	i4	forget = FALSE;

	/*
	** first fill in the attributes from the field
	** structure and then drive the form
	** when control comes back fill in the field
	*/

	vfdmpon();

	IIVFneedclr = TRUE;

##	display ERx("valerr") update
##	initialize
##	{
		if (hdr->fhd2flags & fdDERIVED)
		{
			cp = ERget(F_VF0071_Der_Form);
##			putform valerr (valstrtitle = cp, error_type = cp)
		}
		else
		{
			cp = ERget(F_VF0070_Val_Str);
##			putform valerr (valstrtitle = cp, error_type = cp)
		}

		cp = hdr->fhdname;
##		putform ERx("valerr") (name = cp)

		cp = err;
##		putform ERx("valerr") (error = cp)

		cp = type->ftvalstr;
##		putform ERx("valerr") (check = cp)
##	}
##	activate menuitem ERget(FE_Forget) (validate = 0),
##			FRSkey9 (validate = 0)
##	{
		forget = TRUE;	/* Don't continue the 'save'. */
##		breakdisplay
##	}
##	activate menuitem ERget(FE_Help) (validate = 0), FRSkey1 (validate = 0)
##	{
		if (hdr->fhd2flags & fdDERIVED)
		{
		    STcopy(ERget(S_VF0138_Correcting_Derivation), buf);
		    FEhelp(VFH_DERERR, buf);
		}
		else
		{
		    STcopy(ERget(S_VF00F9_Correcting_Validation), buf);
		    FEhelp(VFH_VALERR, buf);
		}
##	}
##	activate menuitem ERget(FE_End), FRSkey3
##	{
		cp = buf;
##		getform ERx("valerr") (cp = check)
		type->ftvalstr = saveStr(cp);
		if ((hdr->fhd2flags & fdDERIVED) && (type->ftvalstr[0] == EOS))
		{
		    /*
		    ** User has blanked out the derivation formula.  Turn
		    ** off the derived and displayonly flags.
		    */
		    hdr->fhd2flags &= ~(fdDERIVED | fdREADONLY);
		}
##		breakdisplay
##	}
	FTclear();

	vfdmpoff();

	if (forget)
	{
		/* Enddisplay iisave if necessary. */
		IIpopfrm(ERx("vfcatalog"));

		IIVTlf(frame, TRUE, FALSE);

		/* Longjump back to getFrmName(). */
		EXsignal(EXVFLJMP, 0);
	}
}
