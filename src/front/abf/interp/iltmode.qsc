/*
**Copyright (c) 1987, 2004 Actian Corporation
*/

# include	<compat.h>
# include	<cv.h>		/* 6-x_PC_80x86 */
# include	<gl.h>
# include	<sl.h>
# include	<iicommon.h>
# include	<fe.h>
# include	<lo.h>
# include	<si.h>
# include	<er.h>
# include	<uf.h>
# include	<ifid.h>
# include	"ilargs.h"
# include	"il.h"


/**
** Name:	iltmode.qsc	-   Routines that execute test mode.
**
** Description:
**
**	IIITtrmTestRunMode	Run the interpreter in testmode.
**
** History:
**	4-oct-1988 (Joe)
**		First Written
**	21-jan-1999 (hanch04)
**	    replace nat and longnat with i4
**	31-aug-2000 (hanch04)
**	    cross change to main
**	    replace nat and longnat with i4
**/

/* # define's */
/* GLOBALDEF's */
/* extern's */
/* static's */

/*{
** Name:	<proc name>	- <short comment>
**
** Description:
**	<comments>
**
** Inputs:
**	<param name>	<input value description>
**
** Outputs:
**	<param name>	<output value description>
**
**	Returns:
**		<function return values>
**
**	Exceptions:
**		<exception codes>
**
** Side Effects:
**
** History:
**	<manual entries>
*/
##VOID
##IIITtrmTestRunMode(args)
ILARGS	*args;
##{
##  char	appl[FE_MAXNAME+1];
##  char	frameproc[FE_MAXNAME+1];
##  char	objname[FE_MAXNAME+1];
##  char	formname[FE_MAXNAME+1];
##  i4		fidnumber;
    LOCATION	*loc;

    if ((loc = IIUFlcfLocateForm()) == NULL)
    {
	SIfprintf(stderr, "\r\nIIUFlcfLocateForm returns NULL\n");
	return;
    }
    if (IIUFgtfGetForm(loc, "IIITitfInternalTestForm") != OK)
    {
	SIfprintf(stderr, "\r\nCan't get form IIITitfInternalTestForm\n");
	return;
    }

##  display IIITitfInternalTestForm
##  initialize
##  {
##  }
##  activate menuitem "Find"
##  {
##	char	whole_name[FE_MAXNAME+1];
##	char	shifted_name[FE_MAXNAME+1];
##	i4	class;

##	GETFORM
##	(
##	    appl = #application,
##	    frameproc = #frameproc
##	)

##	RANGE OF ai IS ii_objects	/* Application's ii_objects entry */
##	RANGE OF fi IS ii_objects	/* Frame's ii_objects entry */
##	RANGE OF fa IS ii_abfobjects	/* Frame's ii_abfobjects entry */
##	RANGE OF ad IS ii_abfdependencies /* fid's ii_abfdependencies entry */
##	RETRIEVE
##	(
##	    whole_name = ad.abfdef_name,
##	    shifted_name = shift(ad.abfdef_name, -3),
##	    class = ad.object_class
##	)
##	WHERE
##          ai.object_name = appl  and	/* Find the application's id */
##          ai.object_class = 2001 and
##          ai.object_id = fa.applid and	/* Find the frame's id */
##          fa.object_id = fi.object_id and
##          fi.object_name = frameproc and
##          fi.object_class = 2210 and
##          ad.object_id = fi.object_id and /* Find the dependency
##                                             record for the FID */
##          (ad.object_class = 2010 or ad.object_class = 3001)
##	{
	    if (class == 2010)	/* This is the FID record */
	    {
		CVan(shifted_name, &fidnumber);
##		PUTFORM
##		(
##	            #fid = fidnumber
##		)
	    }
	    else		/* This is the form record */
	    {
##		PUTFORM
##		(
##	            #form = whole_name
##		)
	    }
##	}
##  }
##  ACTIVATE MENUITEM "IlTab"
##  {
	IIITiteIlTabEdit();
##  }
##  activate menuitem "Go", FRSkey4
##  {
        FID     fid;
	char	*formnameptr;

##	GETFORM
##      (
##          objname = #frameproc,
##	    fidnumber  = #fid,
##	    formname = #form
##	)
        fid.name = objname;
        fid.id = fidnumber;
	formnameptr = (formname[0] == EOS ? NULL : formname);
	if (formnameptr != NULL)
	{
##	    forminit formname
	}
	/*
	** The ABF runtime system needs its stack set up.
	*/
	IIARctsCreateTestStack(objname);
        IIITeilExecuteIL(&fid, ERx("TestObject"), formnameptr, FALSE);
##  }
##  activate menuitem "Quit", FRSkey2, FRSkey3
##  {
##	enddisplay
##  }
##  finalize ()
##  {
##  }
##}
