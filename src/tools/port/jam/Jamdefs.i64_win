#
#  Copyright (c) 2004 Actian Corporation
#
#  Name: Jamdefs.i64_win -- Variable definitions for Itanium Windows
#
#  Description:
#       Platform specific variable definitions for Itanium Windows
#
# History:
#	10-Nov-2004 (gorvi01)
#	   Created by modifying Jamdefs.int_w32.
#	8-Apr-2005 (lakvi01) on behalf of (gorvi01)
#	   Corrected a typo in the definition of NT_IA64.
#	14-Apr-2005 (gorvi01)
#	   Corrected configuration names for IA64.
#	18-Apr-2005 (drivi01)
#	    Updated a parameter to /MACHINE flag of linker to be X86
#	    instead of IX86.  IX86 was used in previous compilers,
#	    and has been replaced with X86.
#	02-May-2005 (drivi01)
#	    Added two more flags to DLLFLAGS variable as part of
#	    effort in generating pdb files in non-debug environment.
#	13-May-2005 (lakvi01)
#	    Updated the name of ApacheCore.lib to ApacheCoreIA64.lib.
#	13-May-2005 (lakvi01)
#	    Added KRB5_SYSTYPES to this file. Change 476512 introduced
#	    it in Jamdefs.int_w32 and it should be in this file too.
#   01-Aug-2005 (fanra01)
#       Bug 90455
#       Add SHELLHEADER for platform.
#	8-Feb-2007 (bonro01)
#	    Updated Kerberos5 headers to r1.6
#	    Eliminated need for -DKRB5_SYSTYPES__
#	15-Oct-2008 (whiro01)
#	    Added /nologo to linker flags; took off /PDB:none and /WARN.
#       15-May-2010 (maspa05)
#           Set FLEX to include FLEX_FLAG which for later versions (>=2.5.31)
#           of flex should be --nounistd and earlier ones should be an empty
#           string.
#           Default to --nounistd for cygwin but no flag for MKS based on
#           current versions of flex in both.
#           Can be overriden by setting FLEX_FLAG in environment
#       26-Jul-2010 (horda03)
#          The definition of JAMSHELL defined within this file causes
#          the shell commands executed by JAM to be echoed to the
#          screen. If user now sets the environment variable
#               set JAMSHELL_ECHO=OFF
#          then by default the shell commands are not echoed. The
#          command "jam -dx" when JAMSHELL_ECHO == "OFF" will display
#          then shell commands.
#       07-Jan-2011 (horda03) b124907
#          Add DLL_ENTRY to a bespoke entry point into a DLL.
#	15-Sep-2011 (whiro01)
#	   Remove definition of IIDEV_TEST which is now not used anywhere.
#	26-Sep-2011 (drivi01)
#	   Add JNISOURCE variable to be set to true on JNI source files.

# Tell Jamdefs that this include worked:
JAMDEFS_INCLUDED = true ;

#VARS
#
MISCFLAGS	default = "/nologo" ;
THREADS		= "-D_DLL -D_MT" ;
RUNTIME		default = "/MD" ;
ERR_LVL		default = "-W3" ;
PREPROCESS 	default = $(PREP) ;
BUILDTYPE	default = DYNAMIC ;
VERSINFO	default = \"$(ING_SRC)/cl/clf/gv_win/gv.res\"  ;
VERSINFORC	default = \"$(ING_SRC)/cl/clf/gv_win/gv.rc\" ;
C_LIB		default = msvcrt.lib ;
SYSLIBS		default = $(C_LIB) kernel32.lib ;
ADVAPILIB	default = advapi32.lib ;
NETAPILIB 	default = netapi32.lib ;
USERLIB 	default = user32.lib ;
GDILIB 		default = gdi32.lib ;
MSILIB		default = msi.lib ;
MORELIB		default = ws2_32.lib shell32.lib imagehlp.lib winmm.lib ;
MORELIB2	default = Msi.lib ole32.lib shlwapi.lib Comdlg32.lib ;
RPCLIB		default = RpcRT4.lib ;
CLUSAPI  	default = clusapi.lib ;
ODBC32LIB	default = odbccp32.lib ;
ODBCLIBS	default = odbc32.lib odbccp32.lib comctl32.lib ;
VERSIONLIB	default = version.lib ;
BUFFERLIB	default = bufferoverflowu.lib ;
GV     		default = \"$(ING_SRC)/cl/clf/gv/gver.obj\" ;
APACHECORE	default = $(ING_SRC)/front/ice/lib/ApacheCoreIA64.lib ;
#TERMDR		default = $(ING_SRC)/front/frontcl/termdr/termdr.obj ;
OO		default = $(ING_SRC)/front/utils/oo/oosymbol.obj ;
PORTREF		= "-DREFERENCE_IN_DLL" ;
PORTIMP		= "-DIMPORT_DLL_DATA" ;
EHFLAG		= "/EHsc" ;
NOARSCAN 	= true ;
JNISOURCE	= false ;
CD		= "cd /d" ;
CP		= "cp -f" ;
RM		= "rm -f" ;
CHMOD		= chmod ;
if $(USE_CYGWIN)
{
   FLEX_FLAG       ?=  --nounistd ;
}
FLEX		= flex $(FLEX_FLAG) ;
LEX 		= flex ;
AWK		= $(AWK_CMD) ;
REBASE		= rebase ;


#
#ODBC object files
#
#ODBCOBJ1 = \"$(ING_SRC)/common/odbc/winspecials_win/dllmai32.obj\" ;
#ODBCOBJ2 = \"$(ING_SRC)/common/odbc/driver/getrw.obj\" ;
#ODBCOBJ3 = \"$(ING_SRC)/common/odbc/driver/encrypt.obj\" ;
#ODBCOBJ4 = \"$(ING_SRC)/common/odbc/config_win/caiioc32.obj\" ;
#ODBCRES = caiiodbc.res ;
#ODBCRES2 = caiioc32.res ;

#
#TESTS res files
#
#ACSRES = acstart.res ;

#
#EMBED OBJECTS
#
#EQDATA = eqdata.obj ;
#EQGLOBS = eqglobs.obj ;
#CGCDATA = cgcdata.obj ;
#IIGLOBAL = iiglobal.obj ;

#
#TNGRES = \"$(ING_SRC)/front/st/tngapi_win/tngmsg.res\" ;
#PFCRES = \"$(ING_SRC)/front/st/perfmon_win/pfctrmsg.res\" ;
#
#set CPUFLAGS
#
if $(CPU) = i386
{
CPUFLAGS	default = "/G7 -Di386=1 -D_X86_" ;
}

#
#set OPTIM
#
if ( $(CPU) = IA64 || $(CPU) = AMD64 ) && $(DEBUG) != ON
{
OPTIM = "/O2" ;
}
else
{
OPTIM = "/Od" ;
}

#
#set DEBUG
#
if $(DEBUG) = ON
{
CDEBUG	default = "/Zi" ;
IYACCFLAGS	default = "-Xa" ;
}
else
{
CDEBUG 	default = "" ;
IYACCFLAGS	default = "" ;
}

#
#set PLATFORM
#
if $(CPU) = i386
{
PLATFORM 	default = "-DNT_INTEL" ;
LIBSUFFIX	default = "" ;
}
if $(CPU) = IA64
{
PLATFORM	default = "/G2 /Wp64 -DNT_IA64 -D_IA64_=1 -DWIN64 -D_WIN64 -DWIN32 -D_WIN32" ;
LIBSUFFIX	default = "64" ;
}
if $(CPU) = AMD64
{
LIBSUFFIX	default = "64" ;
PLATFORM	default = "/Wp64 -DNT_AMD64 -D_AMD64_=1 -DWIN64 -D_WIN64  -DWIN32 -D_WIN32" ;
}
if $(CPU) = ALPHA
{
PLATFORM	default = "-DNT_ALPHA" ;
LIBSUFFIX	default = "" ;
}
if $(CPU) = MIPS
{
LIBSUFFIX	default = "" ;
PLATFORM	default = "-DNT_MIPS" ;
}
if $(CPU) = PPC
{
LIBSUFFIX	default = "" ;
PLATFORM	default = "-DNT_PPC" ;
}
else
{
LIBSUFFIX	default = "" ;
PLATFORM	default = "" ;
}

#
#set DBLFLAG
#
if $(DOUBLEBYTE) = ""
{
DBFLAG	default = "-DDOUBLEBYTE" ;
}

#
#set EDFLAG
#
if $(DEVELOPER_EDITION) = ""
{
DEVELOPER_EDITION 	default = "OFF" ;
}
else
{
DEVELOPER_EDITION 	default = "ON" ;
EDFLAG 		default = "-DEVELOPER_EDITION" ;
}

#
#set DECFLAG
#
if $(DECBUILD) != ""
{
DECFLAG 	default = "-DDNET_USE_WINSOCK" ;
}

#
#set DEVFLAGS
#
if $(DEBUG) = ON
{
DEVFLAGS	default = "-DIIDEV_DEBUG" ;
}

#
#set MACH
#
if $(CPU) = i386
{
	MACH 	default = /MACHINE:X86 ;
}

if $(CPU) = IA64
{
	MACH 	default = /MACHINE:IA64 ;
}

if $(CPU) = AMD64
{
	MACH 	default = /MACHINE:AMD64 ;
}

if $(CPU) = ALPHA
{
	MACH 	default = -machine:alpha ;
}

#
#set DLLFLAGS
#
DLL_ENTRY  default = /ENTRY:Dll_Entry ;

if $(DEBUG) = ON
{
	if $(CPU) = IA64 || $(CPU) = AMD64
	{
		DLLFLAGS 	default = /DEBUG:FULL /DEBUGTYPE:CV /MAP $(MACH) /LARGEADDRESSWARE
					  $(VERSINFO) ;
		DLLFLAGSNV = /DEBUG:FULL /DEBUGTYPE:CV /MAP $(MACH) ;
	}
	else
	{
		DLLFLAGS 	default = /DEBUG:FULL /DEBUGTYPE:CV /MAP $(MACH) 					  $(VERSINFO) ;
		DLLFLAGSNV = /DEBUG:FULL /DEBUGTYPE:CV /MAP $(MACH) ;
	}
}
else
{
	DLLFLAGS = /MAP /DEBUG /INCREMENTAL:NO $(MACH) $(VERSINFO) ;
	DLLFLAGSNV = /MAP /DEBUG /INCREMENTAL:NO $(MACH) ;
}

if $(DEBUG) != ON
{
	if $(CPU) = IA64
	{
		MSDEV_CONFIG = "ReleaseIA64" ;
		DEVENVFLAGS  = "/nologo /useenv" ;
	}
	if $(CPU) = AMD64
	{
		MSDEV_CONFIG = "ReleaseAMD64" ;
		DEVENVFLAGS  = "/nologo /useenv" ;
	}
	if $(CPU) != IA64 && $(CPU) != AMD64
	{
		MSDEV_CONFIG = "Release" ;
		DEVENVFLAGS  = "/nologo" ;
	}
}
else
{
	if $(CPU) = IA64
	{
		MSDEV_CONFIG = "DebugIA64" ;
		DEVENVFLAGS  = "/nologo /useenv" ;
	}
	if $(CPU) = AMD64
	{
		MSDEV_CONFIG = "DebugAMD64" ;
		DEVENVFLAGS  = "/nologo /useenv" ;
	}
	if $(CPU) != IA64 && $(CPU) != AMD64
	{
		MSDEV_CONFIG = "Debug" ;
		DEVENVFLAGS  = "/nologo" ;
	}

}

#
#Variables
#
VERS	default = "i64_win" ;
CCMACH	default = $(CPUFLAGS) $(CDEBUG) $(RUNTIME) $(ERR_LVL) $(PLATFORM) $(PREPROCESS) -DDESKTOP -DDEVIL -DWIN32 -DINCLUDE_ALL_CL_PROTOS -DNT_GENERIC -DSEP -DSEPDEBUG -DDOUBLEBYTE -DxCL_NO_AUTH_STRING_EXISTS -DINGRESII $(DBFLAG) $(EDFLAG) $(DECFLAG) $(DEVFLAGS) $(THREADS) ;
WINNT	default = -D_WIN32_WINNT=0x0500 ;
# CC	default = "CC" ;
if $(JAMSHELL_ECHO) != "OFF"
{
   JAMSHELL ?= cmd /C % ;
}
# VISUALC = "" ;
# C++	 = cl.exe ;
# LINK	 = link.exe ;
AR	 = "lib.exe /MACHINE:IA64" ;
LDLIBMACH = /nologo $(DLLFLAGS) ;
LINKFLAGS = /nologo $(DLLFLAGS) ;
CCLDMACH  = /nologo $(DLLFLAGS) ;

LINKLIBS = $(SYSLIBS) $(ADVAPILIB) $(NETAPILIB) $(USERLIB) $(GDILIB) $(MORELIB) $(RPCLIB) $(CLUSAPI) $(BUFFERLIB) $(GV) ;
# STDHDRS  = \"$(VISUALC)\\include\" ;
KEEPOBJ = true ;
SHELLHEADER = "" ;


#
# File suffixes
#
LIBSFX	default = lib ;
SLSFX	default = dll ;
DEFSFX	default = def ;
EXESFX	default = exe ;
OBJSFX	default = obj ;
PDBSFX  default = pdb ;

#
#ICE File extensions
#
ICE_EXT = dll ;
CGI_EXT = exe ;


#
# Visual Studio rebuild flag
#
BUILD = /rebuild ;


#
# Dotnet
#
INGSUPPORT   = Ca.Ingres.Support.DLL ;
INGCLIENTDLL = Ca.Ingres.Client.DLL ;
INGCLIENTXML = Ca.Ingres.Client.xml ;
INGVSDESIGN  = Ca.Ingres.VSDesign.DLL ;
