/*
** Copyright (c) 2010 Actian Corporation
*/
##/*
##
##  19-Apr-2004 (loera01)
##     Created.
##  27-Apr-2004 (loera01)
##     Defined ODBCINT64 as "long long" on Unix.
##  10-aug-2004 (somsa01)
##     Added SQLLEN define for WIN64.
##  03-Sep-2010 (Ralph Loen) Bug 124348
##     Replaced SQLINTEGER, SQLUINTEGER and SQLPOINTER arguments with
##     SQLLEN, SQLULEN and SQLLEN * for compatibility with 64-bit
##     platforms.
##*/
#ifndef __SQLTYPES
#define __SQLTYPES

#ifndef __SQL
#define __SQL

#include <stdlib.h>

/* if ODBCVER is not defined, assume version 3.51 */
#ifndef ODBCVER
#define ODBCVER	0x0351
#endif  /* ODBCVER */

/* environment specific definitions */
#ifndef EXPORT
#define EXPORT   
#endif

#ifdef WIN32
#define SQL_API  __stdcall
#else
#define SQL_API
#endif

#ifdef __cplusplus
extern "C" {                    /* Assume C declarations for C++   */
#endif  /* __cplusplus */

/* API declaration data types */
typedef unsigned char   SQLCHAR;
typedef long            SQLINTEGER;
typedef unsigned long   SQLUINTEGER;
typedef short           SQLSMALLINT;
typedef unsigned short  SQLUSMALLINT;
typedef double          SQLDOUBLE;
typedef float           SQLREAL;
typedef void *          SQLPOINTER;
typedef unsigned char   SQLDATE;
typedef unsigned char   SQLTIME;
typedef unsigned char   SQLTIMESTAMP;
typedef unsigned char   SQLDECIMAL;
typedef unsigned char   SQLNUMERIC;
typedef unsigned char   SQLVARCHAR;

typedef unsigned long int       BOOKMARK;

typedef wchar_t SQLWCHAR;

/* function return type */
typedef SQLSMALLINT     SQLRETURN;
typedef SQLSMALLINT     RETCODE;

#define SQLROWSETSIZE   SQLUINTEGER

#ifdef _WIN64
typedef INT64           SQLLEN;
typedef INT64           SQLROWOFFSET;
typedef UINT64          SQLROWCOUNT;
typedef UINT64          SQLULEN;
typedef UINT64          SQLTRANSID;
typedef unsigned long   SQLSETPOSIROW;
#else
#define SQLLEN          SQLINTEGER
#define SQLROWOFFSET    SQLINTEGER
#define SQLROWCOUNT     SQLUINTEGER
#define SQLULEN         SQLUINTEGER
#define SQLTRANSID      UDWORD
#define SQLSETPOSIROW   SQLUSMALLINT
#endif

/* generic data structures */
typedef void*                   SQLHANDLE;
typedef SQLHANDLE               SQLHENV;
typedef SQLHANDLE               SQLHDBC;
typedef SQLHANDLE               SQLHSTMT;
typedef SQLHANDLE               SQLHDESC;

/* SQL portable types for C */
typedef unsigned char           UCHAR;
typedef signed char             SCHAR;
typedef SCHAR                   SQLSCHAR;
typedef long int                SDWORD;
typedef short int               SWORD;
typedef unsigned long int       UDWORD;
typedef unsigned short int      UWORD;
#ifndef _WIN64
/* typedef UDWORD               SQLUINTEGER; */
#endif

typedef signed long             SLONG;
typedef signed short            SSHORT;
typedef unsigned long           ULONG;
typedef unsigned short          USHORT;
typedef double                  SDOUBLE;
typedef double                  LDOUBLE; 
typedef float                   SFLOAT;

typedef void*                   HENV;
typedef void*                   HDBC;
typedef void*                   HSTMT;

typedef SQLCHAR                 SQLTCHAR;

#if defined(WIN32) || defined(OS2)
typedef HWND                    SQLHWND;
#elif defined (UNIX)
/* change following two lines as needed for particular flavor of UNIX */
/* typedef Widget               SQLHWND; */
typedef SQLPOINTER              SQLHWND;
#else
/* placehold for future O/S GUI window handle definition */
typedef SQLPOINTER              SQLHWND;
#endif

#ifndef	__SQLDATE
#define	__SQLDATE
/* transfer types for DATE, TIME, TIMESTAMP */
typedef struct tagDATE_STRUCT
{
        SQLSMALLINT    year;
        SQLUSMALLINT   month;
        SQLUSMALLINT   day;
} DATE_STRUCT;

typedef DATE_STRUCT     SQL_DATE_STRUCT;

typedef struct tagTIME_STRUCT
{
        SQLUSMALLINT   hour;
        SQLUSMALLINT   minute;
        SQLUSMALLINT   second;
} TIME_STRUCT;

typedef TIME_STRUCT     SQL_TIME_STRUCT;

typedef struct tagTIMESTAMP_STRUCT
{
        SQLSMALLINT    year;
        SQLUSMALLINT   month;
        SQLUSMALLINT   day;
        SQLUSMALLINT   hour;
        SQLUSMALLINT   minute;
        SQLUSMALLINT   second;
        SQLUINTEGER    fraction;
} TIMESTAMP_STRUCT;

typedef TIMESTAMP_STRUCT        SQL_TIMESTAMP_STRUCT;


/*
 * enumerations for DATETIME_INTERVAL_SUBCODE values for interval data types
 * these values are from SQL-92
 */

typedef enum 
{
    SQL_IS_YEAR                 = 1,
    SQL_IS_MONTH                = 2,
    SQL_IS_DAY                  = 3,
    SQL_IS_HOUR                 = 4,
    SQL_IS_MINUTE               = 5,
    SQL_IS_SECOND               = 6,
    SQL_IS_YEAR_TO_MONTH        = 7,
    SQL_IS_DAY_TO_HOUR          = 8,
    SQL_IS_DAY_TO_MINUTE        = 9,
    SQL_IS_DAY_TO_SECOND        = 10,
    SQL_IS_HOUR_TO_MINUTE       = 11,
    SQL_IS_HOUR_TO_SECOND       = 12,
    SQL_IS_MINUTE_TO_SECOND     = 13
} SQLINTERVAL;


typedef struct tagSQL_YEAR_MONTH
{
    SQLUINTEGER year;
    SQLUINTEGER month;
} SQL_YEAR_MONTH_STRUCT;

typedef struct tagSQL_DAY_SECOND
{
    SQLUINTEGER day;
    SQLUINTEGER hour;
    SQLUINTEGER minute;
    SQLUINTEGER second;
    SQLUINTEGER fraction;
} SQL_DAY_SECOND_STRUCT;

typedef struct tagSQL_INTERVAL_STRUCT
{
    SQLINTERVAL     interval_type;
    SQLSMALLINT     interval_sign;
    union 
    {
        SQL_YEAR_MONTH_STRUCT   year_month;
        SQL_DAY_SECOND_STRUCT   day_second;
    } intval;

} SQL_INTERVAL_STRUCT;

#endif	/* __SQLDATE	*/

/* the ODBC C types for SQL_C_SBIGINT and SQL_C_UBIGINT */
#if (_MSC_VER >= 900)
#define ODBCINT64       __int64
#else
#define ODBCINT64       long long
#endif  

/* If using other compilers, define ODBCINT64 to the 
   approriate 64 bit integer type */
#ifdef ODBCINT64
typedef ODBCINT64               SQLBIGINT;
typedef unsigned ODBCINT64      SQLUBIGINT;
#endif

/* internal representation of numeric data type */
#define SQL_MAX_NUMERIC_LEN     16
typedef struct tagSQL_NUMERIC_STRUCT
{
    SQLCHAR     precision;
    SQLSCHAR    scale;
    SQLCHAR     sign;   /* 1 if positive, 0 if negative */
    SQLCHAR     val[SQL_MAX_NUMERIC_LEN];
} SQL_NUMERIC_STRUCT;

#ifdef GUID_DEFINED
typedef GUID	SQLGUID;
#else
/* size is 16 */
typedef struct  tagSQLGUID
{
    UDWORD Data1;
    UWORD Data2;
    UWORD Data3;
    UCHAR Data4[ 8 ];
} SQLGUID;
#endif  /* GUID_DEFINED */

/* special length/indicator values */
#define SQL_NULL_DATA                              -1
#define SQL_DATA_AT_EXEC                           -2

/* return values from functions */
#define SQL_SUCCESS                                 0
#define SQL_SUCCESS_WITH_INFO                       1
#define SQL_STILL_EXECUTING                         2
#define SQL_NEED_DATA                              99
#define SQL_NO_DATA                               100
#define SQL_ERROR                                  -1
#define SQL_INVALID_HANDLE                         -2

/* test for SQL_SUCCESS or SQL_SUCCESS_WITH_INFO */
#define SQL_SUCCEEDED(rc) (((rc)&(~1))==0)

/* flags for null-terminated string */
#define SQL_NTS                                    -3
#define SQL_NTSL                                  -3L

/* maximum message length */
#define SQL_MAXIMUM_MESSAGE_LENGTH                512
#define SQL_MAX_MESSAGE_LENGTH       SQL_MAXIMUM_MESSAGE_LENGTH

/* maximum identifier length */
#define SQL_MAXIMUM_ID_LENGTH                      18
#define SQL_MAX_ID_LENGTH            SQL_MAXIMUM_ID_LENGTH

/* date/time length constants */
/* add p+1 for time and timestamp if precision is nonzero */
#define SQL_DATE_LENGTH                            10
#define SQL_TIME_LENGTH                             8
#define SQL_TIMESTAMP_LENGTH                       19

/* handle type identifiers */
#define SQL_HANDLE_ENV                              1
#define SQL_HANDLE_DBC                              2
#define SQL_HANDLE_STMT                             3
#define SQL_HANDLE_DESC                             4

/* environment attribute */
#define SQL_ATTR_OUTPUT_NTS                     10001

/* connection attribute */
#define SQL_ATTR_AUTO_IPD                       10001
#define SQL_ATTR_METADATA_ID                    10014

/* statement attributes */
#define SQL_ATTR_APP_ROW_DESC                   10010
#define SQL_ATTR_APP_PARAM_DESC                 10011
#define SQL_ATTR_IMP_ROW_DESC                   10012
#define SQL_ATTR_IMP_PARAM_DESC                 10013
#define SQL_ATTR_CURSOR_SCROLLABLE                 -1
#define SQL_ATTR_CURSOR_SENSITIVITY                -2

#define SQL_DESC_COUNT                  1001
#define SQL_DESC_TYPE                   1002
#define SQL_DESC_LENGTH                 1003
#define SQL_DESC_OCTET_LENGTH_PTR       1004
#define SQL_DESC_PRECISION              1005
#define SQL_DESC_SCALE                  1006
#define SQL_DESC_DATETIME_INTERVAL_CODE 1007
#define SQL_DESC_NULLABLE               1008
#define SQL_DESC_INDICATOR_PTR          1009
#define SQL_DESC_DATA_PTR               1010
#define SQL_DESC_NAME                   1011
#define SQL_DESC_UNNAMED                1012
#define SQL_DESC_OCTET_LENGTH           1013
#define SQL_DESC_ALLOC_TYPE             1099

#define SQL_DESC_ARRAY_SIZE             20
#define SQL_DESC_ARRAY_STATUS_PTR       21
#define SQL_DESC_AUTO_UNIQUE_VALUE      SQL_COLUMN_AUTO_INCREMENT
#define SQL_DESC_BASE_COLUMN_NAME       22
#define SQL_DESC_BASE_TABLE_NAME        23
#define SQL_DESC_BIND_OFFSET_PTR        24
#define SQL_DESC_BIND_TYPE              25
#define SQL_DESC_CASE_SENSITIVE         SQL_COLUMN_CASE_SENSITIVE
#define SQL_DESC_CATALOG_NAME           SQL_COLUMN_QUALIFIER_NAME
#define SQL_DESC_CONCISE_TYPE           SQL_COLUMN_TYPE
#define SQL_DESC_DATETIME_INTERVAL_PRECISION    26
#define SQL_DESC_DISPLAY_SIZE           SQL_COLUMN_DISPLAY_SIZE
#define SQL_DESC_FIXED_PREC_SCALE       SQL_COLUMN_MONEY
#define SQL_DESC_LABEL                  SQL_COLUMN_LABEL
#define SQL_DESC_LITERAL_PREFIX         27
#define SQL_DESC_LITERAL_SUFFIX         28
#define SQL_DESC_LOCAL_TYPE_NAME        29
#define	SQL_DESC_MAXIMUM_SCALE          30
#define SQL_DESC_MINIMUM_SCALE          31
#define SQL_DESC_NUM_PREC_RADIX         32
#define SQL_DESC_PARAMETER_TYPE         33
#define SQL_DESC_ROWS_PROCESSED_PTR     34
#define SQL_DESC_ROWVER                 35
#define SQL_DESC_SCHEMA_NAME    SQL_COLUMN_OWNER_NAME
#define SQL_DESC_SEARCHABLE     SQL_COLUMN_SEARCHABLE
#define SQL_DESC_TYPE_NAME      SQL_COLUMN_TYPE_NAME
#define SQL_DESC_TABLE_NAME     SQL_COLUMN_TABLE_NAME
#define SQL_DESC_UNSIGNED       SQL_COLUMN_UNSIGNED
#define SQL_DESC_UPDATABLE      SQL_COLUMN_UPDATABLE

/* identifiers of fields in the diagnostics area */
#define SQL_DIAG_RETURNCODE                         1
#define SQL_DIAG_NUMBER                             2
#define SQL_DIAG_ROW_COUNT                          3
#define SQL_DIAG_SQLSTATE                           4
#define SQL_DIAG_NATIVE                             5
#define SQL_DIAG_MESSAGE_TEXT                       6
#define SQL_DIAG_DYNAMIC_FUNCTION                   7
#define SQL_DIAG_CLASS_ORIGIN                       8
#define SQL_DIAG_SUBCLASS_ORIGIN                    9
#define SQL_DIAG_CONNECTION_NAME                   10
#define SQL_DIAG_SERVER_NAME                       11
#define SQL_DIAG_DYNAMIC_FUNCTION_CODE             12
#define SQL_DIAG_MORE                              13
#define SQL_DIAG_CONDITION_NUMBER                  14
#define SQL_DIAG_CONSTRAINT_CATALOG                15
#define SQL_DIAG_CONSTRAINT_SCHEMA                 16
#define SQL_DIAG_CONSTRAINT_NAME                   17
#define SQL_DIAG_CATALOG_NAME                      18
#define SQL_DIAG_SCHEMA_NAME                       19
#define SQL_DIAG_TABLE_NAME                        20
#define SQL_DIAG_COLUMN_NAME                       21
#define SQL_DIAG_CURSOR_NAME                       22
#define SQL_DIAG_MESSAGE_LENGTH                    23
#define SQL_DIAG_MESSAGE_OCTET_LENGTH              24

/* dynamic function codes returned in diagnostics area*/

#define SQL_DIAG_ALTER_DOMAIN                       3
#define SQL_DIAG_ALTER_TABLE                        4
#define SQL_DIAG_CALL                               7
#define SQL_DIAG_CREATE_ASSERTION                   6
#define SQL_DIAG_CREATE_CHARACTER_SET               8
#define SQL_DIAG_CREATE_COLLATION                  10
#define SQL_DIAG_CREATE_DOMAIN                     23
#define SQL_DIAG_CREATE_INDEX                    (-1)
#define SQL_DIAG_CREATE_SCHEMA                     64
#define SQL_DIAG_CREATE_TABLE                      77
#define SQL_DIAG_CREATE_TRANSLATION                79
#define SQL_DIAG_CREATE_VIEW                       84
#define SQL_DIAG_DELETE_WHERE                      19
#define SQL_DIAG_DROP_ASSERTION                    24
#define SQL_DIAG_DROP_CHARACTER_SET                25
#define SQL_DIAG_DROP_COLLATION                    26
#define SQL_DIAG_DROP_DOMAIN                       27
#define SQL_DIAG_DROP_INDEX                      (-2)
#define SQL_DIAG_DROP_SCHEMA                       31
#define SQL_DIAG_DROP_TABLE                        32
#define SQL_DIAG_DROP_TRANSLATION                  33
#define SQL_DIAG_DROP_VIEW                         36
#define SQL_DIAG_DYNAMIC_DELETE_CURSOR             54
#define SQL_DIAG_DYNAMIC_UPDATE_CURSOR             55
#define SQL_DIAG_GRANT                             48
#define SQL_DIAG_INSERT                            50
#define SQL_DIAG_REVOKE                            59
#define SQL_DIAG_SELECT                            41
#define SQL_DIAG_SELECT_CURSOR                     85
#define SQL_DIAG_SET_CATALOG                       66
#define SQL_DIAG_SET_CONSTRAINT                    68
#define SQL_DIAG_SET_NAMES                         72
#define SQL_DIAG_SET_SCHEMA                        74
#define SQL_DIAG_SET_SESSION_AUTHORIZATION         76
#define SQL_DIAG_SET_TIME_ZONE                     71
#define SQL_DIAG_SET_TRANSACTION                   75
#define SQL_DIAG_UNKNOWN_STATEMENT                  0
#define SQL_DIAG_UPDATE_WHERE                      82

/* SQL data type codes */
#define SQL_UNKNOWN_TYPE                            0
#define SQL_CHAR                                    1
#define SQL_NUMERIC                                 2
#define SQL_DECIMAL                                 3
#define SQL_INTEGER                                 4
#define SQL_SMALLINT                                5
#define SQL_FLOAT                                   6
#define SQL_REAL                                    7
#define SQL_DOUBLE                                  8
#define SQL_DATETIME                                9
#define SQL_INTERVAL                               10
#define SQL_VARCHAR                                12
#define SQL_BIT_VARYING                            15

/*      Concise codes for datetime and interval data types         */

#define SQL_TYPE_DATE                              91
#define SQL_TYPE_TIME                              92
#define SQL_TYPE_TIME_WITH_TIMEZONE                94
#define SQL_TYPE_TIMESTAMP                         93
#define SQL_TYPE_TIMESTAMP_WITH_TIMEZONE           95

/*      GetTypeInfo request for all data types  */
#define SQL_ALL_TYPES                               0

/* BindCol()  and BindParam() default conversion code */
#define SQL_DEFAULT                                99

/*      GetData code indicating that the application parameter */

/*      descriptor specifies the data type */
#define SQL_ARD_TYPE                              -99

/* date/time type subcodes */
#define SQL_CODE_DATE                               1
#define SQL_CODE_TIME                               2
#define SQL_CODE_TIMESTAMP                          3
#define SQL_CODE_TIME_ZONE                          4
#define SQL_CODE_TIMESTAMP_ZONE                     5

/* interval qualifier codes */
#define SQL_DAY                                     3
#define SQL_DAY_TO_HOUR                             8
#define SQL_DAY_TO_MINUTE                           9
#define SQL_DAY_TO_SECOND                          10
#define SQL_HOUR                                    4
#define SQL_HOUR_TO_MINUTE                         11
#define SQL_HOUR_TO_SECOND                         12
#define SQL_MINUTE                                  5
#define SQL_MINUTE_TO_SECOND                       13
#define SQL_MONTH                                   2
#define SQL_SECOND                                  6
#define SQL_YEAR                                    1
#define SQL_YEAR_TO_MONTH                           7

/* CLI option values */
#define SQL_FALSE                                   0
#define SQL_TRUE                                    1
#define SQL_NONSCROLLABLE                           0
#define SQL_SCROLLABLE                              1

/* Parameter mode values */
#define SQL_PARAM_MODE_IN                           1
#define SQL_PARAM_MODE_OUT                          4
#define SQL_PARAM_MODE_INOUT                        2
#define SQL_PARAM_MODE_NONE                         0

/* values of NULLABLE field in descriptor */
#define SQL_NO_NULLS                                0
#define SQL_NULLABLE                                1

/* Value returned by SQLGetTypeInfo() to denote that it is
 * not known whether or not a data type supports null values.
 */
#define SQL_NULLABLE_UNKNOWN  2

/*      Values returned by GetTypeInfo for the SEARCHABLE column        */

#define SQL_PRED_NONE                               0
#define SQL_PRED_CHAR                               1
#define SQL_PRED_BASIC                              2

/* values of UNNAMED field in descriptor */
#define SQL_NAMED                                   0
#define SQL_UNNAMED                                 1

/* values of ALLOC_TYPE field in descriptor */
#define SQL_DESC_ALLOC_AUTO                         1
#define SQL_DESC_ALLOC_USER                         2

/* Codes used for FetchOrientation in SQLFetchScroll(),
   and in SQLDataSources()
*/
#define SQL_FETCH_NEXT      1
#define SQL_FETCH_FIRST     2

/* Other codes used for FetchOrientation in SQLFetchScroll() */
#define SQL_FETCH_LAST      3
#define SQL_FETCH_PRIOR     4
#define SQL_FETCH_ABSOLUTE  5
#define SQL_FETCH_RELATIVE  6

/* EndTran()  options */
#define SQL_COMMIT                                  0
#define SQL_ROLLBACK                                1

/* FreeStmt()  options */
#define SQL_CLOSE                                   0
#define SQL_DROP                                    1
#define SQL_UNBIND                                  2
#define SQL_RESET_PARAMS                            3

/* null handles returned by AllocHandle()  */
#define SQL_NULL_HENV                               0
#define SQL_NULL_HDBC                               0
#define SQL_NULL_HSTMT                              0
#define SQL_NULL_HDESC                              0

/*      GetFunctions values to identify CLI routines    */
#define SQL_API_SQLALLOCCONNECT                     1
#define SQL_API_SQLALLOCENV                         2
#define SQL_API_SQLALLOCHANDLE                   1001
#define SQL_API_SQLALLOCSTMT                        3
#define SQL_API_SQLBINDCOL                          4
#define SQL_API_SQLBINDPARAM                     1002

#define SQL_API_SQLCANCEL                           5
#define SQL_API_SQLCLOSECURSOR                   1003
#define SQL_API_SQLCOLATTRIBUTE                     6
#define SQL_API_SQLCOLUMNS                         40
#define SQL_API_SQLCONNECT                          7
#define SQL_API_SQLCOPYDESC                      1004
#define SQL_API_SQLDATASOURCES                     57
#define SQL_API_SQLDESCRIBECOL                      8
#define SQL_API_SQLDISCONNECT                       9
#define SQL_API_SQLENDTRAN                       1005
#define SQL_API_SQLERROR                           10
#define SQL_API_SQLEXECDIRECT                      11
#define SQL_API_SQLEXECUTE                         12
#define SQL_API_SQLFETCH                           13
#define SQL_API_SQLFETCHSCROLL                   1021
#define SQL_API_SQLFREECONNECT                     14
#define SQL_API_SQLFREEENV                         15
#define SQL_API_SQLFREEHANDLE                    1006
#define SQL_API_SQLFREESTMT                        16
#define SQL_API_SQLGETCONNECTATTR                1007
#define SQL_API_SQLGETCONNECTOPTION                42
#define SQL_API_SQLGETCURSORNAME                   17
#define SQL_API_SQLGETDATA                         43
#define SQL_API_SQLGETDESCFIELD                  1008
#define SQL_API_SQLGETDESCREC                    1009
#define SQL_API_SQLGETDIAGFIELD                  1010
#define SQL_API_SQLGETDIAGREC                    1011
#define SQL_API_SQLGETENVATTR                    1012
#define SQL_API_SQLGETFUNCTIONS                    44
#define SQL_API_SQLGETINFO                         45
#define SQL_API_SQLGETSTMTATTR                   1014
#define SQL_API_SQLGETSTMTOPTION                   46
#define SQL_API_SQLGETTYPEINFO                     47
#define SQL_API_SQLNUMRESULTCOLS                   18
#define SQL_API_SQLPARAMDATA                       48
#define SQL_API_SQLPREPARE                         19
#define SQL_API_SQLPUTDATA                         49
#define SQL_API_SQLROWCOUNT                        20
#define SQL_API_SQLSETCONNECTATTR                1016
#define SQL_API_SQLSETCONNECTOPTION                50
#define SQL_API_SQLSETCURSORNAME                   21
#define SQL_API_SQLSETDESCFIELD                  1017
#define SQL_API_SQLSETDESCREC                    1018
#define SQL_API_SQLSETENVATTR                    1019
#define SQL_API_SQLSETPARAM                        22
#define SQL_API_SQLSETPOS                          68
#define SQL_API_SQLSETSTMTATTR                   1020
#define SQL_API_SQLSETSTMTOPTION                   51
#define SQL_API_SQLSPECIALCOLUMNS                  52
#define SQL_API_SQLSTATISTICS                      53
#define SQL_API_SQLTABLES                          54
#define SQL_API_SQLTRANSACT                        23

/*      Information requested by GetInfo        */
#define SQL_MAXIMUM_DRIVER_CONNECTIONS              0
#define SQL_MAX_DRIVER_CONNECTIONS    SQL_MAXIMUM_DRIVER_CONNECTIONS 
#define SQL_MAXIMUM_CONCURRENT_ACTIVITIES           1
#define SQL_MAX_CONCURRENT_ACTIVITIES SQL_MAXIMUM_CONCURRENT_ACTIVITIES 
#define SQL_DATA_SOURCE_NAME                        2
#define SQL_FETCH_DIRECTION                         8
#define SQL_SERVER_NAME                            13
#define SQL_SEARCH_PATTERN_ESCAPE                  14
#define SQL_DBMS_NAME                              17
#define SQL_DBMS_VERSION                           18
#define SQL_DBMS_VER                  SQL_DBMS_VERSION
#define SQL_ACCESSIBLE_TABLES                      19
#define SQL_ACCESSIBLE_PROCEDURES                  20
#define SQL_CURSOR_COMMIT_BEHAVIOR                 23
#define SQL_DATA_SOURCE_READ_ONLY                  25
#define SQL_DEFAULT_TRANSACTION_ISOLATION          26
#define SQL_DEFAULT_TXN_ISOLATION     SQL_DEFAULT_TRANSACTION_ISOLATION   

#define SQL_IDENTIFIER_CASE                        28
#define SQL_IDENTIFIER_QUOTE_CHAR                  29
#define SQL_MAXIMUM_COLUMN_NAME_LENGTH             30
#define SQL_MAX_COLUMN_NAME_LEN       SQL_MAXIMUM_COLUMN_NAME_LENGTH     
#define SQL_MAXIMUM_CURSOR_NAME_LENGTH             31
#define SQL_MAX_CURSOR_NAME_LEN       SQL_MAXIMUM_CURSOR_NAME_LENGTH   
#define SQL_MAXIMUM_SCHEMA_NAME_LENGTH             32
#define SQL_MAX_SCHEMA_NAME_LEN       SQL_MAXIMUM_SCHEMA_NAME_LENGTH  
#define SQL_MAXIMUM_CATALOG_NAME_LENGTH            34
#define SQL_MAX_CATALOG_NAME_LEN      SQL_MAXIMUM_CATALOG_NAME_LENGTH 
#define SQL_MAXIMUM_TABLE_NAME_LENGTH              35
#define SQL_MAX_TABLE_NAME_LEN        SQL_MAXIMUM_TABLE_NAME_LENGTH   
#define SQL_SCROLL_CONCURRENCY                     43
#define SQL_TRANSACTION_CAPABLE                    46
#define SQL_TXN_CAPABLE               SQL_TRANSACTION_CAPABLE    
#define SQL_USER_NAME                              47
#define SQL_TRANSACTION_ISOLATION_OPTION           72
#define SQL_TXN_ISOLATION_OPTION    SQL_TRANSACTION_ISOLATION_OPTION 
#define SQL_INTEGRITY                              73
#define SQL_GETDATA_EXTENSIONS                     81
#define SQL_NULL_COLLATION                         85
#define SQL_ALTER_TABLE                            86
#define SQL_ORDER_BY_COLUMNS_IN_SELECT             90
#define SQL_SPECIAL_CHARACTERS                     94
#define SQL_MAXIMUM_COLUMNS_IN_GROUP_BY            97
#define SQL_MAX_COLUMNS_IN_INDEX                   98
#define SQL_MAXIMUM_COLUMNS_IN_INDEX    SQL_MAX_COLUMNS_IN_INDEX
#define SQL_MAX_COLUMNS_IN_GROUP_BY     SQL_MAXIMUM_COLUMNS_IN_GROUP_BY  
#define SQL_MAXIMUM_COLUMNS_IN_ORDER_BY            99
#define SQL_MAX_COLUMNS_IN_ORDER_BY    SQL_MAXIMUM_COLUMNS_IN_ORDER_BY 
#define SQL_MAXIMUM_COLUMNS_IN_SELECT             100
#define SQL_MAX_COLUMNS_IN_SELECT      SQL_MAXIMUM_COLUMNS_IN_SELECT 
#define SQL_MAXIMUM_COLUMNS_IN_TABLE              101
#define SQL_MAX_COLUMNS_IN_TABLE       SQL_MAXIMUM_COLUMNS_IN_TABLE 
#define SQL_MAX_INDEX_SIZE                        102
#define SQL_MAXIMUM_INDEX_SIZE             SQL_MAX_INDEX_SIZE
#define SQL_MAX_ROW_SIZE                           104
#define SQL_MAXIMUM_ROW_SIZE               SQL_MAX_ROW_SIZE
#define SQL_MAXIMUM_STATEMENT_LENGTH              105
#define SQL_MAX_STATEMENT_LEN              SQL_MAXIMUM_STATEMENT_LENGTH
#define SQL_MAXIMUM_TABLES_IN_SELECT              106
#define SQL_MAX_TABLES_IN_SELECT           SQL_MAXIMUM_TABLES_IN_SELECT  
#define SQL_MAXIMUM_USER_NAME_LENGTH              107
#define SQL_MAX_USER_NAME_LEN              SQL_MAXIMUM_USER_NAME_LENGTH   
#define SQL_OUTER_JOIN_CAPABILITIES               115
#define SQL_OJ_CAPABILITIES                SQL_OUTER_JOIN_CAPABILITIES

#define SQL_XOPEN_CLI_YEAR                      10000
#define SQL_CURSOR_SENSITIVITY                  10001
#define SQL_DESCRIBE_PARAMETER                  10002
#define SQL_CATALOG_NAME                        10003
#define SQL_COLLATING_SEQUENCE                  10004
#define SQL_COLLATION_SEQ                  SQL_COLLATING_SEQUENCE
#define SQL_MAXIMUM_IDENTIFIER_LENGTH           10005
#define SQL_MAX_IDENTIFIER_LEN             SQL_MAXIMUM_IDENTIFIER_LENGTH

/* Statement attribute values for cursor sensitivity */
#define SQL_UNSPECIFIED                   0
#define SQL_INSENSITIVE                   1
#define SQL_SENSITIVE                     2

/* null handle used when allocating HENV */
#define SQL_NULL_HANDLE                            0L
/* Values that may appear in the result set of SQLSpecialColumns() */
#define SQL_SCOPE_CURROW    0
#define SQL_SCOPE_TRANSACTION 1
#define SQL_SCOPE_SESSION   2

/* Reserved values for UNIQUE argument of SQLStatistics() */
#define SQL_INDEX_UNIQUE    0
#define SQL_INDEX_ALL       1

/* Values that may appear in the result set of SQLStatistics() */
#define SQL_INDEX_CLUSTERED 1
#define SQL_INDEX_HASHED    2
#define SQL_INDEX_OTHER     3

/* SQL_ALTER_TABLE bitmasks             */
#define SQL_AT_ADD_COLUMN                 0x00000001L
#define SQL_AT_DROP_COLUMN                0x00000002L
#define SQL_AT_ALTER_COLUMN               0x00000004L
#define SQL_AT_ADD_CONSTRAINT             0x00000008L
#define SQL_AT_DROP_CONSTRAINT            0x00000010L

/* SQL_CURSOR_COMMIT_BEHAVIOR values         */
#define SQL_CB_DELETE                               0
#define SQL_CB_CLOSE                                1
#define SQL_CB_PRESERVE                             2

/* SQL_FETCH_DIRECTION bitmasks             */
#define SQL_FD_FETCH_NEXT                 0x00000001L
#define SQL_FD_FETCH_FIRST                0x00000002L
#define SQL_FD_FETCH_LAST                 0x00000004L

#define SQL_FD_FETCH_PRIOR                0x00000008L
#define SQL_FD_FETCH_ABSOLUTE             0x00000010L
#define SQL_FD_FETCH_RELATIVE             0x00000020L

/* SQL_GETDATA_EXTENSIONS bitmasks           */
#define SQL_GD_ANY_COLUMN                 0x00000001L
#define SQL_GD_ANY_ORDER                  0x00000002L

/* SQL_IDENTIFIER_CASE values             */
#define SQL_IC_UPPER                                1
#define SQL_IC_LOWER                                2
#define SQL_IC_SENSITIVE                            3
#define SQL_IC_MIXED                                4

/* SQL_NULL_COLLATION values             */
#define SQL_NC_HIGH                                 1
#define SQL_NC_LOW                                  2

/* SQL_OUTER_JOIN_CAPABILITIES bitmasks */
#define SQL_OUTER_JOIN_LEFT            0x00000001L
#define SQL_OJ_LEFT                    SQL_OUTER_JOIN_LEFT
#define SQL_OUTER_JOIN_RIGHT           0x00000002L
#define SQL_OJ_RIGHT                   SQL_OUTER_JOIN_RIGHT 
#define SQL_OUTER_JOIN_FULL            0x00000004L
#define SQL_OJ_FULL                    SQL_OUTER_JOIN_FULL 
#define SQL_OUTER_JOIN_NESTED          0x00000008L
#define SQL_OJ_NESTED                  SQL_OUTER_JOIN_NESTED 
#define SQL_OUTER_JOIN_NOT_ORDERED     0x00000010L
#define SQL_OJ_NOT_ORDERED             SQL_OUTER_JOIN_NOT_ORDERED 
#define SQL_OUTER_JOIN_INNER           0x00000020L
#define SQL_OJ_INNER                   SQL_OUTER_JOIN_INNER 
#define SQL_OUTER_JOIN_ALL_COMPARISON_OPS 0x00000040L
#define SQL_OJ_ALL_COMPARISON_OPS      SQL_OUTER_JOIN_ALL_COMPARISON_OPS 

/* SQL_SCROLL_CONCURRENCY bitmasks           */
#define SQL_SCCO_READ_ONLY                0x00000001L
#define SQL_SCCO_LOCK                     0x00000002L
#define SQL_SCCO_OPT_ROWVER               0x00000004L
#define SQL_SCCO_OPT_VALUES               0x00000008L

/* SQL_TRANSACTION_CAPABLE values               */
#define SQL_TC_NONE                                 0
#define SQL_TC_DML                                  1
#define SQL_TC_ALL                                  2
#define SQL_TC_DDL_COMMIT                           3
#define SQL_TC_DDL_IGNORE                           4

/* SQL_TRANSACTION_ISOLATION bitmasks             */
#define SQL_TRANSACTION_READ_UNCOMMITTED  0x00000001L
#define SQL_TXN_READ_UNCOMMITTED  SQL_TRANSACTION_READ_UNCOMMITTED
#define SQL_TRANSACTION_READ_COMMITTED    0x00000002L
#define SQL_TXN_READ_COMMITTED    SQL_TRANSACTION_READ_COMMITTED  
#define SQL_TRANSACTION_REPEATABLE_READ   0x00000004L
#define SQL_TXN_REPEATABLE_READ   SQL_TRANSACTION_REPEATABLE_READ
#define SQL_TRANSACTION_SERIALIZABLE      0x00000008L
#define SQL_TXN_SERIALIZABLE      SQL_TRANSACTION_SERIALIZABLE   

SQLRETURN SQL_API SQLAllocConnect(SQLHENV EnvironmentHandle,
    SQLHDBC *ConnectionHandle);

SQLRETURN SQL_API SQLAllocEnv(SQLHENV *EnvironmentHandle);

SQLRETURN SQL_API SQLAllocHandle(SQLSMALLINT HandleType,
    SQLHANDLE InputHandle, SQLHANDLE *OutputHandle);

SQLRETURN SQL_API SQLAllocStmt(SQLHDBC ConnectionHandle,
    SQLHANDLE *StatementHandle);

SQLRETURN  SQL_API SQLBindCol(SQLHSTMT StatementHandle,
    SQLUSMALLINT ColumnNumber, SQLSMALLINT TargetType,
    SQLPOINTER TargetValue, SQLLEN BufferLength,
    SQLLEN *StrLen_or_Ind);

SQLRETURN  SQL_API SQLBindParam(SQLHSTMT StatementHandle,
    SQLUSMALLINT ParameterNumber, SQLSMALLINT ValueType,
    SQLSMALLINT ParameterType, SQLULEN LengthPrecision, 
    SQLSMALLINT ParameterScale, SQLPOINTER ParameterValue,
    SQLLEN *StrLen_or_Ind);

SQLRETURN SQL_API  SQLCancel(SQLHSTMT StatementHandle);

SQLRETURN SQL_API  SQLCloseCursor(SQLHSTMT StatementHandle);

#ifdef _WIN64
SQLRETURN  SQL_API SQLColAttribute (SQLHSTMT StatementHandle,
           SQLUSMALLINT ColumnNumber, SQLUSMALLINT FieldIdentifier,
           SQLPOINTER CharacterAttribute, SQLSMALLINT BufferLength,
           SQLSMALLINT *StringLength, SQLLEN *NumericAttribute);
#else
SQLRETURN  SQL_API SQLColAttribute (SQLHSTMT StatementHandle,
           SQLUSMALLINT ColumnNumber, SQLUSMALLINT FieldIdentifier,
           SQLPOINTER CharacterAttribute, SQLSMALLINT BufferLength,
           SQLSMALLINT *StringLength, SQLPOINTER NumericAttribute);
#endif

SQLRETURN  SQL_API SQLColumns(SQLHSTMT StatementHandle,
           SQLCHAR *CatalogName, SQLSMALLINT NameLength1,
           SQLCHAR *SchemaName, SQLSMALLINT NameLength2,
           SQLCHAR *TableName, SQLSMALLINT NameLength3,
           SQLCHAR *ColumnName, SQLSMALLINT NameLength4);

SQLRETURN SQL_API  SQLConnect(SQLHDBC ConnectionHandle,
           SQLCHAR *ServerName, SQLSMALLINT NameLength1,
           SQLCHAR *UserName, SQLSMALLINT NameLength2,
           SQLCHAR *Authentication, SQLSMALLINT NameLength3);

SQLRETURN SQL_API  SQLCopyDesc(SQLHDESC SourceDescHandle,
           SQLHDESC TargetDescHandle);

SQLRETURN  SQL_API SQLDataSources(SQLHENV EnvironmentHandle,
           SQLUSMALLINT Direction, SQLCHAR *ServerName,
           SQLSMALLINT BufferLength1, SQLSMALLINT *NameLength1,
           SQLCHAR *Description, SQLSMALLINT BufferLength2,
           SQLSMALLINT *NameLength2);

SQLRETURN SQL_API  SQLDescribeCol(SQLHSTMT StatementHandle,
           UWORD ColumnNumber, SQLCHAR *ColumnName,
           SWORD BufferLength, SWORD *NameLength,
           SWORD *DataType, SQLULEN *ColumnSize,
           SWORD *DecimalDigits, SWORD *Nullable);

SQLRETURN SQL_API  SQLDisconnect(SQLHDBC ConnectionHandle);

SQLRETURN SQL_API  SQLEndTran(SQLSMALLINT HandleType, SQLHANDLE Handle,
           SQLSMALLINT CompletionType);

SQLRETURN SQL_API  SQLError(SQLHENV EnvironmentHandle,
           SQLHANDLE ConnectionHandle, SQLHSTMT StatementHandle,
           SQLCHAR *Sqlstate, SQLINTEGER *NativeError,
           SQLCHAR *MessageText, SWORD BufferLength,
           SWORD *TextLength);

SQLRETURN SQL_API  SQLExecDirect(SQLHSTMT StatementHandle,
           SQLCHAR *StatementText, SQLINTEGER TextLength);

SQLRETURN SQL_API  SQLExecute(SQLHSTMT StatementHandle);

SQLRETURN SQL_API  SQLFetch(SQLHSTMT StatementHandle);

SQLRETURN SQL_API  SQLFetchScroll(SQLHSTMT StatementHandle,
           SQLSMALLINT FetchOrientation, SQLLEN FetchOffset);

SQLRETURN SQL_API  SQLFreeConnect(SQLHDBC ConnectionHandle);

SQLRETURN SQL_API  SQLFreeEnv(SQLHENV EnvironmentHandle);

SQLRETURN SQL_API  SQLFreeHandle(SQLSMALLINT HandleType,
           SQLHANDLE Handle);

SQLRETURN SQL_API  SQLFreeStmt(SQLHSTMT StatementHandle, UWORD Option);

SQLRETURN SQL_API  SQLGetConnectAttr(SQLHDBC ConnectionHandle,
           SQLINTEGER Attribute, SQLPOINTER Value,
           SQLINTEGER BufferLength, SQLINTEGER *StringLength);

SQLRETURN  SQL_API SQLGetConnectOption(SQLHDBC ConnectionHandle,
           SQLUSMALLINT Option, SQLPOINTER Value);

SQLRETURN SQL_API  SQLGetCursorName(SQLHSTMT StatementHandle,
           SQLCHAR *CursorName, SQLSMALLINT BufferLength,
           SQLSMALLINT *NameLength);

SQLRETURN SQL_API  SQLGetData(SQLHSTMT StatementHandle,
           UWORD ColumnNumber, SQLSMALLINT TargetType,
           SQLPOINTER TargetValue, SQLLEN BufferLength,
           SQLLEN *StrLen_or_Ind);

SQLRETURN SQL_API  SQLGetDescField(SQLHDESC DescriptorHandle,
           SQLSMALLINT RecordNumber, SQLSMALLINT FieldIdentifier,

           SQLPOINTER Value, SQLINTEGER BufferLength,
           SQLINTEGER *StringLength);

SQLRETURN SQL_API  SQLGetDescRec(SQLHDESC DescriptorHandle,
           SQLSMALLINT RecordNumber, SQLCHAR *Name,
           SQLSMALLINT BufferLength, SQLSMALLINT *NameLength,
           SQLSMALLINT *Type, SQLSMALLINT *SubType,
           SQLLEN *Length, SQLSMALLINT *Precision,
           SQLSMALLINT *Scale, SQLSMALLINT *Nullable);

SQLRETURN SQL_API  SQLGetDiagField(SQLSMALLINT HandleType,
           SQLHANDLE Handle, SQLSMALLINT RecordNumber,
           SQLSMALLINT DiagIdentifier, SQLPOINTER DiagInfo,
           SQLSMALLINT BufferLength, SQLSMALLINT *StringLength);

SQLRETURN SQL_API  SQLGetDiagRec(SQLSMALLINT HandleType, 
           SQLHANDLE Handle, SQLSMALLINT RecordNumber, SQLCHAR *Sqlstate,
           SQLINTEGER *NativeError, SQLCHAR *MessageText,
           SQLSMALLINT BufferLength, SQLSMALLINT *TextLength);

SQLRETURN SQL_API  SQLGetEnvAttr(SQLHENV EnvironmentHandle,
           SQLINTEGER Attribute, SQLPOINTER Value,
           SQLINTEGER BufferLength, SQLINTEGER *StringLength);

SQLRETURN  SQL_API SQLGetFunctions(SQLHDBC ConnectionHandle,
           SQLUSMALLINT FunctionId, SQLUSMALLINT *Supported);

SQLRETURN SQL_API  SQLGetInfo(SQLHDBC ConnectionHandle,
           UWORD InfoType, SQLPOINTER InfoValue,
           SWORD BufferLength, SWORD *StringLength);


SQLRETURN SQL_API  SQLGetStmtAttr(SQLHSTMT StatementHandle,
           SQLINTEGER Attribute, SQLPOINTER Value,
           SQLINTEGER BufferLength, SQLINTEGER *StringLength);

SQLRETURN  SQL_API SQLGetStmtOption(SQLHSTMT StatementHandle,
           SQLUSMALLINT Option, SQLPOINTER Value);

SQLRETURN SQL_API  SQLGetTypeInfo(SQLHSTMT StatementHandle,
           SQLSMALLINT DataType);

SQLRETURN SQL_API  SQLNumResultCols(SQLHSTMT StatementHandle,
           SQLSMALLINT *ColumnCount);

SQLRETURN SQL_API  SQLParamData(SQLHSTMT StatementHandle,
           SQLPOINTER *Value);

SQLRETURN SQL_API  SQLPrepare(SQLHSTMT StatementHandle,
           SQLCHAR *StatementText, SQLINTEGER TextLength);

SQLRETURN SQL_API  SQLPutData(SQLHSTMT StatementHandle,
           SQLPOINTER Data, SQLLEN StrLen_or_Ind);

SQLRETURN SQL_API  SQLRowCount(SQLHSTMT StatementHandle,
           SQLLEN *RowCount);

SQLRETURN SQL_API  SQLSetConnectAttr(SQLHDBC ConnectionHandle,
           SQLINTEGER Attribute, SQLPOINTER Value,
           SQLINTEGER StringLength);

SQLRETURN  SQL_API SQLSetConnectOption(SQLHDBC ConnectionHandle,
           SQLUSMALLINT Option, SQLULEN Value);

SQLRETURN SQL_API  SQLSetCursorName(SQLHSTMT StatementHandle,
           SQLCHAR *CursorName, SQLSMALLINT NameLength);

SQLRETURN SQL_API  SQLSetDescField(SQLHDESC DescriptorHandle,
           SQLSMALLINT RecordNumber, SQLSMALLINT FieldIdentifier,
           SQLPOINTER Value, SQLINTEGER BufferLength);

SQLRETURN SQL_API  SQLSetDescRec(SQLHDESC DescriptorHandle,
           SQLSMALLINT RecordNumber, SQLSMALLINT Type,
           SQLSMALLINT SubType, SQLLEN Length,
           SQLSMALLINT Precision, SQLSMALLINT Scale,
           SQLPOINTER Data, SQLLEN *StringLength,
           SQLLEN *Indicator);

SQLRETURN SQL_API  SQLSetEnvAttr(SQLHENV EnvironmentHandle,
           SQLINTEGER Attribute, SQLPOINTER Value,
           SQLINTEGER StringLength);

SQLRETURN  SQL_API SQLSetParam(SQLHSTMT StatementHandle,
           SQLUSMALLINT ParameterNumber, SQLSMALLINT ValueType,
           SQLSMALLINT ParameterType, SQLULEN LengthPrecision,
           SQLSMALLINT ParameterScale, SQLPOINTER ParameterValue,
           SQLLEN *StrLen_or_Ind);

SQLRETURN SQL_API  SQLSetStmtAttr(SQLHSTMT StatementHandle,
           SQLINTEGER Attribute, SQLPOINTER Value,
           SQLINTEGER StringLength);

SQLRETURN  SQL_API SQLSetStmtOption(SQLHSTMT StatementHandle,
           SQLUSMALLINT Option, SQLULEN Value);

SQLRETURN  SQL_API SQLSpecialColumns(SQLHSTMT StatementHandle,
           SQLUSMALLINT IdentifierType, SQLCHAR *CatalogName,
           SQLSMALLINT NameLength1, SQLCHAR *SchemaName,
           SQLSMALLINT NameLength2, SQLCHAR *TableName,
           SQLSMALLINT NameLength3, SQLUSMALLINT Scope,
           SQLUSMALLINT Nullable);

SQLRETURN  SQL_API SQLStatistics(SQLHSTMT StatementHandle,
           SQLCHAR *CatalogName, SQLSMALLINT NameLength1,
           SQLCHAR *SchemaName, SQLSMALLINT NameLength2,
           SQLCHAR *TableName, SQLSMALLINT NameLength3,
           SQLUSMALLINT Unique, SQLUSMALLINT Reserved);

SQLRETURN  SQL_API SQLTables(SQLHSTMT StatementHandle,
           SQLCHAR *CatalogName, SQLSMALLINT NameLength1,
           SQLCHAR *SchemaName, SQLSMALLINT NameLength2,
           SQLCHAR *TableName, SQLSMALLINT NameLength3,
           SQLCHAR *TableType, SQLSMALLINT NameLength4);

SQLRETURN  SQL_API SQLTransact(SQLHENV EnvironmentHandle,
           SQLHDBC ConnectionHandle, SQLUSMALLINT CompletionType);

#ifdef __cplusplus
}                                     /* End of extern "C" { */
#endif  /* __cplusplus */

#endif /* ifndef __SQL */
#endif /* ifndef __SQLTYPES */
