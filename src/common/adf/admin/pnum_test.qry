/* 
**  	Brief file of sql queries to demonstrate the use of PNUM, 
**  	a user-defined data type.
**
**  	01-may-92 (stevet)
**  	    Added drop statement before creating view v1.
*/

drop n1\p\g

create table n1 (n5 pnum(5) not null, 
    	    	 n10 pnum(10) not null, 
    	    	 n15 pnum(15) not null, 
    	    	 n20 pnum(20) not null, 
                 n25 pnum(25) not null, 
    	    	 n30 pnum(30) not null)\p\g

/* Modify table to btree */

modify n1 to btree unique on n5\p\g

help table n1\p\g

/* Create an index on n1 */

create index n1idx on n1 (n30, n25)\p\g

drop n2\p\g

help index n1idx\p\g

/* This create should failed because of invalid length */

create table n2 (n35 pnum(35) not null)\p\g

/* Let's create another table */

create table n2 (n20 pnum(20) not null)\p\g

/* Modify n2 to hash */

modify n2 to hash unique on n20\p\g

help table n2\p\g

drop v1\p\g

/* Create a view for n2 */

create view v1 as select n20 from n2 where n20 > 0\p\g

help view v1\p\g

drop procedure p1\p\g

/* Create a procedure for n2 */

create procedure p1
(val pnum(10) not null) as
begin
    update n2
    set n20 = 9999.99
    where n20 < :val
end;
\p\g

help procedure p1\p\g

delete from n1\p\g

/*
** Insert rows to n1 using different datatypes.  Make sure the implicit 
** coercion worked as advertised 
*/

insert into n1 values (1, float4(22.22), float8(333.33), char('4444.44'), 
pnum('55555.55'), varchar('6666666.66'))\p\g

insert into n1 values (-1, float4(-22.22), float8(-333.33), char('-4444.44'), 
pnum('-55555.55'), varchar('-6666666.66'))\p\g

insert into n1 values (111, float4(222222.22), float8(33333333333.33), 
char('444444444444444444.44'), pnum('55555555555555555555555.55'), 
varchar('6666666666666666666666666666.66'))\p\g

insert into n1 values (-111, float4(-222222.22), float8(-3333333333.33), 
char('-444444444444444444.44'), pnum('-55555555555555555555555.55'), 
varchar('-6666666666666666666666666666.66'))\p\g

select * from n1\p\g

select n5 from n1\p\g

update n1 set n5=n5+0.11 where n5 > 0\p\g

select n5 from n1\p\g

delete from n1 where n20=-4444.44\p\g

select n20 from n1\p\g
 
/*
** Now we can test the comparison routines by using different 
** comparison operators. First test key column 
*/

select n5 from n1\p\g

select n5 from n1 where n5 >= 1.00 and n5 <= 111.11\p\g

/* 
** Should return the same result even though keybld() will fail 
** becasue the input value cannot fit into the key buffer       
*/

select n5 from n1 where n5 >= 1.00 and n5 <= 9999999\p\g

select n5 from n1 where n5 < 0\p\g

select n5 from n1 where n5 > 0\p\g

select n5 from n1 where n5 = 1.11\p\g

select n5 from n1 where n5 != 1.11\p\g

/* Test non-key columns */

select n20, n25 from n1\p\g

select n20 from n1 where n20 = 4444.44 or n20 = -4444.44\p\g

select n20 from n1 where n20 = 4444.45 or n20 = -4444.43\p\g

select n25 from n1 where n25 = '55555555555555555555555.55' or 
n25 = '-55555555555555555555555.55'\p\g

select n25 from n1 where n25 = '55555555555555555555555.54' or 
n25 = '-55555555555555555555555.56'\p\g
    	
select n25 from n1 where n25 != '55555555555555555555555.55' and 
n25 != '-55555555555555555555555.55'\p\g

select n25 from n1 where n25 != '55555555555555555555555.54' and 
n25 != '-55555555555555555555555.56'\p\g

select n25 from n1 where n25 <= '55555555555555555555555.55' and 
n25 >= '-55555555555555555555555.55'\p\g

select n25 from n1 where n25 < '55555555555555555555555.55' and 
n25 > '-55555555555555555555555.55'\p\g

/* Now we test the arithmetic operators */

select n5, n10, n15, n20, n25, n30 from n1\p\g

select n5 + 1.11, n10 + 22.22, n15 + 333.33, n20 + 4444.44, 
n25 + 55555.55, n30 + 666666.66 from n1\p\g

select n5 - 1.11, n10 - 22.22, n15 - 333.33, n20 - 4444.44, 
n25 - 55555.55, n30 - 666666.66 from n1\p\g

select n5 * 1.11, n10 * 1.11, n15 * 1.11, n20 * 1.11, 
n25 * 1.11 from n1\p\g

select n5 / 10, n10 / 10, n15 / 10, n20 / 10, 
n25 / 10, n30 / 10 from n1\p\g

delete from n2 \p\g

/* Make sure hashprep() routine do the right thing */

insert into n2 values ('12345678901234567.89')\p\g
insert into n2 values ('12345678901234500.00')\p\g
insert into n2 values (90.95)\p\g

select * from n2\p\g

select n20 from n2 where n20 = '12345678901234567.89'\p\g

/* Try DBPROC */

help procedure p1\p\g

execute procedure p1 (val=100)\p\g

select * from n2
\p\g

/* COPY tests */

copy table n1 () into 'n1.dat'\p\g

delete from n1\g

copy table n1 () from 'n1.dat'\p\g

select * from n1\p\g

copy table n1 (n5=char(10), n10=char(15), n15=char(20),
    	       n20=char(25), n25=char(30), n30=char(35)) into 'n1.dat'\p\g

delete from n1\p\g

copy table n1 (n5=char(10), n10=char(15), n15=char(20),
    	       n20=char(25), n25=char(30), n30=char(35)) from 'n1.dat'\p\g

select * from n1\p\g

/* Test joining two pnum columns from two different tables */

delete from n2\p\g

insert into n2 values (1.11)\p\g

insert into n2 values (22.22)\p\g

insert into n2 values (999.99)\p\g

select * from n2\p\g

select a.n5, b.n20, a.n5+b.n20, a.n5*b.n20 
from n1 a, n2 b where a.n5 = b.n20\p\g

select a.n10, b.n20, a.n10+b.n20, a.n10*b.n20 
from n1 a, n2 b where a.n10 = b.n20\p\g

/* currency() tests */

delete from n2\p\g

insert into n2 values ('123.45')\p\g
insert into n2 values ('1234.56')\p\g
insert into n2 values ('1234567890123456.78')\p\g

select 'Default', currency( n20) from n2\p\g

select 'US', currency( n20, '-cUS$') from n2\p\g 

select 'Sweden', currency( n20, '-cSEK -t. -d,') from n2\p\g

select 'France', currency( n20, '-c-F -t. -d,') from n2\p\g

select 'Japan', currency( n20, '-cY -s0') from n2\p\g

/* fraction() tests */
drop n3\p\g

create table n3 (col1 pnum(20))\p\g

insert into n3 values ( pnum('17-1/4', '-f/ -d-'))\p\g
insert into n3 values ( pnum('17-1/2', '-f/ -d-'))\p\g
insert into n3 values ( pnum('18-1/4', '-f/ -d-'))\p\g
insert into n3 values ( pnum('18-3/4', '-f/ -d-'))\p\g

select fraction( col1) from n3\p\g

select fraction( col1, '-d-') from n3\p\g

select fraction( col1, '-d-') + ' - 18-1/2 ==>' + 
       fraction( col1 - pnum('18-1/2', '-f/ -d-'), '-d-') from n3\p\g


/* pnum() tests */ 

drop n4\p\g
 
create table n4 (col1 char(34), col2 pnum(20))\p\g

insert into n4 select currency(n20), 
pnum( currency(n20)) from n2\p\g

insert into n4 select currency(n20, '-cUS$'), 
pnum( currency(n20, '-cUS$'), '-cUS$') from n2\p\g

insert into n4 select currency(n20, '-cSEK -t. -d,'), 
pnum( currency(n20, '-cSEK -t. -d,'), '-cSEK -t. -d,') from n2\p\g

insert into n4 select currency(n20, '-cY -s'), 
pnum( currency(n20, '-cY -s'), '-cY -s') from n2\p\g

select * from n4\p\g
